

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Sep 21 21:38:12 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1783
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39     0000                     
    40                           ; Generated 07/09/2023 GMT
    41                           ; 
    42                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F1783 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74     0008                     bsr             equ	8
    75     0005                     fsr0h           equ	5
    76     0004                     fsr0l           equ	4
    77     0007                     fsr1h           equ	7
    78     0006                     fsr1l           equ	6
    79     0000                     indf            equ	0
    80     0000                     indf0           equ	0
    81     0001                     indf1           equ	1
    82     000B                     intcon          equ	11
    83     0002                     pc              equ	2
    84     0002                     pcl             equ	2
    85     000A                     pclath          equ	10
    86     0003                     status          equ	3
    87     0009                     wreg            equ	9
    88     0000                     INDF0           equ	0	;# 
    89     0001                     INDF1           equ	1	;# 
    90     0002                     PCL             equ	2	;# 
    91     0003                     STATUS          equ	3	;# 
    92     0004                     FSR0L           equ	4	;# 
    93     0005                     FSR0H           equ	5	;# 
    94     0006                     FSR1L           equ	6	;# 
    95     0007                     FSR1H           equ	7	;# 
    96     0008                     BSR             equ	8	;# 
    97     0009                     WREG            equ	9	;# 
    98     000A                     PCLATH          equ	10	;# 
    99     000B                     INTCON          equ	11	;# 
   100     000C                     PORTA           equ	12	;# 
   101     000D                     PORTB           equ	13	;# 
   102     000E                     PORTC           equ	14	;# 
   103     0010                     PORTE           equ	16	;# 
   104     0011                     PIR1            equ	17	;# 
   105     0012                     PIR2            equ	18	;# 
   106     0014                     PIR4            equ	20	;# 
   107     0015                     TMR0            equ	21	;# 
   108     0016                     TMR1            equ	22	;# 
   109     0016                     TMR1L           equ	22	;# 
   110     0017                     TMR1H           equ	23	;# 
   111     0018                     T1CON           equ	24	;# 
   112     0019                     T1GCON          equ	25	;# 
   113     001A                     TMR2            equ	26	;# 
   114     001B                     PR2             equ	27	;# 
   115     001C                     T2CON           equ	28	;# 
   116     008C                     TRISA           equ	140	;# 
   117     008D                     TRISB           equ	141	;# 
   118     008E                     TRISC           equ	142	;# 
   119     0090                     TRISE           equ	144	;# 
   120     0091                     PIE1            equ	145	;# 
   121     0092                     PIE2            equ	146	;# 
   122     0094                     PIE4            equ	148	;# 
   123     0095                     OPTION_REG      equ	149	;# 
   124     0096                     PCON            equ	150	;# 
   125     0097                     WDTCON          equ	151	;# 
   126     0098                     OSCTUNE         equ	152	;# 
   127     0099                     OSCCON          equ	153	;# 
   128     009A                     OSCSTAT         equ	154	;# 
   129     009B                     ADRES           equ	155	;# 
   130     009B                     ADRESL          equ	155	;# 
   131     009C                     ADRESH          equ	156	;# 
   132     009D                     ADCON0          equ	157	;# 
   133     009E                     ADCON1          equ	158	;# 
   134     009F                     ADCON2          equ	159	;# 
   135     010C                     LATA            equ	268	;# 
   136     010D                     LATB            equ	269	;# 
   137     010E                     LATC            equ	270	;# 
   138     0111                     CM1CON0         equ	273	;# 
   139     0112                     CM1CON1         equ	274	;# 
   140     0113                     CM2CON0         equ	275	;# 
   141     0114                     CM2CON1         equ	276	;# 
   142     0115                     CMOUT           equ	277	;# 
   143     0116                     BORCON          equ	278	;# 
   144     0117                     FVRCON          equ	279	;# 
   145     0118                     DACCON0         equ	280	;# 
   146     0119                     DACCON1         equ	281	;# 
   147     011D                     APFCON          equ	285	;# 
   148     011D                     APFCON0         equ	285	;# 
   149     011E                     CM3CON0         equ	286	;# 
   150     011F                     CM3CON1         equ	287	;# 
   151     018C                     ANSELA          equ	396	;# 
   152     018D                     ANSELB          equ	397	;# 
   153     0191                     EEADR           equ	401	;# 
   154     0191                     EEADRL          equ	401	;# 
   155     0192                     EEADRH          equ	402	;# 
   156     0193                     EEDAT           equ	403	;# 
   157     0193                     EEDATL          equ	403	;# 
   158     0193                     EEDATA          equ	403	;# 
   159     0194                     EEDATH          equ	404	;# 
   160     0195                     EECON1          equ	405	;# 
   161     0196                     EECON2          equ	406	;# 
   162     0197                     VREGCON         equ	407	;# 
   163     0199                     RC1REG          equ	409	;# 
   164     0199                     RCREG           equ	409	;# 
   165     0199                     RCREG1          equ	409	;# 
   166     019A                     TX1REG          equ	410	;# 
   167     019A                     TXREG1          equ	410	;# 
   168     019A                     TXREG           equ	410	;# 
   169     019B                     SP1BRG          equ	411	;# 
   170     019B                     SPBRG           equ	411	;# 
   171     019B                     SP1BRGL         equ	411	;# 
   172     019B                     SPBRG1          equ	411	;# 
   173     019B                     SPBRGL          equ	411	;# 
   174     019C                     SP1BRGH         equ	412	;# 
   175     019C                     SPBRGH          equ	412	;# 
   176     019C                     SPBRGH1         equ	412	;# 
   177     019D                     RC1STA          equ	413	;# 
   178     019D                     RCSTA1          equ	413	;# 
   179     019D                     RCSTA           equ	413	;# 
   180     019E                     TX1STA          equ	414	;# 
   181     019E                     TXSTA1          equ	414	;# 
   182     019E                     TXSTA           equ	414	;# 
   183     019F                     BAUD1CON        equ	415	;# 
   184     019F                     BAUDCON1        equ	415	;# 
   185     019F                     BAUDCTL1        equ	415	;# 
   186     019F                     BAUDCON         equ	415	;# 
   187     019F                     BAUDCTL         equ	415	;# 
   188     020C                     WPUA            equ	524	;# 
   189     020D                     WPUB            equ	525	;# 
   190     020E                     WPUC            equ	526	;# 
   191     0210                     WPUE            equ	528	;# 
   192     0211                     SSPBUF          equ	529	;# 
   193     0211                     SSP1BUF         equ	529	;# 
   194     0212                     SSPADD          equ	530	;# 
   195     0212                     SSP1ADD         equ	530	;# 
   196     0213                     SSPMSK          equ	531	;# 
   197     0213                     SSP1MSK         equ	531	;# 
   198     0214                     SSPSTAT         equ	532	;# 
   199     0214                     SSP1STAT        equ	532	;# 
   200     0215                     SSPCON1         equ	533	;# 
   201     0215                     SSP1CON         equ	533	;# 
   202     0215                     SSPCON          equ	533	;# 
   203     0216                     SSPCON2         equ	534	;# 
   204     0216                     SSP1CON2        equ	534	;# 
   205     0217                     SSPCON3         equ	535	;# 
   206     0217                     SSP1CON3        equ	535	;# 
   207     028C                     ODCONA          equ	652	;# 
   208     028D                     ODCONB          equ	653	;# 
   209     028E                     ODCONC          equ	654	;# 
   210     0291                     CCPR1           equ	657	;# 
   211     0291                     CCPR1L          equ	657	;# 
   212     0292                     CCPR1H          equ	658	;# 
   213     0293                     CCP1CON         equ	659	;# 
   214     0298                     CCPR2           equ	664	;# 
   215     0298                     CCPR2L          equ	664	;# 
   216     0299                     CCPR2H          equ	665	;# 
   217     029A                     CCP2CON         equ	666	;# 
   218     030C                     SLRCONA         equ	780	;# 
   219     030D                     SLRCONB         equ	781	;# 
   220     030E                     SLRCONC         equ	782	;# 
   221     038C                     INLVLA          equ	908	;# 
   222     038D                     INLVLB          equ	909	;# 
   223     038E                     INLVLC          equ	910	;# 
   224     0390                     INLVLE          equ	912	;# 
   225     0391                     IOCAP           equ	913	;# 
   226     0392                     IOCAN           equ	914	;# 
   227     0393                     IOCAF           equ	915	;# 
   228     0394                     IOCBP           equ	916	;# 
   229     0395                     IOCBN           equ	917	;# 
   230     0396                     IOCBF           equ	918	;# 
   231     0397                     IOCCP           equ	919	;# 
   232     0398                     IOCCN           equ	920	;# 
   233     0399                     IOCCF           equ	921	;# 
   234     039D                     IOCEP           equ	925	;# 
   235     039E                     IOCEN           equ	926	;# 
   236     039F                     IOCEF           equ	927	;# 
   237     0511                     OPA1CON         equ	1297	;# 
   238     0513                     OPA2CON         equ	1299	;# 
   239     051A                     CLKRCON         equ	1306	;# 
   240     0811                     PSMC1CON        equ	2065	;# 
   241     0812                     PSMC1MDL        equ	2066	;# 
   242     0813                     PSMC1SYNC       equ	2067	;# 
   243     0814                     PSMC1CLK        equ	2068	;# 
   244     0815                     PSMC1OEN        equ	2069	;# 
   245     0816                     PSMC1POL        equ	2070	;# 
   246     0817                     PSMC1BLNK       equ	2071	;# 
   247     0818                     PSMC1REBS       equ	2072	;# 
   248     0819                     PSMC1FEBS       equ	2073	;# 
   249     081A                     PSMC1PHS        equ	2074	;# 
   250     081B                     PSMC1DCS        equ	2075	;# 
   251     081C                     PSMC1PRS        equ	2076	;# 
   252     081D                     PSMC1ASDC       equ	2077	;# 
   253     081E                     PSMC1ASDL       equ	2078	;# 
   254     081F                     PSMC1ASDS       equ	2079	;# 
   255     0820                     PSMC1INT        equ	2080	;# 
   256     0821                     PSMC1PH         equ	2081	;# 
   257     0821                     PSMC1PHL        equ	2081	;# 
   258     0822                     PSMC1PHH        equ	2082	;# 
   259     0823                     PSMC1DC         equ	2083	;# 
   260     0823                     PSMC1DCL        equ	2083	;# 
   261     0824                     PSMC1DCH        equ	2084	;# 
   262     0825                     PSMC1PR         equ	2085	;# 
   263     0825                     PSMC1PRL        equ	2085	;# 
   264     0826                     PSMC1PRH        equ	2086	;# 
   265     0827                     PSMC1TMR        equ	2087	;# 
   266     0827                     PSMC1TMRL       equ	2087	;# 
   267     0828                     PSMC1TMRH       equ	2088	;# 
   268     0829                     PSMC1DBR        equ	2089	;# 
   269     082A                     PSMC1DBF        equ	2090	;# 
   270     082B                     PSMC1BLKR       equ	2091	;# 
   271     082C                     PSMC1BLKF       equ	2092	;# 
   272     082D                     PSMC1FFA        equ	2093	;# 
   273     082E                     PSMC1STR0       equ	2094	;# 
   274     082F                     PSMC1STR1       equ	2095	;# 
   275     0831                     PSMC2CON        equ	2097	;# 
   276     0832                     PSMC2MDL        equ	2098	;# 
   277     0833                     PSMC2SYNC       equ	2099	;# 
   278     0834                     PSMC2CLK        equ	2100	;# 
   279     0835                     PSMC2OEN        equ	2101	;# 
   280     0836                     PSMC2POL        equ	2102	;# 
   281     0837                     PSMC2BLNK       equ	2103	;# 
   282     0838                     PSMC2REBS       equ	2104	;# 
   283     0839                     PSMC2FEBS       equ	2105	;# 
   284     083A                     PSMC2PHS        equ	2106	;# 
   285     083B                     PSMC2DCS        equ	2107	;# 
   286     083C                     PSMC2PRS        equ	2108	;# 
   287     083D                     PSMC2ASDC       equ	2109	;# 
   288     083E                     PSMC2ASDL       equ	2110	;# 
   289     083F                     PSMC2ASDS       equ	2111	;# 
   290     0840                     PSMC2INT        equ	2112	;# 
   291     0841                     PSMC2PH         equ	2113	;# 
   292     0841                     PSMC2PHL        equ	2113	;# 
   293     0842                     PSMC2PHH        equ	2114	;# 
   294     0843                     PSMC2DC         equ	2115	;# 
   295     0843                     PSMC2DCL        equ	2115	;# 
   296     0844                     PSMC2DCH        equ	2116	;# 
   297     0845                     PSMC2PR         equ	2117	;# 
   298     0845                     PSMC2PRL        equ	2117	;# 
   299     0846                     PSMC2PRH        equ	2118	;# 
   300     0847                     PSMC2TMR        equ	2119	;# 
   301     0847                     PSMC2TMRL       equ	2119	;# 
   302     0848                     PSMC2TMRH       equ	2120	;# 
   303     0849                     PSMC2DBR        equ	2121	;# 
   304     084A                     PSMC2DBF        equ	2122	;# 
   305     084B                     PSMC2BLKR       equ	2123	;# 
   306     084C                     PSMC2BLKF       equ	2124	;# 
   307     084D                     PSMC2FFA        equ	2125	;# 
   308     084E                     PSMC2STR0       equ	2126	;# 
   309     084F                     PSMC2STR1       equ	2127	;# 
   310     0FE4                     STATUS_SHAD     equ	4068	;# 
   311     0FE5                     WREG_SHAD       equ	4069	;# 
   312     0FE6                     BSR_SHAD        equ	4070	;# 
   313     0FE7                     PCLATH_SHAD     equ	4071	;# 
   314     0FE8                     FSR0L_SHAD      equ	4072	;# 
   315     0FE9                     FSR0H_SHAD      equ	4073	;# 
   316     0FEA                     FSR1L_SHAD      equ	4074	;# 
   317     0FEB                     FSR1H_SHAD      equ	4075	;# 
   318     0FED                     STKPTR          equ	4077	;# 
   319     0FEE                     TOSL            equ	4078	;# 
   320     0FEF                     TOSH            equ	4079	;# 
   321     0000                     INDF0           equ	0	;# 
   322     0001                     INDF1           equ	1	;# 
   323     0002                     PCL             equ	2	;# 
   324     0003                     STATUS          equ	3	;# 
   325     0004                     FSR0L           equ	4	;# 
   326     0005                     FSR0H           equ	5	;# 
   327     0006                     FSR1L           equ	6	;# 
   328     0007                     FSR1H           equ	7	;# 
   329     0008                     BSR             equ	8	;# 
   330     0009                     WREG            equ	9	;# 
   331     000A                     PCLATH          equ	10	;# 
   332     000B                     INTCON          equ	11	;# 
   333     000C                     PORTA           equ	12	;# 
   334     000D                     PORTB           equ	13	;# 
   335     000E                     PORTC           equ	14	;# 
   336     0010                     PORTE           equ	16	;# 
   337     0011                     PIR1            equ	17	;# 
   338     0012                     PIR2            equ	18	;# 
   339     0014                     PIR4            equ	20	;# 
   340     0015                     TMR0            equ	21	;# 
   341     0016                     TMR1            equ	22	;# 
   342     0016                     TMR1L           equ	22	;# 
   343     0017                     TMR1H           equ	23	;# 
   344     0018                     T1CON           equ	24	;# 
   345     0019                     T1GCON          equ	25	;# 
   346     001A                     TMR2            equ	26	;# 
   347     001B                     PR2             equ	27	;# 
   348     001C                     T2CON           equ	28	;# 
   349     008C                     TRISA           equ	140	;# 
   350     008D                     TRISB           equ	141	;# 
   351     008E                     TRISC           equ	142	;# 
   352     0090                     TRISE           equ	144	;# 
   353     0091                     PIE1            equ	145	;# 
   354     0092                     PIE2            equ	146	;# 
   355     0094                     PIE4            equ	148	;# 
   356     0095                     OPTION_REG      equ	149	;# 
   357     0096                     PCON            equ	150	;# 
   358     0097                     WDTCON          equ	151	;# 
   359     0098                     OSCTUNE         equ	152	;# 
   360     0099                     OSCCON          equ	153	;# 
   361     009A                     OSCSTAT         equ	154	;# 
   362     009B                     ADRES           equ	155	;# 
   363     009B                     ADRESL          equ	155	;# 
   364     009C                     ADRESH          equ	156	;# 
   365     009D                     ADCON0          equ	157	;# 
   366     009E                     ADCON1          equ	158	;# 
   367     009F                     ADCON2          equ	159	;# 
   368     010C                     LATA            equ	268	;# 
   369     010D                     LATB            equ	269	;# 
   370     010E                     LATC            equ	270	;# 
   371     0111                     CM1CON0         equ	273	;# 
   372     0112                     CM1CON1         equ	274	;# 
   373     0113                     CM2CON0         equ	275	;# 
   374     0114                     CM2CON1         equ	276	;# 
   375     0115                     CMOUT           equ	277	;# 
   376     0116                     BORCON          equ	278	;# 
   377     0117                     FVRCON          equ	279	;# 
   378     0118                     DACCON0         equ	280	;# 
   379     0119                     DACCON1         equ	281	;# 
   380     011D                     APFCON          equ	285	;# 
   381     011D                     APFCON0         equ	285	;# 
   382     011E                     CM3CON0         equ	286	;# 
   383     011F                     CM3CON1         equ	287	;# 
   384     018C                     ANSELA          equ	396	;# 
   385     018D                     ANSELB          equ	397	;# 
   386     0191                     EEADR           equ	401	;# 
   387     0191                     EEADRL          equ	401	;# 
   388     0192                     EEADRH          equ	402	;# 
   389     0193                     EEDAT           equ	403	;# 
   390     0193                     EEDATL          equ	403	;# 
   391     0193                     EEDATA          equ	403	;# 
   392     0194                     EEDATH          equ	404	;# 
   393     0195                     EECON1          equ	405	;# 
   394     0196                     EECON2          equ	406	;# 
   395     0197                     VREGCON         equ	407	;# 
   396     0199                     RC1REG          equ	409	;# 
   397     0199                     RCREG           equ	409	;# 
   398     0199                     RCREG1          equ	409	;# 
   399     019A                     TX1REG          equ	410	;# 
   400     019A                     TXREG1          equ	410	;# 
   401     019A                     TXREG           equ	410	;# 
   402     019B                     SP1BRG          equ	411	;# 
   403     019B                     SPBRG           equ	411	;# 
   404     019B                     SP1BRGL         equ	411	;# 
   405     019B                     SPBRG1          equ	411	;# 
   406     019B                     SPBRGL          equ	411	;# 
   407     019C                     SP1BRGH         equ	412	;# 
   408     019C                     SPBRGH          equ	412	;# 
   409     019C                     SPBRGH1         equ	412	;# 
   410     019D                     RC1STA          equ	413	;# 
   411     019D                     RCSTA1          equ	413	;# 
   412     019D                     RCSTA           equ	413	;# 
   413     019E                     TX1STA          equ	414	;# 
   414     019E                     TXSTA1          equ	414	;# 
   415     019E                     TXSTA           equ	414	;# 
   416     019F                     BAUD1CON        equ	415	;# 
   417     019F                     BAUDCON1        equ	415	;# 
   418     019F                     BAUDCTL1        equ	415	;# 
   419     019F                     BAUDCON         equ	415	;# 
   420     019F                     BAUDCTL         equ	415	;# 
   421     020C                     WPUA            equ	524	;# 
   422     020D                     WPUB            equ	525	;# 
   423     020E                     WPUC            equ	526	;# 
   424     0210                     WPUE            equ	528	;# 
   425     0211                     SSPBUF          equ	529	;# 
   426     0211                     SSP1BUF         equ	529	;# 
   427     0212                     SSPADD          equ	530	;# 
   428     0212                     SSP1ADD         equ	530	;# 
   429     0213                     SSPMSK          equ	531	;# 
   430     0213                     SSP1MSK         equ	531	;# 
   431     0214                     SSPSTAT         equ	532	;# 
   432     0214                     SSP1STAT        equ	532	;# 
   433     0215                     SSPCON1         equ	533	;# 
   434     0215                     SSP1CON         equ	533	;# 
   435     0215                     SSPCON          equ	533	;# 
   436     0216                     SSPCON2         equ	534	;# 
   437     0216                     SSP1CON2        equ	534	;# 
   438     0217                     SSPCON3         equ	535	;# 
   439     0217                     SSP1CON3        equ	535	;# 
   440     028C                     ODCONA          equ	652	;# 
   441     028D                     ODCONB          equ	653	;# 
   442     028E                     ODCONC          equ	654	;# 
   443     0291                     CCPR1           equ	657	;# 
   444     0291                     CCPR1L          equ	657	;# 
   445     0292                     CCPR1H          equ	658	;# 
   446     0293                     CCP1CON         equ	659	;# 
   447     0298                     CCPR2           equ	664	;# 
   448     0298                     CCPR2L          equ	664	;# 
   449     0299                     CCPR2H          equ	665	;# 
   450     029A                     CCP2CON         equ	666	;# 
   451     030C                     SLRCONA         equ	780	;# 
   452     030D                     SLRCONB         equ	781	;# 
   453     030E                     SLRCONC         equ	782	;# 
   454     038C                     INLVLA          equ	908	;# 
   455     038D                     INLVLB          equ	909	;# 
   456     038E                     INLVLC          equ	910	;# 
   457     0390                     INLVLE          equ	912	;# 
   458     0391                     IOCAP           equ	913	;# 
   459     0392                     IOCAN           equ	914	;# 
   460     0393                     IOCAF           equ	915	;# 
   461     0394                     IOCBP           equ	916	;# 
   462     0395                     IOCBN           equ	917	;# 
   463     0396                     IOCBF           equ	918	;# 
   464     0397                     IOCCP           equ	919	;# 
   465     0398                     IOCCN           equ	920	;# 
   466     0399                     IOCCF           equ	921	;# 
   467     039D                     IOCEP           equ	925	;# 
   468     039E                     IOCEN           equ	926	;# 
   469     039F                     IOCEF           equ	927	;# 
   470     0511                     OPA1CON         equ	1297	;# 
   471     0513                     OPA2CON         equ	1299	;# 
   472     051A                     CLKRCON         equ	1306	;# 
   473     0811                     PSMC1CON        equ	2065	;# 
   474     0812                     PSMC1MDL        equ	2066	;# 
   475     0813                     PSMC1SYNC       equ	2067	;# 
   476     0814                     PSMC1CLK        equ	2068	;# 
   477     0815                     PSMC1OEN        equ	2069	;# 
   478     0816                     PSMC1POL        equ	2070	;# 
   479     0817                     PSMC1BLNK       equ	2071	;# 
   480     0818                     PSMC1REBS       equ	2072	;# 
   481     0819                     PSMC1FEBS       equ	2073	;# 
   482     081A                     PSMC1PHS        equ	2074	;# 
   483     081B                     PSMC1DCS        equ	2075	;# 
   484     081C                     PSMC1PRS        equ	2076	;# 
   485     081D                     PSMC1ASDC       equ	2077	;# 
   486     081E                     PSMC1ASDL       equ	2078	;# 
   487     081F                     PSMC1ASDS       equ	2079	;# 
   488     0820                     PSMC1INT        equ	2080	;# 
   489     0821                     PSMC1PH         equ	2081	;# 
   490     0821                     PSMC1PHL        equ	2081	;# 
   491     0822                     PSMC1PHH        equ	2082	;# 
   492     0823                     PSMC1DC         equ	2083	;# 
   493     0823                     PSMC1DCL        equ	2083	;# 
   494     0824                     PSMC1DCH        equ	2084	;# 
   495     0825                     PSMC1PR         equ	2085	;# 
   496     0825                     PSMC1PRL        equ	2085	;# 
   497     0826                     PSMC1PRH        equ	2086	;# 
   498     0827                     PSMC1TMR        equ	2087	;# 
   499     0827                     PSMC1TMRL       equ	2087	;# 
   500     0828                     PSMC1TMRH       equ	2088	;# 
   501     0829                     PSMC1DBR        equ	2089	;# 
   502     082A                     PSMC1DBF        equ	2090	;# 
   503     082B                     PSMC1BLKR       equ	2091	;# 
   504     082C                     PSMC1BLKF       equ	2092	;# 
   505     082D                     PSMC1FFA        equ	2093	;# 
   506     082E                     PSMC1STR0       equ	2094	;# 
   507     082F                     PSMC1STR1       equ	2095	;# 
   508     0831                     PSMC2CON        equ	2097	;# 
   509     0832                     PSMC2MDL        equ	2098	;# 
   510     0833                     PSMC2SYNC       equ	2099	;# 
   511     0834                     PSMC2CLK        equ	2100	;# 
   512     0835                     PSMC2OEN        equ	2101	;# 
   513     0836                     PSMC2POL        equ	2102	;# 
   514     0837                     PSMC2BLNK       equ	2103	;# 
   515     0838                     PSMC2REBS       equ	2104	;# 
   516     0839                     PSMC2FEBS       equ	2105	;# 
   517     083A                     PSMC2PHS        equ	2106	;# 
   518     083B                     PSMC2DCS        equ	2107	;# 
   519     083C                     PSMC2PRS        equ	2108	;# 
   520     083D                     PSMC2ASDC       equ	2109	;# 
   521     083E                     PSMC2ASDL       equ	2110	;# 
   522     083F                     PSMC2ASDS       equ	2111	;# 
   523     0840                     PSMC2INT        equ	2112	;# 
   524     0841                     PSMC2PH         equ	2113	;# 
   525     0841                     PSMC2PHL        equ	2113	;# 
   526     0842                     PSMC2PHH        equ	2114	;# 
   527     0843                     PSMC2DC         equ	2115	;# 
   528     0843                     PSMC2DCL        equ	2115	;# 
   529     0844                     PSMC2DCH        equ	2116	;# 
   530     0845                     PSMC2PR         equ	2117	;# 
   531     0845                     PSMC2PRL        equ	2117	;# 
   532     0846                     PSMC2PRH        equ	2118	;# 
   533     0847                     PSMC2TMR        equ	2119	;# 
   534     0847                     PSMC2TMRL       equ	2119	;# 
   535     0848                     PSMC2TMRH       equ	2120	;# 
   536     0849                     PSMC2DBR        equ	2121	;# 
   537     084A                     PSMC2DBF        equ	2122	;# 
   538     084B                     PSMC2BLKR       equ	2123	;# 
   539     084C                     PSMC2BLKF       equ	2124	;# 
   540     084D                     PSMC2FFA        equ	2125	;# 
   541     084E                     PSMC2STR0       equ	2126	;# 
   542     084F                     PSMC2STR1       equ	2127	;# 
   543     0FE4                     STATUS_SHAD     equ	4068	;# 
   544     0FE5                     WREG_SHAD       equ	4069	;# 
   545     0FE6                     BSR_SHAD        equ	4070	;# 
   546     0FE7                     PCLATH_SHAD     equ	4071	;# 
   547     0FE8                     FSR0L_SHAD      equ	4072	;# 
   548     0FE9                     FSR0H_SHAD      equ	4073	;# 
   549     0FEA                     FSR1L_SHAD      equ	4074	;# 
   550     0FEB                     FSR1H_SHAD      equ	4075	;# 
   551     0FED                     STKPTR          equ	4077	;# 
   552     0FEE                     TOSL            equ	4078	;# 
   553     0FEF                     TOSH            equ	4079	;# 
   554     0000                     INDF0           equ	0	;# 
   555     0001                     INDF1           equ	1	;# 
   556     0002                     PCL             equ	2	;# 
   557     0003                     STATUS          equ	3	;# 
   558     0004                     FSR0L           equ	4	;# 
   559     0005                     FSR0H           equ	5	;# 
   560     0006                     FSR1L           equ	6	;# 
   561     0007                     FSR1H           equ	7	;# 
   562     0008                     BSR             equ	8	;# 
   563     0009                     WREG            equ	9	;# 
   564     000A                     PCLATH          equ	10	;# 
   565     000B                     INTCON          equ	11	;# 
   566     000C                     PORTA           equ	12	;# 
   567     000D                     PORTB           equ	13	;# 
   568     000E                     PORTC           equ	14	;# 
   569     0010                     PORTE           equ	16	;# 
   570     0011                     PIR1            equ	17	;# 
   571     0012                     PIR2            equ	18	;# 
   572     0014                     PIR4            equ	20	;# 
   573     0015                     TMR0            equ	21	;# 
   574     0016                     TMR1            equ	22	;# 
   575     0016                     TMR1L           equ	22	;# 
   576     0017                     TMR1H           equ	23	;# 
   577     0018                     T1CON           equ	24	;# 
   578     0019                     T1GCON          equ	25	;# 
   579     001A                     TMR2            equ	26	;# 
   580     001B                     PR2             equ	27	;# 
   581     001C                     T2CON           equ	28	;# 
   582     008C                     TRISA           equ	140	;# 
   583     008D                     TRISB           equ	141	;# 
   584     008E                     TRISC           equ	142	;# 
   585     0090                     TRISE           equ	144	;# 
   586     0091                     PIE1            equ	145	;# 
   587     0092                     PIE2            equ	146	;# 
   588     0094                     PIE4            equ	148	;# 
   589     0095                     OPTION_REG      equ	149	;# 
   590     0096                     PCON            equ	150	;# 
   591     0097                     WDTCON          equ	151	;# 
   592     0098                     OSCTUNE         equ	152	;# 
   593     0099                     OSCCON          equ	153	;# 
   594     009A                     OSCSTAT         equ	154	;# 
   595     009B                     ADRES           equ	155	;# 
   596     009B                     ADRESL          equ	155	;# 
   597     009C                     ADRESH          equ	156	;# 
   598     009D                     ADCON0          equ	157	;# 
   599     009E                     ADCON1          equ	158	;# 
   600     009F                     ADCON2          equ	159	;# 
   601     010C                     LATA            equ	268	;# 
   602     010D                     LATB            equ	269	;# 
   603     010E                     LATC            equ	270	;# 
   604     0111                     CM1CON0         equ	273	;# 
   605     0112                     CM1CON1         equ	274	;# 
   606     0113                     CM2CON0         equ	275	;# 
   607     0114                     CM2CON1         equ	276	;# 
   608     0115                     CMOUT           equ	277	;# 
   609     0116                     BORCON          equ	278	;# 
   610     0117                     FVRCON          equ	279	;# 
   611     0118                     DACCON0         equ	280	;# 
   612     0119                     DACCON1         equ	281	;# 
   613     011D                     APFCON          equ	285	;# 
   614     011D                     APFCON0         equ	285	;# 
   615     011E                     CM3CON0         equ	286	;# 
   616     011F                     CM3CON1         equ	287	;# 
   617     018C                     ANSELA          equ	396	;# 
   618     018D                     ANSELB          equ	397	;# 
   619     0191                     EEADR           equ	401	;# 
   620     0191                     EEADRL          equ	401	;# 
   621     0192                     EEADRH          equ	402	;# 
   622     0193                     EEDAT           equ	403	;# 
   623     0193                     EEDATL          equ	403	;# 
   624     0193                     EEDATA          equ	403	;# 
   625     0194                     EEDATH          equ	404	;# 
   626     0195                     EECON1          equ	405	;# 
   627     0196                     EECON2          equ	406	;# 
   628     0197                     VREGCON         equ	407	;# 
   629     0199                     RC1REG          equ	409	;# 
   630     0199                     RCREG           equ	409	;# 
   631     0199                     RCREG1          equ	409	;# 
   632     019A                     TX1REG          equ	410	;# 
   633     019A                     TXREG1          equ	410	;# 
   634     019A                     TXREG           equ	410	;# 
   635     019B                     SP1BRG          equ	411	;# 
   636     019B                     SPBRG           equ	411	;# 
   637     019B                     SP1BRGL         equ	411	;# 
   638     019B                     SPBRG1          equ	411	;# 
   639     019B                     SPBRGL          equ	411	;# 
   640     019C                     SP1BRGH         equ	412	;# 
   641     019C                     SPBRGH          equ	412	;# 
   642     019C                     SPBRGH1         equ	412	;# 
   643     019D                     RC1STA          equ	413	;# 
   644     019D                     RCSTA1          equ	413	;# 
   645     019D                     RCSTA           equ	413	;# 
   646     019E                     TX1STA          equ	414	;# 
   647     019E                     TXSTA1          equ	414	;# 
   648     019E                     TXSTA           equ	414	;# 
   649     019F                     BAUD1CON        equ	415	;# 
   650     019F                     BAUDCON1        equ	415	;# 
   651     019F                     BAUDCTL1        equ	415	;# 
   652     019F                     BAUDCON         equ	415	;# 
   653     019F                     BAUDCTL         equ	415	;# 
   654     020C                     WPUA            equ	524	;# 
   655     020D                     WPUB            equ	525	;# 
   656     020E                     WPUC            equ	526	;# 
   657     0210                     WPUE            equ	528	;# 
   658     0211                     SSPBUF          equ	529	;# 
   659     0211                     SSP1BUF         equ	529	;# 
   660     0212                     SSPADD          equ	530	;# 
   661     0212                     SSP1ADD         equ	530	;# 
   662     0213                     SSPMSK          equ	531	;# 
   663     0213                     SSP1MSK         equ	531	;# 
   664     0214                     SSPSTAT         equ	532	;# 
   665     0214                     SSP1STAT        equ	532	;# 
   666     0215                     SSPCON1         equ	533	;# 
   667     0215                     SSP1CON         equ	533	;# 
   668     0215                     SSPCON          equ	533	;# 
   669     0216                     SSPCON2         equ	534	;# 
   670     0216                     SSP1CON2        equ	534	;# 
   671     0217                     SSPCON3         equ	535	;# 
   672     0217                     SSP1CON3        equ	535	;# 
   673     028C                     ODCONA          equ	652	;# 
   674     028D                     ODCONB          equ	653	;# 
   675     028E                     ODCONC          equ	654	;# 
   676     0291                     CCPR1           equ	657	;# 
   677     0291                     CCPR1L          equ	657	;# 
   678     0292                     CCPR1H          equ	658	;# 
   679     0293                     CCP1CON         equ	659	;# 
   680     0298                     CCPR2           equ	664	;# 
   681     0298                     CCPR2L          equ	664	;# 
   682     0299                     CCPR2H          equ	665	;# 
   683     029A                     CCP2CON         equ	666	;# 
   684     030C                     SLRCONA         equ	780	;# 
   685     030D                     SLRCONB         equ	781	;# 
   686     030E                     SLRCONC         equ	782	;# 
   687     038C                     INLVLA          equ	908	;# 
   688     038D                     INLVLB          equ	909	;# 
   689     038E                     INLVLC          equ	910	;# 
   690     0390                     INLVLE          equ	912	;# 
   691     0391                     IOCAP           equ	913	;# 
   692     0392                     IOCAN           equ	914	;# 
   693     0393                     IOCAF           equ	915	;# 
   694     0394                     IOCBP           equ	916	;# 
   695     0395                     IOCBN           equ	917	;# 
   696     0396                     IOCBF           equ	918	;# 
   697     0397                     IOCCP           equ	919	;# 
   698     0398                     IOCCN           equ	920	;# 
   699     0399                     IOCCF           equ	921	;# 
   700     039D                     IOCEP           equ	925	;# 
   701     039E                     IOCEN           equ	926	;# 
   702     039F                     IOCEF           equ	927	;# 
   703     0511                     OPA1CON         equ	1297	;# 
   704     0513                     OPA2CON         equ	1299	;# 
   705     051A                     CLKRCON         equ	1306	;# 
   706     0811                     PSMC1CON        equ	2065	;# 
   707     0812                     PSMC1MDL        equ	2066	;# 
   708     0813                     PSMC1SYNC       equ	2067	;# 
   709     0814                     PSMC1CLK        equ	2068	;# 
   710     0815                     PSMC1OEN        equ	2069	;# 
   711     0816                     PSMC1POL        equ	2070	;# 
   712     0817                     PSMC1BLNK       equ	2071	;# 
   713     0818                     PSMC1REBS       equ	2072	;# 
   714     0819                     PSMC1FEBS       equ	2073	;# 
   715     081A                     PSMC1PHS        equ	2074	;# 
   716     081B                     PSMC1DCS        equ	2075	;# 
   717     081C                     PSMC1PRS        equ	2076	;# 
   718     081D                     PSMC1ASDC       equ	2077	;# 
   719     081E                     PSMC1ASDL       equ	2078	;# 
   720     081F                     PSMC1ASDS       equ	2079	;# 
   721     0820                     PSMC1INT        equ	2080	;# 
   722     0821                     PSMC1PH         equ	2081	;# 
   723     0821                     PSMC1PHL        equ	2081	;# 
   724     0822                     PSMC1PHH        equ	2082	;# 
   725     0823                     PSMC1DC         equ	2083	;# 
   726     0823                     PSMC1DCL        equ	2083	;# 
   727     0824                     PSMC1DCH        equ	2084	;# 
   728     0825                     PSMC1PR         equ	2085	;# 
   729     0825                     PSMC1PRL        equ	2085	;# 
   730     0826                     PSMC1PRH        equ	2086	;# 
   731     0827                     PSMC1TMR        equ	2087	;# 
   732     0827                     PSMC1TMRL       equ	2087	;# 
   733     0828                     PSMC1TMRH       equ	2088	;# 
   734     0829                     PSMC1DBR        equ	2089	;# 
   735     082A                     PSMC1DBF        equ	2090	;# 
   736     082B                     PSMC1BLKR       equ	2091	;# 
   737     082C                     PSMC1BLKF       equ	2092	;# 
   738     082D                     PSMC1FFA        equ	2093	;# 
   739     082E                     PSMC1STR0       equ	2094	;# 
   740     082F                     PSMC1STR1       equ	2095	;# 
   741     0831                     PSMC2CON        equ	2097	;# 
   742     0832                     PSMC2MDL        equ	2098	;# 
   743     0833                     PSMC2SYNC       equ	2099	;# 
   744     0834                     PSMC2CLK        equ	2100	;# 
   745     0835                     PSMC2OEN        equ	2101	;# 
   746     0836                     PSMC2POL        equ	2102	;# 
   747     0837                     PSMC2BLNK       equ	2103	;# 
   748     0838                     PSMC2REBS       equ	2104	;# 
   749     0839                     PSMC2FEBS       equ	2105	;# 
   750     083A                     PSMC2PHS        equ	2106	;# 
   751     083B                     PSMC2DCS        equ	2107	;# 
   752     083C                     PSMC2PRS        equ	2108	;# 
   753     083D                     PSMC2ASDC       equ	2109	;# 
   754     083E                     PSMC2ASDL       equ	2110	;# 
   755     083F                     PSMC2ASDS       equ	2111	;# 
   756     0840                     PSMC2INT        equ	2112	;# 
   757     0841                     PSMC2PH         equ	2113	;# 
   758     0841                     PSMC2PHL        equ	2113	;# 
   759     0842                     PSMC2PHH        equ	2114	;# 
   760     0843                     PSMC2DC         equ	2115	;# 
   761     0843                     PSMC2DCL        equ	2115	;# 
   762     0844                     PSMC2DCH        equ	2116	;# 
   763     0845                     PSMC2PR         equ	2117	;# 
   764     0845                     PSMC2PRL        equ	2117	;# 
   765     0846                     PSMC2PRH        equ	2118	;# 
   766     0847                     PSMC2TMR        equ	2119	;# 
   767     0847                     PSMC2TMRL       equ	2119	;# 
   768     0848                     PSMC2TMRH       equ	2120	;# 
   769     0849                     PSMC2DBR        equ	2121	;# 
   770     084A                     PSMC2DBF        equ	2122	;# 
   771     084B                     PSMC2BLKR       equ	2123	;# 
   772     084C                     PSMC2BLKF       equ	2124	;# 
   773     084D                     PSMC2FFA        equ	2125	;# 
   774     084E                     PSMC2STR0       equ	2126	;# 
   775     084F                     PSMC2STR1       equ	2127	;# 
   776     0FE4                     STATUS_SHAD     equ	4068	;# 
   777     0FE5                     WREG_SHAD       equ	4069	;# 
   778     0FE6                     BSR_SHAD        equ	4070	;# 
   779     0FE7                     PCLATH_SHAD     equ	4071	;# 
   780     0FE8                     FSR0L_SHAD      equ	4072	;# 
   781     0FE9                     FSR0H_SHAD      equ	4073	;# 
   782     0FEA                     FSR1L_SHAD      equ	4074	;# 
   783     0FEB                     FSR1H_SHAD      equ	4075	;# 
   784     0FED                     STKPTR          equ	4077	;# 
   785     0FEE                     TOSL            equ	4078	;# 
   786     0FEF                     TOSH            equ	4079	;# 
   787     001B                     _PR2            set	27
   788     001C                     _T2CONbits      set	28
   789     000C                     _PORTAbits      set	12
   790     008C                     _TRISAbits      set	140
   791     008E                     _TRISCbits      set	142
   792     008D                     _TRISBbits      set	141
   793     011D                     _APFCONbits     set	285
   794     010E                     _LATCbits       set	270
   795     010D                     _LATBbits       set	269
   796     018C                     _ANSELAbits     set	396
   797     018D                     _ANSELBbits     set	397
   798     0291                     _CCPR1L         set	657
   799     0293                     _CCP1CONbits    set	659
   800                           
   801                           	psect	stringtext1
   802     0800                     __pstringtext1:
   803     0800                     STR_1:
   804     0800  3450               	retlw	80	;'P'
   805     0801  3457               	retlw	87	;'W'
   806     0802  344D               	retlw	77	;'M'
   807     0803  3420               	retlw	32	;' '
   808     0804  344D               	retlw	77	;'M'
   809     0805  346F               	retlw	111	;'o'
   810     0806  3474               	retlw	116	;'t'
   811     0807  346F               	retlw	111	;'o'
   812     0808  3472               	retlw	114	;'r'
   813     0809  3420               	retlw	32	;' '
   814     080A  3453               	retlw	83	;'S'
   815     080B  3470               	retlw	112	;'p'
   816     080C  3465               	retlw	101	;'e'
   817     080D  3465               	retlw	101	;'e'
   818     080E  3464               	retlw	100	;'d'
   819     080F  3400               	retlw	0
   820                           
   821                           	psect	stringtext2
   822     0810                     __pstringtext2:
   823     0810                     STR_3:
   824     0810  3420               	retlw	32	;' '
   825     0811  3420               	retlw	32	;' '
   826     0812  3420               	retlw	32	;' '
   827     0813  3420               	retlw	32	;' '
   828     0814  3420               	retlw	32	;' '
   829     0815  3400               	retlw	0
   830                           
   831                           	psect	stringtext3
   832     0816                     __pstringtext3:
   833     0816                     STR_2:
   834     0816  3455               	retlw	85	;'U'
   835     0817  3470               	retlw	112	;'p'
   836     0818  3420               	retlw	32	;' '
   837     0819  3420               	retlw	32	;' '
   838     081A  3420               	retlw	32	;' '
   839     081B  3400               	retlw	0
   840                           
   841                           	psect	stringtext4
   842     081C                     __pstringtext4:
   843     081C                     STR_4:
   844     081C  3444               	retlw	68	;'D'
   845     081D  346F               	retlw	111	;'o'
   846     081E  3477               	retlw	119	;'w'
   847     081F  346E               	retlw	110	;'n'
   848     0820  3420               	retlw	32	;' '
   849     0821  3400               	retlw	0
   850                           
   851                           	psect	stringtext5
   852     0822                     __pstringtext5:
   853     0822                     STR_6:
   854     0822  344C               	retlw	76	;'L'
   855     0823  3465               	retlw	101	;'e'
   856     0824  3466               	retlw	102	;'f'
   857     0825  3474               	retlw	116	;'t'
   858     0826  3420               	retlw	32	;' '
   859     0827  3400               	retlw	0
   860                           
   861                           	psect	stringtext6
   862     0828                     __pstringtext6:
   863     0828                     STR_8:
   864     0828  3452               	retlw	82	;'R'
   865     0829  3469               	retlw	105	;'i'
   866     082A  3467               	retlw	103	;'g'
   867     082B  3468               	retlw	104	;'h'
   868     082C  3474               	retlw	116	;'t'
   869     082D  3400               	retlw	0
   870                           
   871                           	psect	stringtext7
   872     0000                     __pstringtext7:
   873     0810                     STR_5           equ	STR_3
   874     0810                     STR_7           equ	STR_3
   875     0810                     STR_9           equ	STR_3
   876                           
   877                           	psect	cinit
   878     07FD                     start_initialization:	
   879                           ; #config settings
   880                           
   881     07FD                     __initialization:
   882     07FD                     end_of_initialization:	
   883                           ;End of C runtime variable initialization code
   884                           
   885     07FD                     __end_of__initialization:
   886     07FD  0020               	movlb	0
   887     07FE  3183  2B0F         	ljmp	_main	;jump to C main() function
   888                           
   889                           	psect	cstackCOMMON
   890     0070                     __pcstackCOMMON:
   891     0070                     ?_programInitialize:
   892     0070                     ?_programLoop:	
   893                           ; 1 bytes @ 0x0
   894                           
   895     0070                     ?_lcd_Initialize:	
   896                           ; 1 bytes @ 0x0
   897                           
   898     0070                     ?_motor_Initialize:	
   899                           ; 1 bytes @ 0x0
   900                           
   901     0070                     ?_motor_SetSpeed:	
   902                           ; 1 bytes @ 0x0
   903                           
   904     0070                     ?_pb_DelayDebounce:	
   905                           ; 1 bytes @ 0x0
   906                           
   907     0070                     ?_memset:	
   908                           ; 1 bytes @ 0x0
   909                           
   910     0070                     ?_main:	
   911                           ; 1 bytes @ 0x0
   912                           
   913     0070                     ?_delay_x1o5us:	
   914                           ; 1 bytes @ 0x0
   915                           
   916     0070                     ?_lcd_DelaySetupTime:	
   917                           ; 1 bytes @ 0x0
   918                           
   919     0070                     ?_lcd_DelayPulse:	
   920                           ; 1 bytes @ 0x0
   921                           
   922     0070                     ?_lcd_EPulse:	
   923                           ; 1 bytes @ 0x0
   924                           
   925     0070                     ?_lcd_WriteData:	
   926                           ; 1 bytes @ 0x0
   927                           
   928     0070                     ?_lcd_PrintCmd:	
   929                           ; 1 bytes @ 0x0
   930                           
   931     0070                     ?_lcd_PrintChar:	
   932                           ; 1 bytes @ 0x0
   933                           
   934     0070                     ?___bmul:	
   935                           ; 1 bytes @ 0x0
   936                           
   937     0070                     ?_labs:	
   938                           ; 1 bytes @ 0x0
   939                           
   940     0070                     ?___aldiv:	
   941                           ; 4 bytes @ 0x0
   942                           
   943     0070                     delay_x1o5us@delay:	
   944                           ; 4 bytes @ 0x0
   945                           
   946     0070                     ___bmul@multiplicand:	
   947                           ; 1 bytes @ 0x0
   948                           
   949     0070                     memset@dest:	
   950                           ; 1 bytes @ 0x0
   951                           
   952     0070                     motor_SetSpeed@pwm:	
   953                           ; 1 bytes @ 0x0
   954                           
   955     0070                     ___aldiv@divisor:	
   956                           ; 2 bytes @ 0x0
   957                           
   958     0070                     labs@a:	
   959                           ; 4 bytes @ 0x0
   960                           
   961     0070                     ??_motor_Initialize:	
   962                           ; 4 bytes @ 0x0
   963                           
   964     0070                     ??_delay_x1o5us:	
   965                           ; 1 bytes @ 0x0
   966                           
   967                           
   968                           ; 1 bytes @ 0x0
   969     0070                     	ds	1
   970     0071                     delay_x1o5us@i:
   971     0071                     ___bmul@product:	
   972                           ; 1 bytes @ 0x1
   973                           
   974     0071                     memset@c:	
   975                           ; 1 bytes @ 0x1
   976                           
   977     0071                     ??___bmul:	
   978                           ; 2 bytes @ 0x1
   979                           
   980                           
   981                           ; 1 bytes @ 0x1
   982     0071                     	ds	1
   983     0072                     ?_delay_x24o25us:
   984     0072                     ___bmul@multiplier:	
   985                           ; 1 bytes @ 0x2
   986                           
   987     0072                     delay_x24o25us@delay:	
   988                           ; 1 bytes @ 0x2
   989                           
   990     0072                     ??_motor_SetSpeed:	
   991                           ; 2 bytes @ 0x2
   992                           
   993     0072                     ??_lcd_DelaySetupTime:	
   994                           ; 1 bytes @ 0x2
   995                           
   996     0072                     ??_lcd_DelayPulse:	
   997                           ; 1 bytes @ 0x2
   998                           
   999     0072                     ??_lcd_EPulse:	
  1000                           ; 1 bytes @ 0x2
  1001                           
  1002     0072                     ??_lcd_WriteData:	
  1003                           ; 1 bytes @ 0x2
  1004                           
  1005                           
  1006                           ; 1 bytes @ 0x2
  1007     0072                     	ds	1
  1008     0073                     memset@n:
  1009                           
  1010                           ; 2 bytes @ 0x3
  1011     0073                     	ds	1
  1012     0074                     lcd_WriteData@data:
  1013     0074                     delay_x24o25us@i:	
  1014                           ; 1 bytes @ 0x4
  1015                           
  1016     0074                     ___aldiv@dividend:	
  1017                           ; 2 bytes @ 0x4
  1018                           
  1019     0074                     ??_labs:	
  1020                           ; 4 bytes @ 0x4
  1021                           
  1022     0074                     ??_delay_x24o25us:	
  1023                           ; 1 bytes @ 0x4
  1024                           
  1025                           
  1026                           ; 1 bytes @ 0x4
  1027     0074                     	ds	1
  1028     0075                     lcd_PrintCmd@command:
  1029     0075                     lcd_PrintChar@character:	
  1030                           ; 1 bytes @ 0x5
  1031                           
  1032     0075                     memset@p:	
  1033                           ; 1 bytes @ 0x5
  1034                           
  1035     0075                     ??_memset:	
  1036                           ; 1 bytes @ 0x5
  1037                           
  1038     0075                     ??_lcd_PrintCmd:	
  1039                           ; 1 bytes @ 0x5
  1040                           
  1041     0075                     ??_lcd_PrintChar:	
  1042                           ; 1 bytes @ 0x5
  1043                           
  1044                           
  1045                           ; 1 bytes @ 0x5
  1046     0075                     	ds	1
  1047     0076                     ?_lcd_Goto:
  1048     0076                     ?_lcd_PrintString:	
  1049                           ; 1 bytes @ 0x6
  1050                           
  1051     0076                     ?_delay_ms:	
  1052                           ; 1 bytes @ 0x6
  1053                           
  1054     0076                     lcd_Goto@x:	
  1055                           ; 1 bytes @ 0x6
  1056                           
  1057     0076                     lcd_PrintString@string:	
  1058                           ; 1 bytes @ 0x6
  1059                           
  1060     0076                     delay_ms@delay:	
  1061                           ; 2 bytes @ 0x6
  1062                           
  1063                           
  1064                           ; 4 bytes @ 0x6
  1065     0076                     	ds	1
  1066     0077                     lcd_Goto@y:
  1067     0077                     ??_lcd_Goto:	
  1068                           ; 1 bytes @ 0x7
  1069                           
  1070                           
  1071                           ; 1 bytes @ 0x7
  1072     0077                     	ds	1
  1073     0078                     ___aldiv@counter:
  1074     0078                     ??_lcd_PrintString:	
  1075                           ; 1 bytes @ 0x8
  1076                           
  1077     0078                     ??___aldiv:	
  1078                           ; 1 bytes @ 0x8
  1079                           
  1080                           
  1081                           ; 1 bytes @ 0x8
  1082     0078                     	ds	1
  1083     0079                     ___aldiv@sign:
  1084                           
  1085                           ; 1 bytes @ 0x9
  1086     0079                     	ds	1
  1087     007A                     delay_ms@i:
  1088     007A                     ___aldiv@quotient:	
  1089                           ; 4 bytes @ 0xA
  1090                           
  1091     007A                     ??_delay_ms:	
  1092                           ; 4 bytes @ 0xA
  1093                           
  1094                           
  1095                           ; 1 bytes @ 0xA
  1096     007A                     	ds	4
  1097     007E                     ??_programInitialize:
  1098     007E                     ??_programLoop:	
  1099                           ; 1 bytes @ 0xE
  1100                           
  1101     007E                     ??_lcd_Initialize:	
  1102                           ; 1 bytes @ 0xE
  1103                           
  1104     007E                     ??_pb_DelayDebounce:	
  1105                           ; 1 bytes @ 0xE
  1106                           
  1107     007E                     ??_main:	
  1108                           ; 1 bytes @ 0xE
  1109                           
  1110                           
  1111                           	psect	cstackBANK0
  1112     0020                     __pcstackBANK0:	
  1113                           ; 1 bytes @ 0xE
  1114                           
  1115     0020                     ?_lcd_PrintDigitInt32:
  1116     0020                     lcd_PrintDigitInt32@number:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119                           
  1120                           ; 4 bytes @ 0x0
  1121     0020                     	ds	4
  1122     0024                     lcd_PrintDigitInt32@noDigit:
  1123                           
  1124                           ; 1 bytes @ 0x4
  1125     0024                     	ds	1
  1126     0025                     lcd_PrintDigitInt32@enSign:
  1127                           
  1128                           ; 1 bytes @ 0x5
  1129     0025                     	ds	1
  1130     0026                     lcd_PrintDigitInt32@enZero:
  1131                           
  1132                           ; 1 bytes @ 0x6
  1133     0026                     	ds	1
  1134     0027                     ??_lcd_PrintDigitInt32:
  1135                           
  1136                           ; 1 bytes @ 0x7
  1137     0027                     	ds	4
  1138     002B                     lcd_PrintDigitInt32@numberRevChar:
  1139                           
  1140                           ; 11 bytes @ 0xB
  1141     002B                     	ds	11
  1142     0036                     lcd_PrintDigitInt32@numberChar:
  1143                           
  1144                           ; 11 bytes @ 0x16
  1145     0036                     	ds	11
  1146     0041                     lcd_PrintDigitInt32@tempN:
  1147                           
  1148                           ; 4 bytes @ 0x21
  1149     0041                     	ds	4
  1150     0045                     lcd_PrintDigitInt32@tempC:
  1151                           
  1152                           ; 1 bytes @ 0x25
  1153     0045                     	ds	1
  1154     0046                     lcd_PrintDigitInt32@i2:
  1155                           
  1156                           ; 1 bytes @ 0x26
  1157     0046                     	ds	1
  1158     0047                     lcd_PrintDigitInt32@totalDigit:
  1159                           
  1160                           ; 1 bytes @ 0x27
  1161     0047                     	ds	1
  1162     0048                     lcd_PrintDigitInt32@i1:
  1163                           
  1164                           ; 1 bytes @ 0x28
  1165     0048                     	ds	1
  1166     0049                     programLoop@motorSpeed:
  1167                           
  1168                           ; 2 bytes @ 0x29
  1169     0049                     	ds	2
  1170                           
  1171                           	psect	maintext
  1172     030F                     __pmaintext:	
  1173 ;;
  1174 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1175 ;;
  1176 ;; *************** function _main *****************
  1177 ;; Defined at:
  1178 ;;		line 26 in file "main.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : B1F/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1192 ;;      Params:         0       0       0       0       0       0       0
  1193 ;;      Locals:         0       0       0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0
  1195 ;;      Totals:         0       0       0       0       0       0       0
  1196 ;;Total ram usage:        0 bytes
  1197 ;; Hardware stack levels required when called: 8
  1198 ;; This function calls:
  1199 ;;		_programInitialize
  1200 ;;		_programLoop
  1201 ;; This function is called by:
  1202 ;;		Startup code after reset
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206     030F                     _main:	
  1207                           ;psect for function _main
  1208                           
  1209     030F                     l1461:	
  1210                           ;incstack = 0
  1211                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1212                           
  1213                           
  1214                           ;main.c: 27:     programInitialize();
  1215     030F  3184  245C  3183   	fcall	_programInitialize
  1216     0312                     l1463:
  1217                           
  1218                           ;main.c: 30:         programLoop();
  1219     0312  3186  2679  3183   	fcall	_programLoop
  1220     0315  2B12               	goto	l1463
  1221     0316  3180  2802         	ljmp	start
  1222     0318                     __end_of_main:
  1223                           
  1224                           	psect	text1
  1225     0679                     __ptext1:	
  1226 ;; *************** function _programLoop *****************
  1227 ;; Defined at:
  1228 ;;		line 71 in file "program.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  motorSpeed      2   41[BANK0 ] unsigned short 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1242 ;;      Params:         0       0       0       0       0       0       0
  1243 ;;      Locals:         0       2       0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0       0       0
  1245 ;;      Totals:         0       2       0       0       0       0       0
  1246 ;;Total ram usage:        2 bytes
  1247 ;; Hardware stack levels used: 1
  1248 ;; Hardware stack levels required when called: 7
  1249 ;; This function calls:
  1250 ;;		_delay_ms
  1251 ;;		_lcd_Goto
  1252 ;;		_lcd_PrintDigitInt32
  1253 ;;		_lcd_PrintString
  1254 ;;		_motor_SetSpeed
  1255 ;;		_pb_DelayDebounce
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261     0679                     _programLoop:	
  1262                           ;psect for function _programLoop
  1263                           
  1264     0679                     l1371:	
  1265                           ;incstack = 0
  1266                           ; Regs used in _programLoop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1267                           
  1268                           
  1269                           ;program.c: 72:     uint16_t motorSpeed = 0;
  1270     0679  0020               	movlb	0	; select bank0
  1271     067A  01C9               	clrf	programLoop@motorSpeed
  1272     067B  01CA               	clrf	programLoop@motorSpeed+1
  1273     067C                     l1373:
  1274                           
  1275                           ;program.c: 74:     lcd_Goto(0, 0);
  1276     067C  01F6               	clrf	lcd_Goto@x
  1277     067D  3000               	movlw	0
  1278     067E  3183  23E3  3186   	fcall	_lcd_Goto
  1279     0681                     l1375:
  1280                           
  1281                           ;program.c: 75:     lcd_PrintString("PWM Motor Speed");
  1282     0681  3000               	movlw	low (STR_1| (0+32768))
  1283     0682  00F6               	movwf	lcd_PrintString@string
  1284     0683  3088               	movlw	high (STR_1| (0+32768))
  1285     0684  00F7               	movwf	lcd_PrintString@string+1
  1286     0685  3183  23B5  3186   	fcall	_lcd_PrintString
  1287     0688                     l1377:
  1288                           
  1289                           ;program.c: 77:     lcd_Goto(1, 0);
  1290     0688  01F6               	clrf	lcd_Goto@x
  1291     0689  3001               	movlw	1
  1292     068A  3183  23E3  3186   	fcall	_lcd_Goto
  1293     068D                     l1379:
  1294                           
  1295                           ;program.c: 78:     lcd_PrintDigitInt32(0, 4, 0, 1);
  1296     068D  3000               	movlw	0
  1297     068E  0020               	movlb	0	; select bank0
  1298     068F  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1299     0690  3000               	movlw	0
  1300     0691  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1301     0692  3000               	movlw	0
  1302     0693  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1303     0694  3000               	movlw	0
  1304     0695  00A0               	movwf	lcd_PrintDigitInt32@number
  1305     0696  3004               	movlw	4
  1306     0697  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1307     0698  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1308     0699  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1309     069A  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1310     069B  3185  25A5  3186   	fcall	_lcd_PrintDigitInt32
  1311     069E                     l1381:
  1312                           
  1313                           ;program.c: 81:         if(!PORTAbits.RA1) {
  1314     069E  0020               	movlb	0	; select bank0
  1315     069F  188C               	btfsc	12,1	;volatile
  1316     06A0  2EA2               	goto	u791
  1317     06A1  2EA3               	goto	u790
  1318     06A2                     u791:
  1319     06A2  2F15               	goto	l1405
  1320     06A3                     u790:
  1321     06A3                     l1383:
  1322                           
  1323                           ;program.c: 82:             lcd_Goto(1, 6);
  1324     06A3  3006               	movlw	6
  1325     06A4  00F6               	movwf	lcd_Goto@x
  1326     06A5  3001               	movlw	1
  1327     06A6  3183  23E3  3186   	fcall	_lcd_Goto
  1328                           
  1329                           ;program.c: 83:             lcd_PrintString("Up   ");
  1330     06A9  3016               	movlw	low (STR_2| (0+32768))
  1331     06AA  00F6               	movwf	lcd_PrintString@string
  1332     06AB  3088               	movlw	high (STR_2| (0+32768))
  1333     06AC  00F7               	movwf	lcd_PrintString@string+1
  1334     06AD  3183  23B5  3186   	fcall	_lcd_PrintString
  1335     06B0                     l1385:
  1336                           
  1337                           ;program.c: 85:             if(motorSpeed < 1023) motorSpeed +=25;
  1338     06B0  3003               	movlw	3
  1339     06B1  0020               	movlb	0	; select bank0
  1340     06B2  024A               	subwf	programLoop@motorSpeed+1,w
  1341     06B3  30FF               	movlw	255
  1342     06B4  1903               	skipnz
  1343     06B5  0249               	subwf	programLoop@motorSpeed,w
  1344     06B6  1803               	skipnc
  1345     06B7  2EB9               	goto	u801
  1346     06B8  2EBA               	goto	u800
  1347     06B9                     u801:
  1348     06B9  2EBE               	goto	l84
  1349     06BA                     u800:
  1350     06BA                     l1387:
  1351     06BA  3019               	movlw	25
  1352     06BB  07C9               	addwf	programLoop@motorSpeed,f
  1353     06BC  3000               	movlw	0
  1354     06BD  3DCA               	addwfc	programLoop@motorSpeed+1,f
  1355     06BE                     l84:
  1356                           
  1357                           ;program.c: 88:             if(motorSpeed > 1023) {
  1358     06BE  3004               	movlw	4
  1359     06BF  024A               	subwf	programLoop@motorSpeed+1,w
  1360     06C0  3000               	movlw	0
  1361     06C1  1903               	skipnz
  1362     06C2  0249               	subwf	programLoop@motorSpeed,w
  1363     06C3  1C03               	skipc
  1364     06C4  2EC6               	goto	u811
  1365     06C5  2EC7               	goto	u810
  1366     06C6                     u811:
  1367     06C6  2EDE               	goto	l1393
  1368     06C7                     u810:
  1369     06C7                     l1389:
  1370                           
  1371                           ;program.c: 89:                 lcd_Goto(1, 0);
  1372     06C7  01F6               	clrf	lcd_Goto@x
  1373     06C8  3001               	movlw	1
  1374     06C9  3183  23E3  3186   	fcall	_lcd_Goto
  1375     06CC                     l1391:
  1376                           
  1377                           ;program.c: 90:                 lcd_PrintDigitInt32(1023, 4, 0, 1);
  1378     06CC  3000               	movlw	0
  1379     06CD  0020               	movlb	0	; select bank0
  1380     06CE  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1381     06CF  3000               	movlw	0
  1382     06D0  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1383     06D1  3003               	movlw	3
  1384     06D2  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1385     06D3  30FF               	movlw	255
  1386     06D4  00A0               	movwf	lcd_PrintDigitInt32@number
  1387     06D5  3004               	movlw	4
  1388     06D6  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1389     06D7  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1390     06D8  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1391     06D9  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1392     06DA  3185  25A5  3186   	fcall	_lcd_PrintDigitInt32
  1393                           
  1394                           ;program.c: 91:             }
  1395     06DD  2EF2               	goto	l1397
  1396     06DE                     l1393:
  1397                           
  1398                           ;program.c: 94:                 lcd_Goto(1, 0);
  1399     06DE  01F6               	clrf	lcd_Goto@x
  1400     06DF  3001               	movlw	1
  1401     06E0  3183  23E3  3186   	fcall	_lcd_Goto
  1402     06E3                     l1395:
  1403                           
  1404                           ;program.c: 95:                 lcd_PrintDigitInt32(motorSpeed, 4, 0, 1);
  1405     06E3  0020               	movlb	0	; select bank0
  1406     06E4  0849               	movf	programLoop@motorSpeed,w
  1407     06E5  00A0               	movwf	lcd_PrintDigitInt32@number
  1408     06E6  084A               	movf	programLoop@motorSpeed+1,w
  1409     06E7  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1410     06E8  01A2               	clrf	lcd_PrintDigitInt32@number+2
  1411     06E9  01A3               	clrf	lcd_PrintDigitInt32@number+3
  1412     06EA  3004               	movlw	4
  1413     06EB  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1414     06EC  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1415     06ED  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1416     06EE  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1417     06EF  3185  25A5  3186   	fcall	_lcd_PrintDigitInt32
  1418     06F2                     l1397:
  1419                           
  1420                           ;program.c: 98:             delay_ms(90);
  1421     06F2  3000               	movlw	0
  1422     06F3  00F9               	movwf	delay_ms@delay+3
  1423     06F4  3000               	movlw	0
  1424     06F5  00F8               	movwf	delay_ms@delay+2
  1425     06F6  3000               	movlw	0
  1426     06F7  00F7               	movwf	delay_ms@delay+1
  1427     06F8  305A               	movlw	90
  1428     06F9  00F6               	movwf	delay_ms@delay
  1429     06FA  3184  2400  3186   	fcall	_delay_ms
  1430     06FD                     l1399:
  1431                           
  1432                           ;program.c: 100:             lcd_Goto(1, 6);
  1433     06FD  3006               	movlw	6
  1434     06FE  00F6               	movwf	lcd_Goto@x
  1435     06FF  3001               	movlw	1
  1436     0700  3183  23E3  3186   	fcall	_lcd_Goto
  1437     0703                     l1401:
  1438                           
  1439                           ;program.c: 101:             lcd_PrintString("     ");
  1440     0703  3010               	movlw	low (STR_3| (0+32768))
  1441     0704  00F6               	movwf	lcd_PrintString@string
  1442     0705  3088               	movlw	high (STR_3| (0+32768))
  1443     0706  00F7               	movwf	lcd_PrintString@string+1
  1444     0707  3183  23B5  3186   	fcall	_lcd_PrintString
  1445     070A                     l1403:
  1446                           
  1447                           ;program.c: 103:             delay_ms(10);
  1448     070A  3000               	movlw	0
  1449     070B  00F9               	movwf	delay_ms@delay+3
  1450     070C  3000               	movlw	0
  1451     070D  00F8               	movwf	delay_ms@delay+2
  1452     070E  3000               	movlw	0
  1453     070F  00F7               	movwf	delay_ms@delay+1
  1454     0710  300A               	movlw	10
  1455     0711  00F6               	movwf	delay_ms@delay
  1456     0712  3184  2400  3186   	fcall	_delay_ms
  1457     0715                     l1405:
  1458                           
  1459                           ;program.c: 106:         if(!PORTAbits.RA2) {
  1460     0715  0020               	movlb	0	; select bank0
  1461     0716  190C               	btfsc	12,2	;volatile
  1462     0717  2F19               	goto	u821
  1463     0718  2F1A               	goto	u820
  1464     0719                     u821:
  1465     0719  2F69               	goto	l1425
  1466     071A                     u820:
  1467     071A                     l1407:
  1468                           
  1469                           ;program.c: 107:             lcd_Goto(1, 6);
  1470     071A  3006               	movlw	6
  1471     071B  00F6               	movwf	lcd_Goto@x
  1472     071C  3001               	movlw	1
  1473     071D  3183  23E3  3186   	fcall	_lcd_Goto
  1474                           
  1475                           ;program.c: 108:             lcd_PrintString("Down ");
  1476     0720  301C               	movlw	low (STR_4| (0+32768))
  1477     0721  00F6               	movwf	lcd_PrintString@string
  1478     0722  3088               	movlw	high (STR_4| (0+32768))
  1479     0723  00F7               	movwf	lcd_PrintString@string+1
  1480     0724  3183  23B5  3186   	fcall	_lcd_PrintString
  1481     0727                     l1409:
  1482                           
  1483                           ;program.c: 110:             if(motorSpeed > 0) motorSpeed -=25;
  1484     0727  0020               	movlb	0	; select bank0
  1485     0728  0849               	movf	programLoop@motorSpeed,w
  1486     0729  044A               	iorwf	programLoop@motorSpeed+1,w
  1487     072A  1903               	btfsc	3,2
  1488     072B  2F2D               	goto	u831
  1489     072C  2F2E               	goto	u830
  1490     072D                     u831:
  1491     072D  2F32               	goto	l1413
  1492     072E                     u830:
  1493     072E                     l1411:
  1494     072E  3019               	movlw	25
  1495     072F  02C9               	subwf	programLoop@motorSpeed,f
  1496     0730  3000               	movlw	0
  1497     0731  3BCA               	subwfb	programLoop@motorSpeed+1,f
  1498     0732                     l1413:
  1499                           
  1500                           ;program.c: 113:             lcd_Goto(1, 0);
  1501     0732  01F6               	clrf	lcd_Goto@x
  1502     0733  3001               	movlw	1
  1503     0734  3183  23E3  3186   	fcall	_lcd_Goto
  1504     0737                     l1415:
  1505                           
  1506                           ;program.c: 114:             lcd_PrintDigitInt32(motorSpeed, 4, 0, 1);
  1507     0737  0020               	movlb	0	; select bank0
  1508     0738  0849               	movf	programLoop@motorSpeed,w
  1509     0739  00A0               	movwf	lcd_PrintDigitInt32@number
  1510     073A  084A               	movf	programLoop@motorSpeed+1,w
  1511     073B  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1512     073C  01A2               	clrf	lcd_PrintDigitInt32@number+2
  1513     073D  01A3               	clrf	lcd_PrintDigitInt32@number+3
  1514     073E  3004               	movlw	4
  1515     073F  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1516     0740  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1517     0741  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1518     0742  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1519     0743  3185  25A5  3186   	fcall	_lcd_PrintDigitInt32
  1520     0746                     l1417:
  1521                           
  1522                           ;program.c: 116:             delay_ms(90);
  1523     0746  3000               	movlw	0
  1524     0747  00F9               	movwf	delay_ms@delay+3
  1525     0748  3000               	movlw	0
  1526     0749  00F8               	movwf	delay_ms@delay+2
  1527     074A  3000               	movlw	0
  1528     074B  00F7               	movwf	delay_ms@delay+1
  1529     074C  305A               	movlw	90
  1530     074D  00F6               	movwf	delay_ms@delay
  1531     074E  3184  2400  3186   	fcall	_delay_ms
  1532     0751                     l1419:
  1533                           
  1534                           ;program.c: 118:             lcd_Goto(1, 6);
  1535     0751  3006               	movlw	6
  1536     0752  00F6               	movwf	lcd_Goto@x
  1537     0753  3001               	movlw	1
  1538     0754  3183  23E3  3186   	fcall	_lcd_Goto
  1539     0757                     l1421:
  1540                           
  1541                           ;program.c: 119:             lcd_PrintString("     ");
  1542     0757  3010               	movlw	low (STR_3| (0+32768))
  1543     0758  00F6               	movwf	lcd_PrintString@string
  1544     0759  3088               	movlw	high (STR_3| (0+32768))
  1545     075A  00F7               	movwf	lcd_PrintString@string+1
  1546     075B  3183  23B5  3186   	fcall	_lcd_PrintString
  1547     075E                     l1423:
  1548                           
  1549                           ;program.c: 121:             delay_ms(10);
  1550     075E  3000               	movlw	0
  1551     075F  00F9               	movwf	delay_ms@delay+3
  1552     0760  3000               	movlw	0
  1553     0761  00F8               	movwf	delay_ms@delay+2
  1554     0762  3000               	movlw	0
  1555     0763  00F7               	movwf	delay_ms@delay+1
  1556     0764  300A               	movlw	10
  1557     0765  00F6               	movwf	delay_ms@delay
  1558     0766  3184  2400  3186   	fcall	_delay_ms
  1559     0769                     l1425:
  1560                           
  1561                           ;program.c: 124:         if(!PORTAbits.RA3) {
  1562     0769  0020               	movlb	0	; select bank0
  1563     076A  198C               	btfsc	12,3	;volatile
  1564     076B  2F6D               	goto	u841
  1565     076C  2F6E               	goto	u840
  1566     076D                     u841:
  1567     076D  2FAC               	goto	l1441
  1568     076E                     u840:
  1569     076E                     l1427:
  1570                           
  1571                           ;program.c: 125:             lcd_Goto(1, 6);
  1572     076E  3006               	movlw	6
  1573     076F  00F6               	movwf	lcd_Goto@x
  1574     0770  3001               	movlw	1
  1575     0771  3183  23E3  3186   	fcall	_lcd_Goto
  1576                           
  1577                           ;program.c: 126:             lcd_PrintString("Left ");
  1578     0774  3022               	movlw	low (STR_6| (0+32768))
  1579     0775  00F6               	movwf	lcd_PrintString@string
  1580     0776  3088               	movlw	high (STR_6| (0+32768))
  1581     0777  00F7               	movwf	lcd_PrintString@string+1
  1582     0778  3183  23B5  3186   	fcall	_lcd_PrintString
  1583     077B                     l1429:
  1584                           
  1585                           ;program.c: 128:             LATCbits.LATC3 = 1;;
  1586     077B  0022               	movlb	2	; select bank2
  1587     077C  158E               	bsf	14,3	;volatile
  1588     077D                     l1431:
  1589                           
  1590                           ;program.c: 130:             if(motorSpeed > 1023) motor_SetSpeed(1023);
  1591     077D  3004               	movlw	4
  1592     077E  0020               	movlb	0	; select bank0
  1593     077F  024A               	subwf	programLoop@motorSpeed+1,w
  1594     0780  3000               	movlw	0
  1595     0781  1903               	skipnz
  1596     0782  0249               	subwf	programLoop@motorSpeed,w
  1597     0783  1C03               	skipc
  1598     0784  2F86               	goto	u851
  1599     0785  2F87               	goto	u850
  1600     0786                     u851:
  1601     0786  2F8F               	goto	l1435
  1602     0787                     u850:
  1603     0787                     l1433:
  1604     0787  30FF               	movlw	255
  1605     0788  00F0               	movwf	motor_SetSpeed@pwm
  1606     0789  3003               	movlw	3
  1607     078A  00F1               	movwf	motor_SetSpeed@pwm+1
  1608     078B  3183  238A  3186   	fcall	_motor_SetSpeed
  1609     078E  2F96               	goto	l92
  1610     078F                     l1435:
  1611     078F  084A               	movf	programLoop@motorSpeed+1,w
  1612     0790  00F1               	movwf	motor_SetSpeed@pwm+1
  1613     0791  0849               	movf	programLoop@motorSpeed,w
  1614     0792  00F0               	movwf	motor_SetSpeed@pwm
  1615     0793  3183  238A  3186   	fcall	_motor_SetSpeed
  1616     0796                     l92:
  1617     0796  0020               	movlb	0	; select bank0
  1618     0797  1D8C               	btfss	12,3	;volatile
  1619     0798  2F9A               	goto	u861
  1620     0799  2F9B               	goto	u860
  1621     079A                     u861:
  1622     079A  2F96               	goto	l92
  1623     079B                     u860:
  1624     079B                     l1437:
  1625                           
  1626                           ;program.c: 135:             lcd_Goto(1, 6);
  1627     079B  3006               	movlw	6
  1628     079C  00F6               	movwf	lcd_Goto@x
  1629     079D  3001               	movlw	1
  1630     079E  3183  23E3  3186   	fcall	_lcd_Goto
  1631                           
  1632                           ;program.c: 136:             lcd_PrintString("     ");
  1633     07A1  3010               	movlw	low (STR_3| (0+32768))
  1634     07A2  00F6               	movwf	lcd_PrintString@string
  1635     07A3  3088               	movlw	high (STR_3| (0+32768))
  1636     07A4  00F7               	movwf	lcd_PrintString@string+1
  1637     07A5  3183  23B5  3186   	fcall	_lcd_PrintString
  1638     07A8                     l1439:
  1639                           
  1640                           ;program.c: 138:             pb_DelayDebounce();
  1641     07A8  3183  2339  3186   	fcall	_pb_DelayDebounce
  1642                           
  1643                           ;program.c: 139:         } else {
  1644     07AB  2FB2               	goto	l1443
  1645     07AC                     l1441:
  1646                           
  1647                           ;program.c: 140:             motor_SetSpeed(0);
  1648     07AC  3000               	movlw	0
  1649     07AD  00F0               	movwf	motor_SetSpeed@pwm
  1650     07AE  00F1               	movwf	motor_SetSpeed@pwm+1
  1651     07AF  3183  238A  3186   	fcall	_motor_SetSpeed
  1652     07B2                     l1443:
  1653                           
  1654                           ;program.c: 143:         if(!PORTAbits.RA4) {
  1655     07B2  0020               	movlb	0	; select bank0
  1656     07B3  1A0C               	btfsc	12,4	;volatile
  1657     07B4  2FB6               	goto	u871
  1658     07B5  2FB7               	goto	u870
  1659     07B6                     u871:
  1660     07B6  2FF5               	goto	l1459
  1661     07B7                     u870:
  1662     07B7                     l1445:
  1663                           
  1664                           ;program.c: 144:             lcd_Goto(1, 6);
  1665     07B7  3006               	movlw	6
  1666     07B8  00F6               	movwf	lcd_Goto@x
  1667     07B9  3001               	movlw	1
  1668     07BA  3183  23E3  3186   	fcall	_lcd_Goto
  1669                           
  1670                           ;program.c: 145:             lcd_PrintString("Right");
  1671     07BD  3028               	movlw	low (STR_8| (0+32768))
  1672     07BE  00F6               	movwf	lcd_PrintString@string
  1673     07BF  3088               	movlw	high (STR_8| (0+32768))
  1674     07C0  00F7               	movwf	lcd_PrintString@string+1
  1675     07C1  3183  23B5  3186   	fcall	_lcd_PrintString
  1676     07C4                     l1447:
  1677                           
  1678                           ;program.c: 147:             LATCbits.LATC3 = 0;;
  1679     07C4  0022               	movlb	2	; select bank2
  1680     07C5  118E               	bcf	14,3	;volatile
  1681     07C6                     l1449:
  1682                           
  1683                           ;program.c: 149:             if(motorSpeed > 1023) motor_SetSpeed(1023);
  1684     07C6  3004               	movlw	4
  1685     07C7  0020               	movlb	0	; select bank0
  1686     07C8  024A               	subwf	programLoop@motorSpeed+1,w
  1687     07C9  3000               	movlw	0
  1688     07CA  1903               	skipnz
  1689     07CB  0249               	subwf	programLoop@motorSpeed,w
  1690     07CC  1C03               	skipc
  1691     07CD  2FCF               	goto	u881
  1692     07CE  2FD0               	goto	u880
  1693     07CF                     u881:
  1694     07CF  2FD8               	goto	l1453
  1695     07D0                     u880:
  1696     07D0                     l1451:
  1697     07D0  30FF               	movlw	255
  1698     07D1  00F0               	movwf	motor_SetSpeed@pwm
  1699     07D2  3003               	movlw	3
  1700     07D3  00F1               	movwf	motor_SetSpeed@pwm+1
  1701     07D4  3183  238A  3186   	fcall	_motor_SetSpeed
  1702     07D7  2FDF               	goto	l99
  1703     07D8                     l1453:
  1704     07D8  084A               	movf	programLoop@motorSpeed+1,w
  1705     07D9  00F1               	movwf	motor_SetSpeed@pwm+1
  1706     07DA  0849               	movf	programLoop@motorSpeed,w
  1707     07DB  00F0               	movwf	motor_SetSpeed@pwm
  1708     07DC  3183  238A  3186   	fcall	_motor_SetSpeed
  1709     07DF                     l99:
  1710     07DF  0020               	movlb	0	; select bank0
  1711     07E0  1E0C               	btfss	12,4	;volatile
  1712     07E1  2FE3               	goto	u891
  1713     07E2  2FE4               	goto	u890
  1714     07E3                     u891:
  1715     07E3  2FDF               	goto	l99
  1716     07E4                     u890:
  1717     07E4                     l1455:
  1718                           
  1719                           ;program.c: 154:             lcd_Goto(1, 6);
  1720     07E4  3006               	movlw	6
  1721     07E5  00F6               	movwf	lcd_Goto@x
  1722     07E6  3001               	movlw	1
  1723     07E7  3183  23E3  3186   	fcall	_lcd_Goto
  1724                           
  1725                           ;program.c: 155:             lcd_PrintString("     ");
  1726     07EA  3010               	movlw	low (STR_3| (0+32768))
  1727     07EB  00F6               	movwf	lcd_PrintString@string
  1728     07EC  3088               	movlw	high (STR_3| (0+32768))
  1729     07ED  00F7               	movwf	lcd_PrintString@string+1
  1730     07EE  3183  23B5  3186   	fcall	_lcd_PrintString
  1731     07F1                     l1457:
  1732                           
  1733                           ;program.c: 157:             pb_DelayDebounce();
  1734     07F1  3183  2339  3186   	fcall	_pb_DelayDebounce
  1735                           
  1736                           ;program.c: 158:         } else {
  1737     07F4  2E9E               	goto	l1381
  1738     07F5                     l1459:
  1739                           
  1740                           ;program.c: 159:             motor_SetSpeed(0);
  1741     07F5  3000               	movlw	0
  1742     07F6  00F0               	movwf	motor_SetSpeed@pwm
  1743     07F7  00F1               	movwf	motor_SetSpeed@pwm+1
  1744     07F8  3183  238A  3186   	fcall	_motor_SetSpeed
  1745     07FB  2E9E               	goto	l1381
  1746     07FC  0008               	return
  1747     07FD                     __end_of_programLoop:
  1748                           
  1749                           	psect	text2
  1750     0339                     __ptext2:	
  1751 ;; *************** function _pb_DelayDebounce *****************
  1752 ;; Defined at:
  1753 ;;		line 166 in file "program.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0, pclath, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1767 ;;      Params:         0       0       0       0       0       0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0
  1770 ;;      Totals:         0       0       0       0       0       0       0
  1771 ;;Total ram usage:        0 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 3
  1774 ;; This function calls:
  1775 ;;		_delay_ms
  1776 ;; This function is called by:
  1777 ;;		_programLoop
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781     0339                     _pb_DelayDebounce:	
  1782                           ;psect for function _pb_DelayDebounce
  1783                           
  1784     0339                     l1365:	
  1785                           ;incstack = 0
  1786                           ; Regs used in _pb_DelayDebounce: [wreg+status,2+status,0+pclath+cstack]
  1787                           
  1788                           
  1789                           ;program.c: 167:     delay_ms(200);
  1790     0339  3000               	movlw	0
  1791     033A  00F9               	movwf	delay_ms@delay+3
  1792     033B  3000               	movlw	0
  1793     033C  00F8               	movwf	delay_ms@delay+2
  1794     033D  3000               	movlw	0
  1795     033E  00F7               	movwf	delay_ms@delay+1
  1796     033F  30C8               	movlw	200
  1797     0340  00F6               	movwf	delay_ms@delay
  1798     0341  3184  2400  3183   	fcall	_delay_ms
  1799     0344                     l108:
  1800     0344  0008               	return
  1801     0345                     __end_of_pb_DelayDebounce:
  1802                           
  1803                           	psect	text3
  1804     038A                     __ptext3:	
  1805 ;; *************** function _motor_SetSpeed *****************
  1806 ;; Defined at:
  1807 ;;		line 359 in file "program.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  pwm             2    0[COMMON] unsigned short 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;		None
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      void 
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1821 ;;      Params:         2       0       0       0       0       0       0
  1822 ;;      Locals:         0       0       0       0       0       0       0
  1823 ;;      Temps:          2       0       0       0       0       0       0
  1824 ;;      Totals:         4       0       0       0       0       0       0
  1825 ;;Total ram usage:        4 bytes
  1826 ;; Hardware stack levels used: 1
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_programLoop
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834     038A                     _motor_SetSpeed:	
  1835                           ;psect for function _motor_SetSpeed
  1836                           
  1837     038A                     l1363:	
  1838                           ;incstack = 0
  1839                           ; Regs used in _motor_SetSpeed: [wreg+status,2+status,0]
  1840                           
  1841                           
  1842                           ;program.c: 360:     CCPR1L = (uint8_t)(pwm>>2);
  1843     038A  0871               	movf	motor_SetSpeed@pwm+1,w
  1844     038B  00F3               	movwf	??_motor_SetSpeed+1
  1845     038C  0870               	movf	motor_SetSpeed@pwm,w
  1846     038D  00F2               	movwf	??_motor_SetSpeed
  1847     038E  36F3               	lsrf	??_motor_SetSpeed+1,f
  1848     038F  0CF2               	rrf	??_motor_SetSpeed,f
  1849     0390  36F3               	lsrf	??_motor_SetSpeed+1,f
  1850     0391  0CF2               	rrf	??_motor_SetSpeed,f
  1851     0392  0872               	movf	??_motor_SetSpeed,w
  1852     0393  0025               	movlb	5	; select bank5
  1853     0394  0091               	movwf	17	;volatile
  1854                           
  1855                           ;program.c: 361:     CCP1CONbits.DC1B = pwm & 0x03;
  1856     0395  0870               	movf	motor_SetSpeed@pwm,w
  1857     0396  3903               	andlw	3
  1858     0397  00F2               	movwf	??_motor_SetSpeed
  1859     0398  0EF2               	swapf	??_motor_SetSpeed,f
  1860     0399  0813               	movf	19,w	;volatile
  1861     039A  0672               	xorwf	??_motor_SetSpeed,w
  1862     039B  39CF               	andlw	-49
  1863     039C  0672               	xorwf	??_motor_SetSpeed,w
  1864     039D  0093               	movwf	19	;volatile
  1865     039E                     l176:
  1866     039E  0008               	return
  1867     039F                     __end_of_motor_SetSpeed:
  1868                           
  1869                           	psect	text4
  1870     05A5                     __ptext4:	
  1871 ;; *************** function _lcd_PrintDigitInt32 *****************
  1872 ;; Defined at:
  1873 ;;		line 305 in file "program.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  number          4    0[BANK0 ] long 
  1876 ;;  noDigit         1    4[BANK0 ] unsigned char 
  1877 ;;  enSign          1    5[BANK0 ] _Bool 
  1878 ;;  enZero          1    6[BANK0 ] _Bool 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  tempN           4   33[BANK0 ] long 
  1881 ;;  tempC           1   37[BANK0 ] unsigned char 
  1882 ;;  numberChar     11   22[BANK0 ] unsigned char [11]
  1883 ;;  numberRevCha   11   11[BANK0 ] unsigned char [11]
  1884 ;;  i1              1   40[BANK0 ] unsigned char 
  1885 ;;  totalDigit      1   39[BANK0 ] unsigned char 
  1886 ;;  i2              1   38[BANK0 ] unsigned char 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1896 ;;      Params:         0       7       0       0       0       0       0
  1897 ;;      Locals:         0      30       0       0       0       0       0
  1898 ;;      Temps:          0       4       0       0       0       0       0
  1899 ;;      Totals:         0      41       0       0       0       0       0
  1900 ;;Total ram usage:       41 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 6
  1903 ;; This function calls:
  1904 ;;		___aldiv
  1905 ;;		___bmul
  1906 ;;		_labs
  1907 ;;		_lcd_PrintChar
  1908 ;;		_lcd_PrintString
  1909 ;;		_memset
  1910 ;; This function is called by:
  1911 ;;		_programLoop
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915     05A5                     _lcd_PrintDigitInt32:	
  1916                           ;psect for function _lcd_PrintDigitInt32
  1917                           
  1918     05A5                     l1303:	
  1919                           ;incstack = 0
  1920                           ; Regs used in _lcd_PrintDigitInt32: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1921                           
  1922                           
  1923                           ;program.c: 306:     uint8_t i1 = 0,
  1924     05A5  0020               	movlb	0	; select bank0
  1925     05A6  01C8               	clrf	lcd_PrintDigitInt32@i1
  1926                           
  1927                           ;program.c: 308:             totalDigit = 0;
  1928     05A7  01C7               	clrf	lcd_PrintDigitInt32@totalDigit
  1929     05A8                     l1305:
  1930                           
  1931                           ;program.c: 310:     char numberRevChar[11];;program.c: 311:     char numberChar[11];;pr
      +                          ogram.c: 314:     memset(numberRevChar, 0, 11);
  1932     05A8  302B               	movlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  1933     05A9  00F0               	movwf	memset@dest
  1934     05AA  3000               	movlw	0
  1935     05AB  00F1               	movwf	memset@c
  1936     05AC  00F2               	movwf	memset@c+1
  1937     05AD  300B               	movlw	11
  1938     05AE  00F3               	movwf	memset@n
  1939     05AF  3000               	movlw	0
  1940     05B0  00F4               	movwf	memset@n+1
  1941     05B1  3183  23CC  3185   	fcall	_memset
  1942     05B4                     l1307:
  1943                           
  1944                           ;program.c: 315:     memset(numberChar, 0, 11);
  1945     05B4  3036               	movlw	(low (lcd_PrintDigitInt32@numberChar| 0))& (0+255)
  1946     05B5  00F0               	movwf	memset@dest
  1947     05B6  3000               	movlw	0
  1948     05B7  00F1               	movwf	memset@c
  1949     05B8  00F2               	movwf	memset@c+1
  1950     05B9  300B               	movlw	11
  1951     05BA  00F3               	movwf	memset@n
  1952     05BB  3000               	movlw	0
  1953     05BC  00F4               	movwf	memset@n+1
  1954     05BD  3183  23CC  3185   	fcall	_memset
  1955     05C0                     l1309:
  1956                           
  1957                           ;program.c: 317:     if(number<0) {
  1958     05C0  0020               	movlb	0	; select bank0
  1959     05C1  1FA3               	btfss	lcd_PrintDigitInt32@number+3,7
  1960     05C2  2DC4               	goto	u721
  1961     05C3  2DC5               	goto	u720
  1962     05C4                     u721:
  1963     05C4  2DE4               	goto	l1315
  1964     05C5                     u720:
  1965     05C5                     l1311:
  1966                           
  1967                           ;program.c: 318:         if(enSign) lcd_PrintChar('-');
  1968     05C5  0825               	movf	lcd_PrintDigitInt32@enSign,w
  1969     05C6  1903               	btfsc	3,2
  1970     05C7  2DC9               	goto	u731
  1971     05C8  2DCA               	goto	u730
  1972     05C9                     u731:
  1973     05C9  2DCE               	goto	l158
  1974     05CA                     u730:
  1975     05CA                     l1313:
  1976     05CA  302D               	movlw	45
  1977     05CB  3183  232E  3185   	fcall	_lcd_PrintChar
  1978     05CE                     l158:
  1979                           
  1980                           ;program.c: 319:         number = labs(number);
  1981     05CE  0020               	movlb	0	; select bank0
  1982     05CF  0823               	movf	lcd_PrintDigitInt32@number+3,w
  1983     05D0  00F3               	movwf	labs@a+3
  1984     05D1  0822               	movf	lcd_PrintDigitInt32@number+2,w
  1985     05D2  00F2               	movwf	labs@a+2
  1986     05D3  0821               	movf	lcd_PrintDigitInt32@number+1,w
  1987     05D4  00F1               	movwf	labs@a+1
  1988     05D5  0820               	movf	lcd_PrintDigitInt32@number,w
  1989     05D6  00F0               	movwf	labs@a
  1990     05D7  3183  2375  3185   	fcall	_labs
  1991     05DA  0873               	movf	?_labs+3,w
  1992     05DB  0020               	movlb	0	; select bank0
  1993     05DC  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1994     05DD  0872               	movf	?_labs+2,w
  1995     05DE  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1996     05DF  0871               	movf	?_labs+1,w
  1997     05E0  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1998     05E1  0870               	movf	?_labs,w
  1999     05E2  00A0               	movwf	lcd_PrintDigitInt32@number
  2000                           
  2001                           ;program.c: 320:     } else {
  2002     05E3  2DED               	goto	l1319
  2003     05E4                     l1315:
  2004                           
  2005                           ;program.c: 321:         if(enSign) lcd_PrintChar(' ');
  2006     05E4  0825               	movf	lcd_PrintDigitInt32@enSign,w
  2007     05E5  1903               	btfsc	3,2
  2008     05E6  2DE8               	goto	u741
  2009     05E7  2DE9               	goto	u740
  2010     05E8                     u741:
  2011     05E8  2DED               	goto	l1319
  2012     05E9                     u740:
  2013     05E9                     l1317:
  2014     05E9  3020               	movlw	32
  2015     05EA  3183  232E  3185   	fcall	_lcd_PrintChar
  2016     05ED                     l1319:
  2017                           
  2018                           ;program.c: 325:         int32_t tempN = number;
  2019     05ED  0020               	movlb	0	; select bank0
  2020     05EE  0823               	movf	lcd_PrintDigitInt32@number+3,w
  2021     05EF  00C4               	movwf	lcd_PrintDigitInt32@tempN+3
  2022     05F0  0822               	movf	lcd_PrintDigitInt32@number+2,w
  2023     05F1  00C3               	movwf	lcd_PrintDigitInt32@tempN+2
  2024     05F2  0821               	movf	lcd_PrintDigitInt32@number+1,w
  2025     05F3  00C2               	movwf	lcd_PrintDigitInt32@tempN+1
  2026     05F4  0820               	movf	lcd_PrintDigitInt32@number,w
  2027     05F5  00C1               	movwf	lcd_PrintDigitInt32@tempN
  2028     05F6                     l1321:
  2029                           
  2030                           ;program.c: 326:         number /= 10;
  2031     05F6  3000               	movlw	0
  2032     05F7  00F3               	movwf	___aldiv@divisor+3
  2033     05F8  3000               	movlw	0
  2034     05F9  00F2               	movwf	___aldiv@divisor+2
  2035     05FA  3000               	movlw	0
  2036     05FB  00F1               	movwf	___aldiv@divisor+1
  2037     05FC  300A               	movlw	10
  2038     05FD  00F0               	movwf	___aldiv@divisor
  2039     05FE  0823               	movf	lcd_PrintDigitInt32@number+3,w
  2040     05FF  00F7               	movwf	___aldiv@dividend+3
  2041     0600  0822               	movf	lcd_PrintDigitInt32@number+2,w
  2042     0601  00F6               	movwf	___aldiv@dividend+2
  2043     0602  0821               	movf	lcd_PrintDigitInt32@number+1,w
  2044     0603  00F5               	movwf	___aldiv@dividend+1
  2045     0604  0820               	movf	lcd_PrintDigitInt32@number,w
  2046     0605  00F4               	movwf	___aldiv@dividend
  2047     0606  3185  251A  3185   	fcall	___aldiv
  2048     0609  0873               	movf	?___aldiv+3,w
  2049     060A  0020               	movlb	0	; select bank0
  2050     060B  00A3               	movwf	lcd_PrintDigitInt32@number+3
  2051     060C  0872               	movf	?___aldiv+2,w
  2052     060D  00A2               	movwf	lcd_PrintDigitInt32@number+2
  2053     060E  0871               	movf	?___aldiv+1,w
  2054     060F  00A1               	movwf	lcd_PrintDigitInt32@number+1
  2055     0610  0870               	movf	?___aldiv,w
  2056     0611  00A0               	movwf	lcd_PrintDigitInt32@number
  2057     0612                     l1323:
  2058                           
  2059                           ;program.c: 327:         char tempC = (char)(tempN -10 * number);
  2060     0612  30F6               	movlw	246
  2061     0613  00F0               	movwf	___bmul@multiplicand
  2062     0614  0820               	movf	lcd_PrintDigitInt32@number,w
  2063     0615  3183  2362  3185   	fcall	___bmul
  2064     0618  0020               	movlb	0	; select bank0
  2065     0619  0741               	addwf	lcd_PrintDigitInt32@tempN,w
  2066     061A  00C5               	movwf	lcd_PrintDigitInt32@tempC
  2067     061B                     l1325:
  2068                           
  2069                           ;program.c: 328:         numberRevChar[i1] = tempC + 48;
  2070     061B  0848               	movf	lcd_PrintDigitInt32@i1,w
  2071     061C  3E2B               	addlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  2072     061D  0086               	movwf	6
  2073     061E  0187               	clrf	7
  2074     061F  0845               	movf	lcd_PrintDigitInt32@tempC,w
  2075     0620  3E30               	addlw	48
  2076     0621  0081               	movwf	1
  2077     0622                     l1327:
  2078                           
  2079                           ;program.c: 329:         i1++;
  2080     0622  3001               	movlw	1
  2081     0623  07C8               	addwf	lcd_PrintDigitInt32@i1,f
  2082     0624                     l1329:
  2083                           
  2084                           ;program.c: 330:     } while(number);
  2085     0624  0823               	movf	lcd_PrintDigitInt32@number+3,w
  2086     0625  0422               	iorwf	lcd_PrintDigitInt32@number+2,w
  2087     0626  0421               	iorwf	lcd_PrintDigitInt32@number+1,w
  2088     0627  0420               	iorwf	lcd_PrintDigitInt32@number,w
  2089     0628  1D03               	skipz
  2090     0629  2E2B               	goto	u751
  2091     062A  2E2C               	goto	u750
  2092     062B                     u751:
  2093     062B  2DED               	goto	l1319
  2094     062C                     u750:
  2095     062C                     l1331:
  2096                           
  2097                           ;program.c: 332:     totalDigit = i1;
  2098     062C  0848               	movf	lcd_PrintDigitInt32@i1,w
  2099     062D  00C7               	movwf	lcd_PrintDigitInt32@totalDigit
  2100     062E                     l1333:
  2101                           
  2102                           ;program.c: 334:     for(i1=0; i1<(noDigit-totalDigit); i1++) {
  2103     062E  01C8               	clrf	lcd_PrintDigitInt32@i1
  2104     062F  2E42               	goto	l1343
  2105     0630                     l1335:
  2106                           
  2107                           ;program.c: 335:         if(enZero) lcd_PrintChar('0');
  2108     0630  0020               	movlb	0	; select bank0
  2109     0631  0826               	movf	lcd_PrintDigitInt32@enZero,w
  2110     0632  1903               	btfsc	3,2
  2111     0633  2E35               	goto	u761
  2112     0634  2E36               	goto	u760
  2113     0635                     u761:
  2114     0635  2E3B               	goto	l1339
  2115     0636                     u760:
  2116     0636                     l1337:
  2117     0636  3030               	movlw	48
  2118     0637  3183  232E  3185   	fcall	_lcd_PrintChar
  2119     063A  2E3F               	goto	l1341
  2120     063B                     l1339:
  2121     063B  3020               	movlw	32
  2122     063C  3183  232E  3185   	fcall	_lcd_PrintChar
  2123     063F                     l1341:
  2124                           
  2125                           ;program.c: 337:     }
  2126     063F  3001               	movlw	1
  2127     0640  0020               	movlb	0	; select bank0
  2128     0641  07C8               	addwf	lcd_PrintDigitInt32@i1,f
  2129     0642                     l1343:
  2130     0642  0824               	movf	lcd_PrintDigitInt32@noDigit,w
  2131     0643  00A7               	movwf	??_lcd_PrintDigitInt32
  2132     0644  01A8               	clrf	??_lcd_PrintDigitInt32+1
  2133     0645  0828               	movf	??_lcd_PrintDigitInt32+1,w
  2134     0646  00AA               	movwf	??_lcd_PrintDigitInt32+3
  2135     0647  0847               	movf	lcd_PrintDigitInt32@totalDigit,w
  2136     0648  0227               	subwf	??_lcd_PrintDigitInt32,w
  2137     0649  00A9               	movwf	??_lcd_PrintDigitInt32+2
  2138     064A  1C03               	skipc
  2139     064B  03AA               	decf	??_lcd_PrintDigitInt32+3,f
  2140     064C  082A               	movf	??_lcd_PrintDigitInt32+3,w
  2141     064D  3A80               	xorlw	128
  2142     064E  3C80               	sublw	128
  2143     064F  1D03               	skipz
  2144     0650  2E53               	goto	u775
  2145     0651  0829               	movf	??_lcd_PrintDigitInt32+2,w
  2146     0652  0248               	subwf	lcd_PrintDigitInt32@i1,w
  2147     0653                     u775:
  2148     0653  1C03               	skipc
  2149     0654  2E56               	goto	u771
  2150     0655  2E57               	goto	u770
  2151     0656                     u771:
  2152     0656  2E30               	goto	l1335
  2153     0657                     u770:
  2154     0657                     l1345:
  2155                           
  2156                           ;program.c: 339:     for(i1=totalDigit, i2=0; i1>0; i1--, i2++) {
  2157     0657  0020               	movlb	0	; select bank0
  2158     0658  0847               	movf	lcd_PrintDigitInt32@totalDigit,w
  2159     0659  00C8               	movwf	lcd_PrintDigitInt32@i1
  2160     065A                     l1347:
  2161     065A  01C6               	clrf	lcd_PrintDigitInt32@i2
  2162     065B                     l1349:
  2163     065B  0848               	movf	lcd_PrintDigitInt32@i1,w
  2164     065C  1D03               	btfss	3,2
  2165     065D  2E5F               	goto	u781
  2166     065E  2E60               	goto	u780
  2167     065F                     u781:
  2168     065F  2E61               	goto	l1353
  2169     0660                     u780:
  2170     0660  2E71               	goto	l1361
  2171     0661                     l1353:
  2172                           
  2173                           ;program.c: 340:         numberChar[i2] = numberRevChar[i1-1];
  2174     0661  0846               	movf	lcd_PrintDigitInt32@i2,w
  2175     0662  3E36               	addlw	(low (lcd_PrintDigitInt32@numberChar| 0))& (0+255)
  2176     0663  0086               	movwf	6
  2177     0664  0187               	clrf	7
  2178     0665  0848               	movf	lcd_PrintDigitInt32@i1,w
  2179     0666  3EFF               	addlw	255
  2180     0667  3E2B               	addlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  2181     0668  0084               	movwf	4
  2182     0669  0185               	clrf	5
  2183     066A  0800               	movf	0,w
  2184     066B  0081               	movwf	1
  2185     066C                     l1355:
  2186                           
  2187                           ;program.c: 341:     }
  2188     066C  3001               	movlw	1
  2189     066D  02C8               	subwf	lcd_PrintDigitInt32@i1,f
  2190     066E                     l1357:
  2191     066E  3001               	movlw	1
  2192     066F  07C6               	addwf	lcd_PrintDigitInt32@i2,f
  2193     0670  2E5B               	goto	l1349
  2194     0671                     l1361:
  2195                           
  2196                           ;program.c: 343:     lcd_PrintString(numberChar);
  2197     0671  3036               	movlw	low lcd_PrintDigitInt32@numberChar
  2198     0672  00F6               	movwf	lcd_PrintString@string
  2199     0673  3000               	movlw	high lcd_PrintDigitInt32@numberChar
  2200     0674  00F7               	movwf	lcd_PrintString@string+1
  2201     0675  3183  23B5  3185   	fcall	_lcd_PrintString
  2202     0678                     l170:
  2203     0678  0008               	return
  2204     0679                     __end_of_lcd_PrintDigitInt32:
  2205                           
  2206                           	psect	text5
  2207     03CC                     __ptext5:	
  2208 ;; *************** function _memset *****************
  2209 ;; Defined at:
  2210 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memset.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  dest            1    0[COMMON] PTR void 
  2213 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintDigitInt32@numberRevChar(11), lcd_PrintInt32@numberChar(11), lcd_Pr
      +intInt32@numberRevChar(11), 
  2214 ;;  c               2    1[COMMON] int 
  2215 ;;  n               2    3[COMMON] unsigned int 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  p               1    5[COMMON] PTR unsigned char 
  2218 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintDigitInt32@numberRevChar(11), lcd_PrintInt32@numberChar(11), lcd_Pr
      +intInt32@numberRevChar(11), 
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    0[COMMON] PTR void 
  2221 ;; Registers used:
  2222 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2228 ;;      Params:         5       0       0       0       0       0       0
  2229 ;;      Locals:         1       0       0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0       0
  2231 ;;      Totals:         6       0       0       0       0       0       0
  2232 ;;Total ram usage:        6 bytes
  2233 ;; Hardware stack levels used: 1
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_lcd_PrintDigitInt32
  2238 ;;		_lcd_PrintInt32
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242     03CC                     _memset:	
  2243                           ;psect for function _memset
  2244                           
  2245     03CC                     l1219:	
  2246                           ;incstack = 0
  2247                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  2248                           
  2249     03CC  0870               	movf	memset@dest,w
  2250     03CD  00F5               	movwf	memset@p
  2251     03CE  2BD6               	goto	l1225
  2252     03CF                     l1221:
  2253     03CF  0875               	movf	memset@p,w
  2254     03D0  0086               	movwf	6
  2255     03D1  0187               	clrf	7
  2256     03D2  0871               	movf	memset@c,w
  2257     03D3  0081               	movwf	1
  2258     03D4                     l1223:
  2259     03D4  3001               	movlw	1
  2260     03D5  07F5               	addwf	memset@p,f
  2261     03D6                     l1225:
  2262     03D6  3001               	movlw	1
  2263     03D7  02F3               	subwf	memset@n,f
  2264     03D8  3000               	movlw	0
  2265     03D9  3BF4               	subwfb	memset@n+1,f
  2266     03DA  0A73               	incf	memset@n,w
  2267     03DB  1D03               	skipz
  2268     03DC  2BE1               	goto	u581
  2269     03DD  0A74               	incf	memset@n+1,w
  2270     03DE  1D03               	btfss	3,2
  2271     03DF  2BE1               	goto	u581
  2272     03E0  2BE2               	goto	u580
  2273     03E1                     u581:
  2274     03E1  2BCF               	goto	l1221
  2275     03E2                     u580:
  2276     03E2                     l795:
  2277     03E2  0008               	return
  2278     03E3                     __end_of_memset:
  2279                           
  2280                           	psect	text6
  2281     03B5                     __ptext6:	
  2282 ;; *************** function _lcd_PrintString *****************
  2283 ;; Defined at:
  2284 ;;		line 264 in file "program.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  string          2    6[COMMON] PTR unsigned char 
  2287 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintInt32@numberChar(11), STR_9(6), STR_8(6), 
  2288 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
  2289 ;;		 -> STR_3(6), STR_2(6), STR_1(16), 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2301 ;;      Params:         2       0       0       0       0       0       0
  2302 ;;      Locals:         0       0       0       0       0       0       0
  2303 ;;      Temps:          1       0       0       0       0       0       0
  2304 ;;      Totals:         3       0       0       0       0       0       0
  2305 ;;Total ram usage:        3 bytes
  2306 ;; Hardware stack levels used: 1
  2307 ;; Hardware stack levels required when called: 5
  2308 ;; This function calls:
  2309 ;;		_lcd_PrintChar
  2310 ;; This function is called by:
  2311 ;;		_programLoop
  2312 ;;		_lcd_PrintDigitInt32
  2313 ;;		_lcd_PrintInt32
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317     03B5                     _lcd_PrintString:	
  2318                           ;psect for function _lcd_PrintString
  2319                           
  2320     03B5                     l1207:	
  2321                           ;incstack = 0
  2322                           ; Regs used in _lcd_PrintString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2323                           
  2324                           
  2325                           ;program.c: 265:     while(*string!=0) {
  2326     03B5  2BC2               	goto	l1213
  2327     03B6                     l1209:
  2328                           
  2329                           ;program.c: 266:         lcd_PrintChar(*string);
  2330     03B6  0876               	movf	lcd_PrintString@string,w
  2331     03B7  0084               	movwf	4
  2332     03B8  0877               	movf	lcd_PrintString@string+1,w
  2333     03B9  0085               	movwf	5
  2334     03BA  0800               	movf	0,w	;code access
  2335     03BB  3183  232E  3183   	fcall	_lcd_PrintChar
  2336     03BE                     l1211:
  2337                           
  2338                           ;program.c: 267:         string++;
  2339     03BE  3001               	movlw	1
  2340     03BF  07F6               	addwf	lcd_PrintString@string,f
  2341     03C0  3000               	movlw	0
  2342     03C1  3DF7               	addwfc	lcd_PrintString@string+1,f
  2343     03C2                     l1213:
  2344                           
  2345                           ;program.c: 265:     while(*string!=0) {
  2346     03C2  0876               	movf	lcd_PrintString@string,w
  2347     03C3  0084               	movwf	4
  2348     03C4  0877               	movf	lcd_PrintString@string+1,w
  2349     03C5  0085               	movwf	5
  2350     03C6  0012               	moviw fsr0++
  2351     03C7  1D03               	btfss	3,2
  2352     03C8  2BCA               	goto	u571
  2353     03C9  2BCB               	goto	u570
  2354     03CA                     u571:
  2355     03CA  2BB6               	goto	l1209
  2356     03CB                     u570:
  2357     03CB                     l146:
  2358     03CB  0008               	return
  2359     03CC                     __end_of_lcd_PrintString:
  2360                           
  2361                           	psect	text7
  2362     032E                     __ptext7:	
  2363 ;; *************** function _lcd_PrintChar *****************
  2364 ;; Defined at:
  2365 ;;		line 257 in file "program.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  character       1    wreg     unsigned char 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  character       1    5[COMMON] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0, pclath, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2379 ;;      Params:         0       0       0       0       0       0       0
  2380 ;;      Locals:         1       0       0       0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0
  2382 ;;      Totals:         1       0       0       0       0       0       0
  2383 ;;Total ram usage:        1 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 4
  2386 ;; This function calls:
  2387 ;;		_lcd_DelaySetupTime
  2388 ;;		_lcd_WriteData
  2389 ;; This function is called by:
  2390 ;;		_lcd_PrintString
  2391 ;;		_lcd_PrintDigitInt32
  2392 ;;		_lcd_PrintInt32
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396     032E                     _lcd_PrintChar:	
  2397                           ;psect for function _lcd_PrintChar
  2398                           
  2399                           
  2400                           ;incstack = 0
  2401                           ; Regs used in _lcd_PrintChar: [wreg+status,2+status,0+pclath+cstack]
  2402                           ;lcd_PrintChar@character stored from wreg
  2403     032E  00F5               	movwf	lcd_PrintChar@character
  2404     032F                     l1195:
  2405                           
  2406                           ;program.c: 258:     LATBbits.LATB5 = 1;
  2407     032F  0022               	movlb	2	; select bank2
  2408     0330  168D               	bsf	13,5	;volatile
  2409     0331                     l1197:
  2410                           
  2411                           ;program.c: 259:     lcd_DelaySetupTime();
  2412     0331  3183  2305  3183   	fcall	_lcd_DelaySetupTime
  2413                           
  2414                           ;program.c: 261:     lcd_WriteData(character);
  2415     0334  0875               	movf	lcd_PrintChar@character,w
  2416     0335  3184  2492  3183   	fcall	_lcd_WriteData
  2417     0338                     l140:
  2418     0338  0008               	return
  2419     0339                     __end_of_lcd_PrintChar:
  2420                           
  2421                           	psect	text8
  2422     0375                     __ptext8:	
  2423 ;; *************** function _labs *****************
  2424 ;; Defined at:
  2425 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\labs.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  a               4    0[COMMON] long 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;		None
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  4    0[COMMON] long 
  2432 ;; Registers used:
  2433 ;;		wreg, status,2, status,0
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2439 ;;      Params:         4       0       0       0       0       0       0
  2440 ;;      Locals:         0       0       0       0       0       0       0
  2441 ;;      Temps:          0       0       0       0       0       0       0
  2442 ;;      Totals:         4       0       0       0       0       0       0
  2443 ;;Total ram usage:        4 bytes
  2444 ;; Hardware stack levels used: 1
  2445 ;; This function calls:
  2446 ;;		Nothing
  2447 ;; This function is called by:
  2448 ;;		_lcd_PrintDigitInt32
  2449 ;;		_lcd_PrintInt32
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453     0375                     _labs:	
  2454                           ;psect for function _labs
  2455                           
  2456     0375                     l1227:	
  2457                           ;incstack = 0
  2458                           ; Regs used in _labs: [wreg+status,2+status,0]
  2459                           
  2460     0375  1BF3               	btfsc	labs@a+3,7
  2461     0376  2B78               	goto	u591
  2462     0377  2B79               	goto	u590
  2463     0378                     u591:
  2464     0378  2B7A               	goto	l1231
  2465     0379                     u590:
  2466     0379                     l1229:
  2467     0379  2B89               	goto	l789
  2468     037A                     l1231:
  2469     037A  0970               	comf	labs@a,w
  2470     037B  00F0               	movwf	?_labs
  2471     037C  0971               	comf	labs@a+1,w
  2472     037D  00F1               	movwf	?_labs+1
  2473     037E  0972               	comf	labs@a+2,w
  2474     037F  00F2               	movwf	?_labs+2
  2475     0380  0973               	comf	labs@a+3,w
  2476     0381  00F3               	movwf	?_labs+3
  2477     0382  0AF0               	incf	?_labs,f
  2478     0383  1903               	skipnz
  2479     0384  0AF1               	incf	?_labs+1,f
  2480     0385  1903               	skipnz
  2481     0386  0AF2               	incf	?_labs+2,f
  2482     0387  1903               	skipnz
  2483     0388  0AF3               	incf	?_labs+3,f
  2484     0389                     l789:
  2485     0389  0008               	return
  2486     038A                     __end_of_labs:
  2487                           
  2488                           	psect	text9
  2489     0362                     __ptext9:	
  2490 ;; *************** function ___bmul *****************
  2491 ;; Defined at:
  2492 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  multiplier      1    wreg     unsigned char 
  2495 ;;  multiplicand    1    0[COMMON] unsigned char 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  multiplier      1    2[COMMON] unsigned char 
  2498 ;;  product         1    1[COMMON] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      unsigned char 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2508 ;;      Params:         1       0       0       0       0       0       0
  2509 ;;      Locals:         2       0       0       0       0       0       0
  2510 ;;      Temps:          0       0       0       0       0       0       0
  2511 ;;      Totals:         3       0       0       0       0       0       0
  2512 ;;Total ram usage:        3 bytes
  2513 ;; Hardware stack levels used: 1
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_lcd_PrintDigitInt32
  2518 ;;		_lcd_PrintInt32
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522     0362                     ___bmul:	
  2523                           ;psect for function ___bmul
  2524                           
  2525                           
  2526                           ;incstack = 0
  2527                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2528                           ;___bmul@multiplier stored from wreg
  2529     0362  00F2               	movwf	___bmul@multiplier
  2530     0363                     l1235:
  2531     0363  01F1               	clrf	___bmul@product
  2532     0364                     l1237:
  2533     0364  1C72               	btfss	___bmul@multiplier,0
  2534     0365  2B67               	goto	u601
  2535     0366  2B68               	goto	u600
  2536     0367                     u601:
  2537     0367  2B6A               	goto	l1241
  2538     0368                     u600:
  2539     0368                     l1239:
  2540     0368  0870               	movf	___bmul@multiplicand,w
  2541     0369  07F1               	addwf	___bmul@product,f
  2542     036A                     l1241:
  2543     036A  1003               	clrc
  2544     036B  0DF0               	rlf	___bmul@multiplicand,f
  2545     036C                     l1243:
  2546     036C  1003               	clrc
  2547     036D  0CF2               	rrf	___bmul@multiplier,f
  2548     036E  0872               	movf	___bmul@multiplier,w
  2549     036F  1D03               	btfss	3,2
  2550     0370  2B72               	goto	u611
  2551     0371  2B73               	goto	u610
  2552     0372                     u611:
  2553     0372  2B64               	goto	l1237
  2554     0373                     u610:
  2555     0373                     l1245:
  2556     0373  0871               	movf	___bmul@product,w
  2557     0374                     l352:
  2558     0374  0008               	return
  2559     0375                     __end_of___bmul:
  2560                           
  2561                           	psect	text10
  2562     051A                     __ptext10:	
  2563 ;; *************** function ___aldiv *****************
  2564 ;; Defined at:
  2565 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  divisor         4    0[COMMON] long 
  2568 ;;  dividend        4    4[COMMON] long 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  quotient        4   10[COMMON] long 
  2571 ;;  sign            1    9[COMMON] unsigned char 
  2572 ;;  counter         1    8[COMMON] unsigned char 
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  4    0[COMMON] long 
  2575 ;; Registers used:
  2576 ;;		wreg, status,2, status,0
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2582 ;;      Params:         8       0       0       0       0       0       0
  2583 ;;      Locals:         6       0       0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0
  2585 ;;      Totals:        14       0       0       0       0       0       0
  2586 ;;Total ram usage:       14 bytes
  2587 ;; Hardware stack levels used: 1
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_lcd_PrintDigitInt32
  2592 ;;		_lcd_PrintInt32
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596     051A                     ___aldiv:	
  2597                           ;psect for function ___aldiv
  2598                           
  2599     051A                     l1249:	
  2600                           ;incstack = 0
  2601                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2602                           
  2603     051A  01F9               	clrf	___aldiv@sign
  2604     051B                     l1251:
  2605     051B  1FF3               	btfss	___aldiv@divisor+3,7
  2606     051C  2D1E               	goto	u621
  2607     051D  2D1F               	goto	u620
  2608     051E                     u621:
  2609     051E  2D2C               	goto	l391
  2610     051F                     u620:
  2611     051F                     l1253:
  2612     051F  09F0               	comf	___aldiv@divisor,f
  2613     0520  09F1               	comf	___aldiv@divisor+1,f
  2614     0521  09F2               	comf	___aldiv@divisor+2,f
  2615     0522  09F3               	comf	___aldiv@divisor+3,f
  2616     0523  0AF0               	incf	___aldiv@divisor,f
  2617     0524  1903               	skipnz
  2618     0525  0AF1               	incf	___aldiv@divisor+1,f
  2619     0526  1903               	skipnz
  2620     0527  0AF2               	incf	___aldiv@divisor+2,f
  2621     0528  1903               	skipnz
  2622     0529  0AF3               	incf	___aldiv@divisor+3,f
  2623     052A  3001               	movlw	1
  2624     052B  00F9               	movwf	___aldiv@sign
  2625     052C                     l391:
  2626     052C  1FF7               	btfss	___aldiv@dividend+3,7
  2627     052D  2D2F               	goto	u631
  2628     052E  2D30               	goto	u630
  2629     052F                     u631:
  2630     052F  2D3D               	goto	l1259
  2631     0530                     u630:
  2632     0530                     l1255:
  2633     0530  09F4               	comf	___aldiv@dividend,f
  2634     0531  09F5               	comf	___aldiv@dividend+1,f
  2635     0532  09F6               	comf	___aldiv@dividend+2,f
  2636     0533  09F7               	comf	___aldiv@dividend+3,f
  2637     0534  0AF4               	incf	___aldiv@dividend,f
  2638     0535  1903               	skipnz
  2639     0536  0AF5               	incf	___aldiv@dividend+1,f
  2640     0537  1903               	skipnz
  2641     0538  0AF6               	incf	___aldiv@dividend+2,f
  2642     0539  1903               	skipnz
  2643     053A  0AF7               	incf	___aldiv@dividend+3,f
  2644     053B                     l1257:
  2645     053B  3001               	movlw	1
  2646     053C  06F9               	xorwf	___aldiv@sign,f
  2647     053D                     l1259:
  2648     053D  3000               	movlw	0
  2649     053E  00FD               	movwf	___aldiv@quotient+3
  2650     053F  3000               	movlw	0
  2651     0540  00FC               	movwf	___aldiv@quotient+2
  2652     0541  3000               	movlw	0
  2653     0542  00FB               	movwf	___aldiv@quotient+1
  2654     0543  3000               	movlw	0
  2655     0544  00FA               	movwf	___aldiv@quotient
  2656     0545                     l1261:
  2657     0545  0873               	movf	___aldiv@divisor+3,w
  2658     0546  0472               	iorwf	___aldiv@divisor+2,w
  2659     0547  0471               	iorwf	___aldiv@divisor+1,w
  2660     0548  0470               	iorwf	___aldiv@divisor,w
  2661     0549  1903               	skipnz
  2662     054A  2D4C               	goto	u641
  2663     054B  2D4D               	goto	u640
  2664     054C                     u641:
  2665     054C  2D8C               	goto	l1281
  2666     054D                     u640:
  2667     054D                     l1263:
  2668     054D  3001               	movlw	1
  2669     054E  00F8               	movwf	___aldiv@counter
  2670     054F  2D59               	goto	l1267
  2671     0550                     l1265:
  2672     0550  3001               	movlw	1
  2673     0551                     u655:
  2674     0551  35F0               	lslf	___aldiv@divisor,f
  2675     0552  0DF1               	rlf	___aldiv@divisor+1,f
  2676     0553  0DF2               	rlf	___aldiv@divisor+2,f
  2677     0554  0DF3               	rlf	___aldiv@divisor+3,f
  2678     0555  0B89               	decfsz	9,f
  2679     0556  2D51               	goto	u655
  2680     0557  3001               	movlw	1
  2681     0558  07F8               	addwf	___aldiv@counter,f
  2682     0559                     l1267:
  2683     0559  1FF3               	btfss	___aldiv@divisor+3,7
  2684     055A  2D5C               	goto	u661
  2685     055B  2D5D               	goto	u660
  2686     055C                     u661:
  2687     055C  2D50               	goto	l1265
  2688     055D                     u660:
  2689     055D                     l1269:
  2690     055D  3001               	movlw	1
  2691     055E                     u675:
  2692     055E  35FA               	lslf	___aldiv@quotient,f
  2693     055F  0DFB               	rlf	___aldiv@quotient+1,f
  2694     0560  0DFC               	rlf	___aldiv@quotient+2,f
  2695     0561  0DFD               	rlf	___aldiv@quotient+3,f
  2696     0562  0B89               	decfsz	9,f
  2697     0563  2D5E               	goto	u675
  2698     0564                     l1271:
  2699     0564  0873               	movf	___aldiv@divisor+3,w
  2700     0565  0277               	subwf	___aldiv@dividend+3,w
  2701     0566  1D03               	skipz
  2702     0567  2D72               	goto	u685
  2703     0568  0872               	movf	___aldiv@divisor+2,w
  2704     0569  0276               	subwf	___aldiv@dividend+2,w
  2705     056A  1D03               	skipz
  2706     056B  2D72               	goto	u685
  2707     056C  0871               	movf	___aldiv@divisor+1,w
  2708     056D  0275               	subwf	___aldiv@dividend+1,w
  2709     056E  1D03               	skipz
  2710     056F  2D72               	goto	u685
  2711     0570  0870               	movf	___aldiv@divisor,w
  2712     0571  0274               	subwf	___aldiv@dividend,w
  2713     0572                     u685:
  2714     0572  1C03               	skipc
  2715     0573  2D75               	goto	u681
  2716     0574  2D76               	goto	u680
  2717     0575                     u681:
  2718     0575  2D7F               	goto	l1277
  2719     0576                     u680:
  2720     0576                     l1273:
  2721     0576  0870               	movf	___aldiv@divisor,w
  2722     0577  02F4               	subwf	___aldiv@dividend,f
  2723     0578  0871               	movf	___aldiv@divisor+1,w
  2724     0579  3BF5               	subwfb	___aldiv@dividend+1,f
  2725     057A  0872               	movf	___aldiv@divisor+2,w
  2726     057B  3BF6               	subwfb	___aldiv@dividend+2,f
  2727     057C  0873               	movf	___aldiv@divisor+3,w
  2728     057D  3BF7               	subwfb	___aldiv@dividend+3,f
  2729     057E                     l1275:
  2730     057E  147A               	bsf	___aldiv@quotient,0
  2731     057F                     l1277:
  2732     057F  3001               	movlw	1
  2733     0580                     u695:
  2734     0580  36F3               	lsrf	___aldiv@divisor+3,f
  2735     0581  0CF2               	rrf	___aldiv@divisor+2,f
  2736     0582  0CF1               	rrf	___aldiv@divisor+1,f
  2737     0583  0CF0               	rrf	___aldiv@divisor,f
  2738     0584  0B89               	decfsz	9,f
  2739     0585  2D80               	goto	u695
  2740     0586                     l1279:
  2741     0586  3001               	movlw	1
  2742     0587  02F8               	subwf	___aldiv@counter,f
  2743     0588  1D03               	btfss	3,2
  2744     0589  2D8B               	goto	u701
  2745     058A  2D8C               	goto	u700
  2746     058B                     u701:
  2747     058B  2D5D               	goto	l1269
  2748     058C                     u700:
  2749     058C                     l1281:
  2750     058C  0879               	movf	___aldiv@sign,w
  2751     058D  1903               	btfsc	3,2
  2752     058E  2D90               	goto	u711
  2753     058F  2D91               	goto	u710
  2754     0590                     u711:
  2755     0590  2D9C               	goto	l1285
  2756     0591                     u710:
  2757     0591                     l1283:
  2758     0591  09FA               	comf	___aldiv@quotient,f
  2759     0592  09FB               	comf	___aldiv@quotient+1,f
  2760     0593  09FC               	comf	___aldiv@quotient+2,f
  2761     0594  09FD               	comf	___aldiv@quotient+3,f
  2762     0595  0AFA               	incf	___aldiv@quotient,f
  2763     0596  1903               	skipnz
  2764     0597  0AFB               	incf	___aldiv@quotient+1,f
  2765     0598  1903               	skipnz
  2766     0599  0AFC               	incf	___aldiv@quotient+2,f
  2767     059A  1903               	skipnz
  2768     059B  0AFD               	incf	___aldiv@quotient+3,f
  2769     059C                     l1285:
  2770     059C  087D               	movf	___aldiv@quotient+3,w
  2771     059D  00F3               	movwf	?___aldiv+3
  2772     059E  087C               	movf	___aldiv@quotient+2,w
  2773     059F  00F2               	movwf	?___aldiv+2
  2774     05A0  087B               	movf	___aldiv@quotient+1,w
  2775     05A1  00F1               	movwf	?___aldiv+1
  2776     05A2  087A               	movf	___aldiv@quotient,w
  2777     05A3  00F0               	movwf	?___aldiv
  2778     05A4                     l401:
  2779     05A4  0008               	return
  2780     05A5                     __end_of___aldiv:
  2781                           
  2782                           	psect	text11
  2783     03E3                     __ptext11:	
  2784 ;; *************** function _lcd_Goto *****************
  2785 ;; Defined at:
  2786 ;;		line 241 in file "program.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  y               1    wreg     unsigned char 
  2789 ;;  x               1    6[COMMON] unsigned char 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  y               1    7[COMMON] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2801 ;;      Params:         1       0       0       0       0       0       0
  2802 ;;      Locals:         1       0       0       0       0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0
  2804 ;;      Totals:         2       0       0       0       0       0       0
  2805 ;;Total ram usage:        2 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; Hardware stack levels required when called: 5
  2808 ;; This function calls:
  2809 ;;		_lcd_PrintCmd
  2810 ;; This function is called by:
  2811 ;;		_programLoop
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815     03E3                     _lcd_Goto:	
  2816                           ;psect for function _lcd_Goto
  2817                           
  2818                           
  2819                           ;incstack = 0
  2820                           ; Regs used in _lcd_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2821                           ;lcd_Goto@y stored from wreg
  2822     03E3  00F7               	movwf	lcd_Goto@y
  2823     03E4                     l1291:
  2824                           
  2825                           ;program.c: 242:     switch(y) {
  2826     03E4  2BF7               	goto	l1301
  2827     03E5                     l1293:
  2828                           
  2829                           ;program.c: 244:             lcd_PrintCmd(0x80 + x);
  2830     03E5  0876               	movf	lcd_Goto@x,w
  2831     03E6  3E80               	addlw	128
  2832     03E7  3183  2323  3183   	fcall	_lcd_PrintCmd
  2833                           
  2834                           ;program.c: 245:             break;
  2835     03EA  2BFF               	goto	l137
  2836     03EB                     l1295:
  2837                           
  2838                           ;program.c: 248:             lcd_PrintCmd(0xC0 + x);
  2839     03EB  0876               	movf	lcd_Goto@x,w
  2840     03EC  3EC0               	addlw	192
  2841     03ED  3183  2323  3183   	fcall	_lcd_PrintCmd
  2842                           
  2843                           ;program.c: 249:             break;
  2844     03F0  2BFF               	goto	l137
  2845     03F1                     l1297:
  2846                           
  2847                           ;program.c: 252:             lcd_PrintCmd(0x80 + x);
  2848     03F1  0876               	movf	lcd_Goto@x,w
  2849     03F2  3E80               	addlw	128
  2850     03F3  3183  2323  3183   	fcall	_lcd_PrintCmd
  2851                           
  2852                           ;program.c: 253:             break;
  2853     03F6  2BFF               	goto	l137
  2854     03F7                     l1301:
  2855     03F7  0877               	movf	lcd_Goto@y,w
  2856                           
  2857                           ; Switch size 1, requested type "simple"
  2858                           ; Number of cases is 2, Range of values is 0 to 1
  2859                           ; switch strategies available:
  2860                           ; Name         Instructions Cycles
  2861                           ; simple_byte            7     4 (average)
  2862                           ; direct_byte           10     6 (fixed)
  2863                           ; jumptable            260     6 (fixed)
  2864                           ;	Chosen strategy is simple_byte
  2865     03F8  3A00               	xorlw	0	; case 0
  2866     03F9  1903               	skipnz
  2867     03FA  2BE5               	goto	l1293
  2868     03FB  3A01               	xorlw	1	; case 1
  2869     03FC  1903               	skipnz
  2870     03FD  2BEB               	goto	l1295
  2871     03FE  2BF1               	goto	l1297
  2872     03FF                     l137:
  2873     03FF  0008               	return
  2874     0400                     __end_of_lcd_Goto:
  2875                           
  2876                           	psect	text12
  2877     045C                     __ptext12:	
  2878 ;; *************** function _programInitialize *****************
  2879 ;; Defined at:
  2880 ;;		line 20 in file "program.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      void 
  2887 ;; Registers used:
  2888 ;;		wreg, status,2, status,0, pclath, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2894 ;;      Params:         0       0       0       0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0       0       0
  2897 ;;      Totals:         0       0       0       0       0       0       0
  2898 ;;Total ram usage:        0 bytes
  2899 ;; Hardware stack levels used: 1
  2900 ;; Hardware stack levels required when called: 6
  2901 ;; This function calls:
  2902 ;;		_lcd_Initialize
  2903 ;;		_motor_Initialize
  2904 ;; This function is called by:
  2905 ;;		_main
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909     045C                     _programInitialize:	
  2910                           ;psect for function _programInitialize
  2911                           
  2912     045C                     l1367:	
  2913                           ;incstack = 0
  2914                           ; Regs used in _programInitialize: [wreg+status,2+status,0+pclath+cstack]
  2915                           
  2916                           
  2917                           ;program.c: 21:     TRISBbits.TRISB6 = 0;
  2918     045C  0021               	movlb	1	; select bank1
  2919     045D  130D               	bcf	13,6	;volatile
  2920                           
  2921                           ;program.c: 22:     LATBbits.LATB6 = 0;
  2922     045E  0022               	movlb	2	; select bank2
  2923     045F  130D               	bcf	13,6	;volatile
  2924                           
  2925                           ;program.c: 24:     LATBbits.LATB6 = 0;
  2926     0460  130D               	bcf	13,6	;volatile
  2927                           
  2928                           ;program.c: 25:     LATBbits.LATB7 = 0;
  2929     0461  138D               	bcf	13,7	;volatile
  2930                           
  2931                           ;program.c: 27:     TRISBbits.TRISB5 = 0;
  2932     0462  0021               	movlb	1	; select bank1
  2933     0463  128D               	bcf	13,5	;volatile
  2934                           
  2935                           ;program.c: 28:     TRISBbits.TRISB4 = 0;
  2936     0464  120D               	bcf	13,4	;volatile
  2937                           
  2938                           ;program.c: 29:     TRISBbits.TRISB3 = 0;
  2939     0465  118D               	bcf	13,3	;volatile
  2940                           
  2941                           ;program.c: 30:     TRISBbits.TRISB2 = 0;
  2942     0466  110D               	bcf	13,2	;volatile
  2943                           
  2944                           ;program.c: 31:     TRISBbits.TRISB1 = 0;
  2945     0467  108D               	bcf	13,1	;volatile
  2946                           
  2947                           ;program.c: 32:     TRISCbits.TRISC5 = 0;
  2948     0468  128E               	bcf	14,5	;volatile
  2949                           
  2950                           ;program.c: 34:     ANSELBbits.ANSB5 = 0;
  2951     0469  0023               	movlb	3	; select bank3
  2952     046A  128D               	bcf	13,5	;volatile
  2953                           
  2954                           ;program.c: 35:     ANSELBbits.ANSB4 = 0;
  2955     046B  120D               	bcf	13,4	;volatile
  2956                           
  2957                           ;program.c: 36:     ANSELBbits.ANSB3 = 0;
  2958     046C  118D               	bcf	13,3	;volatile
  2959                           
  2960                           ;program.c: 37:     ANSELBbits.ANSB2 = 0;
  2961     046D  110D               	bcf	13,2	;volatile
  2962                           
  2963                           ;program.c: 38:     ANSELBbits.ANSB1 = 0;
  2964     046E  108D               	bcf	13,1	;volatile
  2965                           
  2966                           ;program.c: 40:     LATBbits.LATB5 = 0;
  2967     046F  0022               	movlb	2	; select bank2
  2968     0470  128D               	bcf	13,5	;volatile
  2969                           
  2970                           ;program.c: 41:     LATBbits.LATB4 = 0;
  2971     0471  120D               	bcf	13,4	;volatile
  2972                           
  2973                           ;program.c: 42:     LATBbits.LATB3 = 0;
  2974     0472  118D               	bcf	13,3	;volatile
  2975                           
  2976                           ;program.c: 43:     LATBbits.LATB2 = 0;
  2977     0473  110D               	bcf	13,2	;volatile
  2978                           
  2979                           ;program.c: 44:     LATBbits.LATB1 = 0;
  2980     0474  108D               	bcf	13,1	;volatile
  2981                           
  2982                           ;program.c: 45:     LATCbits.LATC5 = 0;
  2983     0475  128E               	bcf	14,5	;volatile
  2984                           
  2985                           ;program.c: 47:     TRISAbits.TRISA1 = 1;
  2986     0476  0021               	movlb	1	; select bank1
  2987     0477  148C               	bsf	12,1	;volatile
  2988                           
  2989                           ;program.c: 48:     TRISAbits.TRISA2 = 1;
  2990     0478  150C               	bsf	12,2	;volatile
  2991                           
  2992                           ;program.c: 49:     TRISAbits.TRISA3 = 1;
  2993     0479  158C               	bsf	12,3	;volatile
  2994                           
  2995                           ;program.c: 50:     TRISAbits.TRISA4 = 1;
  2996     047A  160C               	bsf	12,4	;volatile
  2997                           
  2998                           ;program.c: 52:     ANSELAbits.ANSA1 = 0;
  2999     047B  0023               	movlb	3	; select bank3
  3000     047C  108C               	bcf	12,1	;volatile
  3001                           
  3002                           ;program.c: 53:     ANSELAbits.ANSA2 = 0;
  3003     047D  110C               	bcf	12,2	;volatile
  3004                           
  3005                           ;program.c: 54:     ANSELAbits.ANSA3 = 0;
  3006     047E  118C               	bcf	12,3	;volatile
  3007                           
  3008                           ;program.c: 55:     ANSELAbits.ANSA4 = 0;
  3009     047F  120C               	bcf	12,4	;volatile
  3010                           
  3011                           ;program.c: 58:     TRISBbits.TRISB0 = 0;
  3012     0480  0021               	movlb	1	; select bank1
  3013     0481  100D               	bcf	13,0	;volatile
  3014                           
  3015                           ;program.c: 59:     ANSELBbits.ANSB0 = 0;
  3016     0482  0023               	movlb	3	; select bank3
  3017     0483  100D               	bcf	13,0	;volatile
  3018                           
  3019                           ;program.c: 60:     APFCONbits.CCP1SEL = 1;
  3020     0484  0022               	movlb	2	; select bank2
  3021     0485  171D               	bsf	29,6	;volatile
  3022                           
  3023                           ;program.c: 61:     LATBbits.LATB0 = 0;
  3024     0486  100D               	bcf	13,0	;volatile
  3025                           
  3026                           ;program.c: 64:     TRISCbits.TRISC3 = 0;
  3027     0487  0021               	movlb	1	; select bank1
  3028     0488  118E               	bcf	14,3	;volatile
  3029                           
  3030                           ;program.c: 65:     LATCbits.LATC3 = 0;
  3031     0489  0022               	movlb	2	; select bank2
  3032     048A  118E               	bcf	14,3	;volatile
  3033     048B                     l1369:
  3034                           
  3035                           ;program.c: 67:     lcd_Initialize();
  3036     048B  3184  2429  3184   	fcall	_lcd_Initialize
  3037                           
  3038                           ;program.c: 68:     motor_Initialize();
  3039     048E  3183  2352  3184   	fcall	_motor_Initialize
  3040     0491                     l79:
  3041     0491  0008               	return
  3042     0492                     __end_of_programInitialize:
  3043                           
  3044                           	psect	text13
  3045     0352                     __ptext13:	
  3046 ;; *************** function _motor_Initialize *****************
  3047 ;; Defined at:
  3048 ;;		line 346 in file "program.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;		None
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3062 ;;      Params:         0       0       0       0       0       0       0
  3063 ;;      Locals:         0       0       0       0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0
  3065 ;;      Totals:         0       0       0       0       0       0       0
  3066 ;;Total ram usage:        0 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; This function calls:
  3069 ;;		Nothing
  3070 ;; This function is called by:
  3071 ;;		_programInitialize
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075     0352                     _motor_Initialize:	
  3076                           ;psect for function _motor_Initialize
  3077                           
  3078     0352                     l933:	
  3079                           ;incstack = 0
  3080                           ; Regs used in _motor_Initialize: [wreg+status,2+status,0]
  3081                           
  3082                           
  3083                           ;program.c: 348:     T2CONbits.T2OUTPS = 0;
  3084     0352  3087               	movlw	-121
  3085     0353  0020               	movlb	0	; select bank0
  3086     0354  059C               	andwf	28,f	;volatile
  3087                           
  3088                           ;program.c: 349:     T2CONbits.T2CKPS = 2;
  3089     0355  081C               	movf	28,w	;volatile
  3090     0356  39FC               	andlw	-4
  3091     0357  3802               	iorlw	2
  3092     0358  009C               	movwf	28	;volatile
  3093     0359                     l935:
  3094                           
  3095                           ;program.c: 351:     PR2 = 0xFF;
  3096     0359  30FF               	movlw	255
  3097     035A  009B               	movwf	27	;volatile
  3098     035B                     l937:
  3099                           
  3100                           ;program.c: 353:     T2CONbits.TMR2ON = 1;
  3101     035B  151C               	bsf	28,2	;volatile
  3102                           
  3103                           ;program.c: 356:     CCP1CONbits.CCP1M = 12;
  3104     035C  0025               	movlb	5	; select bank5
  3105     035D  0813               	movf	19,w	;volatile
  3106     035E  39F0               	andlw	-16
  3107     035F  380C               	iorlw	12
  3108     0360  0093               	movwf	19	;volatile
  3109     0361                     l173:
  3110     0361  0008               	return
  3111     0362                     __end_of_motor_Initialize:
  3112                           
  3113                           	psect	text14
  3114     0429                     __ptext14:	
  3115 ;; *************** function _lcd_Initialize *****************
  3116 ;; Defined at:
  3117 ;;		line 216 in file "program.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0, pclath, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3131 ;;      Params:         0       0       0       0       0       0       0
  3132 ;;      Locals:         0       0       0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0
  3134 ;;      Totals:         0       0       0       0       0       0       0
  3135 ;;Total ram usage:        0 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; Hardware stack levels required when called: 5
  3138 ;; This function calls:
  3139 ;;		_delay_ms
  3140 ;;		_delay_x24o25us
  3141 ;;		_lcd_PrintCmd
  3142 ;; This function is called by:
  3143 ;;		_programInitialize
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147     0429                     _lcd_Initialize:	
  3148                           ;psect for function _lcd_Initialize
  3149                           
  3150     0429                     l1289:	
  3151                           ;incstack = 0
  3152                           ; Regs used in _lcd_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3153                           
  3154                           
  3155                           ;program.c: 217:     delay_ms(10);
  3156     0429  3000               	movlw	0
  3157     042A  00F9               	movwf	delay_ms@delay+3
  3158     042B  3000               	movlw	0
  3159     042C  00F8               	movwf	delay_ms@delay+2
  3160     042D  3000               	movlw	0
  3161     042E  00F7               	movwf	delay_ms@delay+1
  3162     042F  300A               	movlw	10
  3163     0430  00F6               	movwf	delay_ms@delay
  3164     0431  3184  2400  3184   	fcall	_delay_ms
  3165                           
  3166                           ;program.c: 220:     lcd_PrintCmd(0x33);
  3167     0434  3033               	movlw	51
  3168     0435  3183  2323  3184   	fcall	_lcd_PrintCmd
  3169                           
  3170                           ;program.c: 221:     lcd_PrintCmd(0x32);
  3171     0438  3032               	movlw	50
  3172     0439  3183  2323  3184   	fcall	_lcd_PrintCmd
  3173                           
  3174                           ;program.c: 224:     lcd_PrintCmd(0x28);
  3175     043C  3028               	movlw	40
  3176     043D  3183  2323  3184   	fcall	_lcd_PrintCmd
  3177                           
  3178                           ;program.c: 225:     lcd_PrintCmd(0x02);
  3179     0440  3002               	movlw	2
  3180     0441  3183  2323  3184   	fcall	_lcd_PrintCmd
  3181                           
  3182                           ;program.c: 226:     lcd_PrintCmd(0x0C);
  3183     0444  300C               	movlw	12
  3184     0445  3183  2323  3184   	fcall	_lcd_PrintCmd
  3185                           
  3186                           ;program.c: 227:     lcd_PrintCmd(0x06);
  3187     0448  3006               	movlw	6
  3188     0449  3183  2323  3184   	fcall	_lcd_PrintCmd
  3189                           
  3190                           ;program.c: 228:     lcd_PrintCmd(0x01);
  3191     044C  3001               	movlw	1
  3192     044D  3183  2323  3184   	fcall	_lcd_PrintCmd
  3193                           
  3194                           ;program.c: 229:     lcd_PrintCmd(0x80);
  3195     0450  3080               	movlw	128
  3196     0451  3183  2323  3184   	fcall	_lcd_PrintCmd
  3197                           
  3198                           ;program.c: 231:     delay_x24o25us(63);
  3199     0454  303F               	movlw	63
  3200     0455  00F2               	movwf	delay_x24o25us@delay
  3201     0456  3000               	movlw	0
  3202     0457  00F3               	movwf	delay_x24o25us@delay+1
  3203     0458  3183  239F  3184   	fcall	_delay_x24o25us
  3204     045B                     l126:
  3205     045B  0008               	return
  3206     045C                     __end_of_lcd_Initialize:
  3207                           
  3208                           	psect	text15
  3209     0323                     __ptext15:	
  3210 ;; *************** function _lcd_PrintCmd *****************
  3211 ;; Defined at:
  3212 ;;		line 209 in file "program.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  command         1    wreg     unsigned char 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  command         1    5[COMMON] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      void 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0, pclath, cstack
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3226 ;;      Params:         0       0       0       0       0       0       0
  3227 ;;      Locals:         1       0       0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0
  3229 ;;      Totals:         1       0       0       0       0       0       0
  3230 ;;Total ram usage:        1 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; Hardware stack levels required when called: 4
  3233 ;; This function calls:
  3234 ;;		_lcd_DelaySetupTime
  3235 ;;		_lcd_WriteData
  3236 ;; This function is called by:
  3237 ;;		_lcd_Initialize
  3238 ;;		_lcd_Goto
  3239 ;;		_lcd_ClearAll
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243     0323                     _lcd_PrintCmd:	
  3244                           ;psect for function _lcd_PrintCmd
  3245                           
  3246                           
  3247                           ;incstack = 0
  3248                           ; Regs used in _lcd_PrintCmd: [wreg+status,2+status,0+pclath+cstack]
  3249                           ;lcd_PrintCmd@command stored from wreg
  3250     0323  00F5               	movwf	lcd_PrintCmd@command
  3251     0324                     l1215:
  3252                           
  3253                           ;program.c: 210:     LATBbits.LATB5 = 0;
  3254     0324  0022               	movlb	2	; select bank2
  3255     0325  128D               	bcf	13,5	;volatile
  3256     0326                     l1217:
  3257                           
  3258                           ;program.c: 211:     lcd_DelaySetupTime();
  3259     0326  3183  2305  3183   	fcall	_lcd_DelaySetupTime
  3260                           
  3261                           ;program.c: 213:     lcd_WriteData(command);
  3262     0329  0875               	movf	lcd_PrintCmd@command,w
  3263     032A  3184  2492  3183   	fcall	_lcd_WriteData
  3264     032D                     l123:
  3265     032D  0008               	return
  3266     032E                     __end_of_lcd_PrintCmd:
  3267                           
  3268                           	psect	text16
  3269     0492                     __ptext16:	
  3270 ;; *************** function _lcd_WriteData *****************
  3271 ;; Defined at:
  3272 ;;		line 188 in file "program.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  data            1    wreg     unsigned char 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;  data            1    4[COMMON] unsigned char 
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2, status,0, pclath, cstack
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3286 ;;      Params:         0       0       0       0       0       0       0
  3287 ;;      Locals:         1       0       0       0       0       0       0
  3288 ;;      Temps:          2       0       0       0       0       0       0
  3289 ;;      Totals:         3       0       0       0       0       0       0
  3290 ;;Total ram usage:        3 bytes
  3291 ;; Hardware stack levels used: 1
  3292 ;; Hardware stack levels required when called: 3
  3293 ;; This function calls:
  3294 ;;		_delay_x1o5us
  3295 ;;		_lcd_EPulse
  3296 ;; This function is called by:
  3297 ;;		_lcd_PrintCmd
  3298 ;;		_lcd_PrintChar
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302     0492                     _lcd_WriteData:	
  3303                           ;psect for function _lcd_WriteData
  3304                           
  3305                           
  3306                           ;incstack = 0
  3307                           ; Regs used in _lcd_WriteData: [wreg+status,2+status,0+pclath+cstack]
  3308                           ;lcd_WriteData@data stored from wreg
  3309     0492  00F4               	movwf	lcd_WriteData@data
  3310     0493                     l1171:
  3311                           
  3312                           ;program.c: 190:     LATCbits.LATC5 = (data >> 7) & 0x01;
  3313     0493  0874               	movf	lcd_WriteData@data,w
  3314     0494  00F2               	movwf	??_lcd_WriteData
  3315     0495  3007               	movlw	7
  3316     0496                     u485:
  3317     0496  36F2               	lsrf	??_lcd_WriteData,f
  3318     0497  0B89               	decfsz	9,f
  3319     0498  2C96               	goto	u485
  3320     0499  0872               	movf	??_lcd_WriteData,w
  3321     049A  3901               	andlw	1
  3322     049B  00F3               	movwf	??_lcd_WriteData+1
  3323     049C  0EF3               	swapf	??_lcd_WriteData+1,f
  3324     049D  0DF3               	rlf	??_lcd_WriteData+1,f
  3325     049E  0022               	movlb	2	; select bank2
  3326     049F  080E               	movf	14,w	;volatile
  3327     04A0  0673               	xorwf	??_lcd_WriteData+1,w
  3328     04A1  39DF               	andlw	-33
  3329     04A2  0673               	xorwf	??_lcd_WriteData+1,w
  3330     04A3  008E               	movwf	14	;volatile
  3331                           
  3332                           ;program.c: 191:     LATBbits.LATB1 = (data >> 6) & 0x01;
  3333     04A4  0874               	movf	lcd_WriteData@data,w
  3334     04A5  00F2               	movwf	??_lcd_WriteData
  3335     04A6  3006               	movlw	6
  3336     04A7                     u495:
  3337     04A7  36F2               	lsrf	??_lcd_WriteData,f
  3338     04A8  0B89               	decfsz	9,f
  3339     04A9  2CA7               	goto	u495
  3340     04AA  0872               	movf	??_lcd_WriteData,w
  3341     04AB  3901               	andlw	1
  3342     04AC  00F3               	movwf	??_lcd_WriteData+1
  3343     04AD  0DF3               	rlf	??_lcd_WriteData+1,f
  3344     04AE  080D               	movf	13,w	;volatile
  3345     04AF  0673               	xorwf	??_lcd_WriteData+1,w
  3346     04B0  39FD               	andlw	-3
  3347     04B1  0673               	xorwf	??_lcd_WriteData+1,w
  3348     04B2  008D               	movwf	13	;volatile
  3349                           
  3350                           ;program.c: 192:     LATBbits.LATB2 = (data >> 5) & 0x01;
  3351     04B3  0874               	movf	lcd_WriteData@data,w
  3352     04B4  00F2               	movwf	??_lcd_WriteData
  3353     04B5  3005               	movlw	5
  3354     04B6                     u505:
  3355     04B6  36F2               	lsrf	??_lcd_WriteData,f
  3356     04B7  0B89               	decfsz	9,f
  3357     04B8  2CB6               	goto	u505
  3358     04B9  0872               	movf	??_lcd_WriteData,w
  3359     04BA  3901               	andlw	1
  3360     04BB  00F3               	movwf	??_lcd_WriteData+1
  3361     04BC  0DF3               	rlf	??_lcd_WriteData+1,f
  3362     04BD  0DF3               	rlf	??_lcd_WriteData+1,f
  3363     04BE  080D               	movf	13,w	;volatile
  3364     04BF  0673               	xorwf	??_lcd_WriteData+1,w
  3365     04C0  39FB               	andlw	-5
  3366     04C1  0673               	xorwf	??_lcd_WriteData+1,w
  3367     04C2  008D               	movwf	13	;volatile
  3368                           
  3369                           ;program.c: 193:     LATBbits.LATB3 = (data >> 4) & 0x01;
  3370     04C3  0874               	movf	lcd_WriteData@data,w
  3371     04C4  00F2               	movwf	??_lcd_WriteData
  3372     04C5  3004               	movlw	4
  3373     04C6                     u515:
  3374     04C6  36F2               	lsrf	??_lcd_WriteData,f
  3375     04C7  0B89               	decfsz	9,f
  3376     04C8  2CC6               	goto	u515
  3377     04C9  0872               	movf	??_lcd_WriteData,w
  3378     04CA  3901               	andlw	1
  3379     04CB  00F3               	movwf	??_lcd_WriteData+1
  3380     04CC  0DF3               	rlf	??_lcd_WriteData+1,f
  3381     04CD  0DF3               	rlf	??_lcd_WriteData+1,f
  3382     04CE  0DF3               	rlf	??_lcd_WriteData+1,f
  3383     04CF  080D               	movf	13,w	;volatile
  3384     04D0  0673               	xorwf	??_lcd_WriteData+1,w
  3385     04D1  39F7               	andlw	-9
  3386     04D2  0673               	xorwf	??_lcd_WriteData+1,w
  3387     04D3  008D               	movwf	13	;volatile
  3388     04D4                     l1173:
  3389                           
  3390                           ;program.c: 195:     lcd_EPulse();
  3391     04D4  3183  2318  3184   	fcall	_lcd_EPulse
  3392     04D7                     l1175:
  3393                           
  3394                           ;program.c: 198:     LATCbits.LATC5 = (data >> 3) & 0x01;
  3395     04D7  0874               	movf	lcd_WriteData@data,w
  3396     04D8  00F2               	movwf	??_lcd_WriteData
  3397     04D9  3003               	movlw	3
  3398     04DA                     u525:
  3399     04DA  36F2               	lsrf	??_lcd_WriteData,f
  3400     04DB  0B89               	decfsz	9,f
  3401     04DC  2CDA               	goto	u525
  3402     04DD  0872               	movf	??_lcd_WriteData,w
  3403     04DE  3901               	andlw	1
  3404     04DF  00F3               	movwf	??_lcd_WriteData+1
  3405     04E0  0EF3               	swapf	??_lcd_WriteData+1,f
  3406     04E1  0DF3               	rlf	??_lcd_WriteData+1,f
  3407     04E2  0022               	movlb	2	; select bank2
  3408     04E3  080E               	movf	14,w	;volatile
  3409     04E4  0673               	xorwf	??_lcd_WriteData+1,w
  3410     04E5  39DF               	andlw	-33
  3411     04E6  0673               	xorwf	??_lcd_WriteData+1,w
  3412     04E7  008E               	movwf	14	;volatile
  3413     04E8                     l1177:
  3414                           
  3415                           ;program.c: 199:     LATBbits.LATB1 = (data >> 2) & 0x01;
  3416     04E8  0874               	movf	lcd_WriteData@data,w
  3417     04E9  00F2               	movwf	??_lcd_WriteData
  3418     04EA  3002               	movlw	2
  3419     04EB                     u535:
  3420     04EB  36F2               	lsrf	??_lcd_WriteData,f
  3421     04EC  0B89               	decfsz	9,f
  3422     04ED  2CEB               	goto	u535
  3423     04EE  0872               	movf	??_lcd_WriteData,w
  3424     04EF  3901               	andlw	1
  3425     04F0  00F3               	movwf	??_lcd_WriteData+1
  3426     04F1  0DF3               	rlf	??_lcd_WriteData+1,f
  3427     04F2  080D               	movf	13,w	;volatile
  3428     04F3  0673               	xorwf	??_lcd_WriteData+1,w
  3429     04F4  39FD               	andlw	-3
  3430     04F5  0673               	xorwf	??_lcd_WriteData+1,w
  3431     04F6  008D               	movwf	13	;volatile
  3432     04F7                     l1179:
  3433                           
  3434                           ;program.c: 200:     LATBbits.LATB2 = (data >> 1) & 0x01;
  3435     04F7  0874               	movf	lcd_WriteData@data,w
  3436     04F8  00F2               	movwf	??_lcd_WriteData
  3437     04F9  3001               	movlw	1
  3438     04FA                     u545:
  3439     04FA  36F2               	lsrf	??_lcd_WriteData,f
  3440     04FB  0B89               	decfsz	9,f
  3441     04FC  2CFA               	goto	u545
  3442     04FD  0872               	movf	??_lcd_WriteData,w
  3443     04FE  3901               	andlw	1
  3444     04FF  00F3               	movwf	??_lcd_WriteData+1
  3445     0500  0DF3               	rlf	??_lcd_WriteData+1,f
  3446     0501  0DF3               	rlf	??_lcd_WriteData+1,f
  3447     0502  080D               	movf	13,w	;volatile
  3448     0503  0673               	xorwf	??_lcd_WriteData+1,w
  3449     0504  39FB               	andlw	-5
  3450     0505  0673               	xorwf	??_lcd_WriteData+1,w
  3451     0506  008D               	movwf	13	;volatile
  3452     0507                     l1181:
  3453                           
  3454                           ;program.c: 201:     LATBbits.LATB3 = data & 0x01;
  3455     0507  0874               	movf	lcd_WriteData@data,w
  3456     0508  3901               	andlw	1
  3457     0509  00F2               	movwf	??_lcd_WriteData
  3458     050A  0DF2               	rlf	??_lcd_WriteData,f
  3459     050B  0DF2               	rlf	??_lcd_WriteData,f
  3460     050C  0DF2               	rlf	??_lcd_WriteData,f
  3461     050D  080D               	movf	13,w	;volatile
  3462     050E  0672               	xorwf	??_lcd_WriteData,w
  3463     050F  39F7               	andlw	-9
  3464     0510  0672               	xorwf	??_lcd_WriteData,w
  3465     0511  008D               	movwf	13	;volatile
  3466     0512                     l1183:
  3467                           
  3468                           ;program.c: 203:     lcd_EPulse();
  3469     0512  3183  2318  3184   	fcall	_lcd_EPulse
  3470     0515                     l1185:
  3471                           
  3472                           ;program.c: 205:     delay_x1o5us(25);
  3473     0515  3019               	movlw	25
  3474     0516  3183  2345  3184   	fcall	_delay_x1o5us
  3475     0519                     l120:
  3476     0519  0008               	return
  3477     051A                     __end_of_lcd_WriteData:
  3478                           
  3479                           	psect	text17
  3480     0318                     __ptext17:	
  3481 ;; *************** function _lcd_EPulse *****************
  3482 ;; Defined at:
  3483 ;;		line 180 in file "program.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0, pclath, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3497 ;;      Params:         0       0       0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0       0       0
  3499 ;;      Temps:          0       0       0       0       0       0       0
  3500 ;;      Totals:         0       0       0       0       0       0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels used: 1
  3503 ;; Hardware stack levels required when called: 2
  3504 ;; This function calls:
  3505 ;;		_lcd_DelayPulse
  3506 ;; This function is called by:
  3507 ;;		_lcd_WriteData
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511     0318                     _lcd_EPulse:	
  3512                           ;psect for function _lcd_EPulse
  3513                           
  3514     0318                     l1163:	
  3515                           ;incstack = 0
  3516                           ; Regs used in _lcd_EPulse: [wreg+status,2+status,0+pclath+cstack]
  3517                           
  3518                           
  3519                           ;program.c: 181:     LATBbits.LATB4 = 1;
  3520     0318  0022               	movlb	2	; select bank2
  3521     0319  160D               	bsf	13,4	;volatile
  3522     031A                     l1165:
  3523                           
  3524                           ;program.c: 182:     lcd_DelayPulse();
  3525     031A  3183  230A  3183   	fcall	_lcd_DelayPulse
  3526     031D                     l1167:
  3527                           
  3528                           ;program.c: 184:     LATBbits.LATB4 = 0;
  3529     031D  0022               	movlb	2	; select bank2
  3530     031E  120D               	bcf	13,4	;volatile
  3531                           
  3532                           ;program.c: 185:     lcd_DelayPulse();
  3533     031F  3183  230A  3183   	fcall	_lcd_DelayPulse
  3534     0322                     l117:
  3535     0322  0008               	return
  3536     0323                     __end_of_lcd_EPulse:
  3537                           
  3538                           	psect	text18
  3539     030A                     __ptext18:	
  3540 ;; *************** function _lcd_DelayPulse *****************
  3541 ;; Defined at:
  3542 ;;		line 175 in file "program.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;		None
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0, pclath, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3556 ;;      Params:         0       0       0       0       0       0       0
  3557 ;;      Locals:         0       0       0       0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0
  3559 ;;      Totals:         0       0       0       0       0       0       0
  3560 ;;Total ram usage:        0 bytes
  3561 ;; Hardware stack levels used: 1
  3562 ;; Hardware stack levels required when called: 1
  3563 ;; This function calls:
  3564 ;;		_delay_x1o5us
  3565 ;; This function is called by:
  3566 ;;		_lcd_EPulse
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570     030A                     _lcd_DelayPulse:	
  3571                           ;psect for function _lcd_DelayPulse
  3572                           
  3573     030A                     l1161:	
  3574                           ;incstack = 0
  3575                           ; Regs used in _lcd_DelayPulse: [wreg+status,2+status,0+pclath+cstack]
  3576                           
  3577                           
  3578                           ;program.c: 177:     delay_x1o5us(200);
  3579     030A  30C8               	movlw	200
  3580     030B  3183  2345  3183   	fcall	_delay_x1o5us
  3581     030E                     l114:
  3582     030E  0008               	return
  3583     030F                     __end_of_lcd_DelayPulse:
  3584                           
  3585                           	psect	text19
  3586     0305                     __ptext19:	
  3587 ;; *************** function _lcd_DelaySetupTime *****************
  3588 ;; Defined at:
  3589 ;;		line 170 in file "program.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0, pclath, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3603 ;;      Params:         0       0       0       0       0       0       0
  3604 ;;      Locals:         0       0       0       0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0       0       0
  3606 ;;      Totals:         0       0       0       0       0       0       0
  3607 ;;Total ram usage:        0 bytes
  3608 ;; Hardware stack levels used: 1
  3609 ;; Hardware stack levels required when called: 1
  3610 ;; This function calls:
  3611 ;;		_delay_x1o5us
  3612 ;; This function is called by:
  3613 ;;		_lcd_PrintCmd
  3614 ;;		_lcd_PrintChar
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618     0305                     _lcd_DelaySetupTime:	
  3619                           ;psect for function _lcd_DelaySetupTime
  3620                           
  3621     0305                     l1169:	
  3622                           ;incstack = 0
  3623                           ; Regs used in _lcd_DelaySetupTime: [wreg+status,2+status,0+pclath+cstack]
  3624                           
  3625                           
  3626                           ;program.c: 172:     delay_x1o5us(200);
  3627     0305  30C8               	movlw	200
  3628     0306  3183  2345  3183   	fcall	_delay_x1o5us
  3629     0309                     l111:
  3630     0309  0008               	return
  3631     030A                     __end_of_lcd_DelaySetupTime:
  3632                           
  3633                           	psect	text20
  3634     0400                     __ptext20:	
  3635 ;; *************** function _delay_ms *****************
  3636 ;; Defined at:
  3637 ;;		line 15 in file "program.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  delay           4    6[COMMON] unsigned long 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  i               4   10[COMMON] unsigned long 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0, pclath, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3651 ;;      Params:         4       0       0       0       0       0       0
  3652 ;;      Locals:         4       0       0       0       0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0
  3654 ;;      Totals:         8       0       0       0       0       0       0
  3655 ;;Total ram usage:        8 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; Hardware stack levels required when called: 2
  3658 ;; This function calls:
  3659 ;;		_delay_x24o25us
  3660 ;; This function is called by:
  3661 ;;		_programLoop
  3662 ;;		_pb_DelayDebounce
  3663 ;;		_lcd_Initialize
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667     0400                     _delay_ms:	
  3668                           ;psect for function _delay_ms
  3669                           
  3670     0400                     l1199:	
  3671                           ;incstack = 0
  3672                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
  3673                           
  3674                           
  3675                           ;program.c: 16:     for(uint32_t i=0; i<delay; i++) delay_x24o25us(41);
  3676     0400  3000               	movlw	0
  3677     0401  00FD               	movwf	delay_ms@i+3
  3678     0402  3000               	movlw	0
  3679     0403  00FC               	movwf	delay_ms@i+2
  3680     0404  3000               	movlw	0
  3681     0405  00FB               	movwf	delay_ms@i+1
  3682     0406  3000               	movlw	0
  3683     0407  00FA               	movwf	delay_ms@i
  3684     0408  2C16               	goto	l1205
  3685     0409                     l1201:
  3686     0409  3029               	movlw	41
  3687     040A  00F2               	movwf	delay_x24o25us@delay
  3688     040B  3000               	movlw	0
  3689     040C  00F3               	movwf	delay_x24o25us@delay+1
  3690     040D  3183  239F  3184   	fcall	_delay_x24o25us
  3691     0410                     l1203:
  3692     0410  3001               	movlw	1
  3693     0411  07FA               	addwf	delay_ms@i,f
  3694     0412  3000               	movlw	0
  3695     0413  3DFB               	addwfc	delay_ms@i+1,f
  3696     0414  3DFC               	addwfc	delay_ms@i+2,f
  3697     0415  3DFD               	addwfc	delay_ms@i+3,f
  3698     0416                     l1205:
  3699     0416  0879               	movf	delay_ms@delay+3,w
  3700     0417  027D               	subwf	delay_ms@i+3,w
  3701     0418  1D03               	skipz
  3702     0419  2C24               	goto	u565
  3703     041A  0878               	movf	delay_ms@delay+2,w
  3704     041B  027C               	subwf	delay_ms@i+2,w
  3705     041C  1D03               	skipz
  3706     041D  2C24               	goto	u565
  3707     041E  0877               	movf	delay_ms@delay+1,w
  3708     041F  027B               	subwf	delay_ms@i+1,w
  3709     0420  1D03               	skipz
  3710     0421  2C24               	goto	u565
  3711     0422  0876               	movf	delay_ms@delay,w
  3712     0423  027A               	subwf	delay_ms@i,w
  3713     0424                     u565:
  3714     0424  1C03               	skipc
  3715     0425  2C27               	goto	u561
  3716     0426  2C28               	goto	u560
  3717     0427                     u561:
  3718     0427  2C09               	goto	l1201
  3719     0428                     u560:
  3720     0428                     l76:
  3721     0428  0008               	return
  3722     0429                     __end_of_delay_ms:
  3723                           
  3724                           	psect	text21
  3725     039F                     __ptext21:	
  3726 ;; *************** function _delay_x24o25us *****************
  3727 ;; Defined at:
  3728 ;;		line 10 in file "program.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  delay           2    2[COMMON] unsigned short 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  i               2    4[COMMON] unsigned short 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0, pclath, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3742 ;;      Params:         2       0       0       0       0       0       0
  3743 ;;      Locals:         2       0       0       0       0       0       0
  3744 ;;      Temps:          0       0       0       0       0       0       0
  3745 ;;      Totals:         4       0       0       0       0       0       0
  3746 ;;Total ram usage:        4 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 1
  3749 ;; This function calls:
  3750 ;;		_delay_x1o5us
  3751 ;; This function is called by:
  3752 ;;		_delay_ms
  3753 ;;		_lcd_Initialize
  3754 ;;		_lcd_ClearAll
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758     039F                     _delay_x24o25us:	
  3759                           ;psect for function _delay_x24o25us
  3760                           
  3761     039F                     l1187:	
  3762                           ;incstack = 0
  3763                           ; Regs used in _delay_x24o25us: [wreg+status,2+status,0+pclath+cstack]
  3764                           
  3765                           
  3766                           ;program.c: 11:     for(uint16_t i=0; i<delay; i++) delay_x1o5us(15);
  3767     039F  01F4               	clrf	delay_x24o25us@i
  3768     03A0  01F5               	clrf	delay_x24o25us@i+1
  3769     03A1  2BAA               	goto	l1193
  3770     03A2                     l1189:
  3771     03A2  300F               	movlw	15
  3772     03A3  3183  2345  3183   	fcall	_delay_x1o5us
  3773     03A6                     l1191:
  3774     03A6  3001               	movlw	1
  3775     03A7  07F4               	addwf	delay_x24o25us@i,f
  3776     03A8  3000               	movlw	0
  3777     03A9  3DF5               	addwfc	delay_x24o25us@i+1,f
  3778     03AA                     l1193:
  3779     03AA  0873               	movf	delay_x24o25us@delay+1,w
  3780     03AB  0275               	subwf	delay_x24o25us@i+1,w
  3781     03AC  1D03               	skipz
  3782     03AD  2BB0               	goto	u555
  3783     03AE  0872               	movf	delay_x24o25us@delay,w
  3784     03AF  0274               	subwf	delay_x24o25us@i,w
  3785     03B0                     u555:
  3786     03B0  1C03               	skipc
  3787     03B1  2BB3               	goto	u551
  3788     03B2  2BB4               	goto	u550
  3789     03B3                     u551:
  3790     03B3  2BA2               	goto	l1189
  3791     03B4                     u550:
  3792     03B4                     l70:
  3793     03B4  0008               	return
  3794     03B5                     __end_of_delay_x24o25us:
  3795                           
  3796                           	psect	text22
  3797     0345                     __ptext22:	
  3798 ;; *************** function _delay_x1o5us *****************
  3799 ;; Defined at:
  3800 ;;		line 5 in file "program.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  delay           1    wreg     unsigned char 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  delay           1    0[COMMON] unsigned char 
  3805 ;;  i               1    1[COMMON] unsigned char 
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      void 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2, status,0
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3815 ;;      Params:         0       0       0       0       0       0       0
  3816 ;;      Locals:         2       0       0       0       0       0       0
  3817 ;;      Temps:          0       0       0       0       0       0       0
  3818 ;;      Totals:         2       0       0       0       0       0       0
  3819 ;;Total ram usage:        2 bytes
  3820 ;; Hardware stack levels used: 1
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_delay_x24o25us
  3825 ;;		_lcd_DelaySetupTime
  3826 ;;		_lcd_DelayPulse
  3827 ;;		_lcd_WriteData
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831     0345                     _delay_x1o5us:	
  3832                           ;psect for function _delay_x1o5us
  3833                           
  3834                           
  3835                           ;incstack = 0
  3836                           ; Regs used in _delay_x1o5us: [wreg+status,2+status,0]
  3837                           ;delay_x1o5us@delay stored from wreg
  3838     0345  00F0               	movwf	delay_x1o5us@delay
  3839     0346                     l1155:
  3840                           
  3841                           ;program.c: 6:     for(uint8_t i=0; i<delay; i++) __nop();
  3842     0346  01F1               	clrf	delay_x1o5us@i
  3843     0347  2B4B               	goto	l1159
  3844     0348                     l62:
  3845     0348  0000               	nop
  3846     0349                     l1157:
  3847     0349  3001               	movlw	1
  3848     034A  07F1               	addwf	delay_x1o5us@i,f
  3849     034B                     l1159:
  3850     034B  0870               	movf	delay_x1o5us@delay,w
  3851     034C  0271               	subwf	delay_x1o5us@i,w
  3852     034D  1C03               	skipc
  3853     034E  2B50               	goto	u471
  3854     034F  2B51               	goto	u470
  3855     0350                     u471:
  3856     0350  2B48               	goto	l62
  3857     0351                     u470:
  3858     0351                     l64:
  3859     0351  0008               	return
  3860     0352                     __end_of_delay_x1o5us:
  3861     0001                     ___latbits      equ	1
  3862     007E                     btemp           set	126	;btemp
  3863     007E                     wtemp0          set	126
  3864                           
  3865                           	psect	config
  3866                           
  3867                           ;Config register CONFIG1 @ 0x8007
  3868                           ;	Oscillator Selection
  3869                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  3870                           ;	Watchdog Timer Enable
  3871                           ;	WDTE = OFF, WDT disabled
  3872                           ;	Power-up Timer Enable
  3873                           ;	PWRTE = OFF, PWRT disabled
  3874                           ;	MCLR Pin Function Select
  3875                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3876                           ;	Flash Program Memory Code Protection
  3877                           ;	CP = OFF, Program memory code protection is disabled
  3878                           ;	Data Memory Code Protection
  3879                           ;	CPD = OFF, Data memory code protection is disabled
  3880                           ;	Brown-out Reset Enable
  3881                           ;	BOREN = OFF, Brown-out Reset disabled
  3882                           ;	Clock Out Enable
  3883                           ;	CLKOUTEN = ON, CLKOUT function is enabled on the CLKOUT pin
  3884                           ;	Internal/External Switchover
  3885                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3886                           ;	Fail-Safe Clock Monitor Enable
  3887                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3888     8007                     	org	32775
  3889     8007  01E2               	dw	482
  3890                           
  3891                           ;Config register CONFIG2 @ 0x8008
  3892                           ;	Flash Memory Self-Write Protection
  3893                           ;	WRT = OFF, Write protection off
  3894                           ;	Voltage Regulator Capacitor Enable bit
  3895                           ;	VCAPEN = OFF, Vcap functionality is disabled on RA6.
  3896                           ;	PLL Enable
  3897                           ;	PLLEN = ON, 4x PLL enabled
  3898                           ;	Stack Overflow/Underflow Reset Enable
  3899                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3900                           ;	Brown-out Reset Voltage Selection
  3901                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3902                           ;	Low Power Brown-Out Reset Enable Bit
  3903                           ;	LPBOR = 0x1, unprogrammed default
  3904                           ;	In-Circuit Debugger Mode
  3905                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  3906                           ;	Low-Voltage Programming Enable
  3907                           ;	LVP = ON, Low-voltage programming enabled
  3908     8008                     	org	32776
  3909     8008  3FFF               	dw	16383

Data Sizes:
    Strings     46
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     43      43
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0

Pointer List with Targets:

    lcd_PrintString@string	PTR unsigned char  size(2) Largest target is 16
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), STR_1(CODE[16]), STR_2(CODE[6]), 
		 -> STR_3(CODE[6]), STR_4(CODE[6]), STR_5(CODE[6]), STR_6(CODE[6]), 
		 -> STR_7(CODE[6]), STR_8(CODE[6]), STR_9(CODE[6]), 

    memset@dest	PTR void  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 

    memset@p	PTR unsigned char  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 

    sp__memset	PTR void  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 


Critical Paths under _main in COMMON

    _programLoop->_delay_ms
    _pb_DelayDebounce->_delay_ms
    _lcd_PrintDigitInt32->___aldiv
    _lcd_PrintString->_lcd_PrintChar
    _lcd_PrintChar->_lcd_WriteData
    _lcd_Goto->_lcd_PrintCmd
    _lcd_Initialize->_delay_ms
    _lcd_PrintCmd->_lcd_WriteData
    _lcd_WriteData->_delay_x1o5us
    _lcd_DelayPulse->_delay_x1o5us
    _lcd_DelaySetupTime->_delay_x1o5us
    _delay_ms->_delay_x24o25us
    _delay_x24o25us->_delay_x1o5us

Critical Paths under _main in BANK0

    _main->_programLoop
    _programLoop->_lcd_PrintDigitInt32

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4360
                  _programInitialize
                        _programLoop
 ---------------------------------------------------------------------------------
 (1) _programLoop                                          2     2      0    3684
                                             41 BANK0      2     2      0
                           _delay_ms
                           _lcd_Goto
                _lcd_PrintDigitInt32
                    _lcd_PrintString
                     _motor_SetSpeed
                   _pb_DelayDebounce
 ---------------------------------------------------------------------------------
 (2) _pb_DelayDebounce                                     0     0      0     154
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _motor_SetSpeed                                       4     2      2      50
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _lcd_PrintDigitInt32                                 41    34      7    2121
                                              0 BANK0     41    34      7
                            ___aldiv
                             ___bmul
                               _labs
                      _lcd_PrintChar
                    _lcd_PrintString
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               6     1      5     108
                                              0 COMMON     6     1      5
 ---------------------------------------------------------------------------------
 (2) _lcd_PrintString                                      3     1      2     476
                                              6 COMMON     3     1      2
                      _lcd_PrintChar
 ---------------------------------------------------------------------------------
 (3) _lcd_PrintChar                                        1     1      0     420
                                              5 COMMON     1     1      0
                 _lcd_DelaySetupTime
                      _lcd_WriteData
 ---------------------------------------------------------------------------------
 (3) _labs                                                 4     0      4      68
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     109
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     304
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _lcd_Goto                                             2     1      1     528
                                              6 COMMON     2     1      1
                       _lcd_PrintCmd
 ---------------------------------------------------------------------------------
 (1) _programInitialize                                    0     0      0     676
                     _lcd_Initialize
                   _motor_Initialize
 ---------------------------------------------------------------------------------
 (2) _motor_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_Initialize                                       0     0      0     676
                           _delay_ms
                     _delay_x24o25us
                       _lcd_PrintCmd
 ---------------------------------------------------------------------------------
 (3) _lcd_PrintCmd                                         1     1      0     420
                                              5 COMMON     1     1      0
                 _lcd_DelaySetupTime
                      _lcd_WriteData
 ---------------------------------------------------------------------------------
 (4) _lcd_WriteData                                        3     3      0     338
                                              2 COMMON     3     3      0
                       _delay_x1o5us
                         _lcd_EPulse
 ---------------------------------------------------------------------------------
 (5) _lcd_EPulse                                           0     0      0      53
                     _lcd_DelayPulse
 ---------------------------------------------------------------------------------
 (6) _lcd_DelayPulse                                       0     0      0      53
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (4) _lcd_DelaySetupTime                                   0     0      0      53
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             8     4      4     154
                                              6 COMMON     8     4      4
                     _delay_x24o25us
 ---------------------------------------------------------------------------------
 (4) _delay_x24o25us                                       4     2      2     102
                                              2 COMMON     4     2      2
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (5) _delay_x1o5us                                         2     2      0      53
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _programInitialize
     _lcd_Initialize
       _delay_ms
         _delay_x24o25us
           _delay_x1o5us
       _delay_x24o25us
       _lcd_PrintCmd
         _lcd_DelaySetupTime
           _delay_x1o5us
         _lcd_WriteData
           _delay_x1o5us
           _lcd_EPulse
             _lcd_DelayPulse
               _delay_x1o5us
     _motor_Initialize
   _programLoop
     _delay_ms
     _lcd_Goto
       _lcd_PrintCmd
     _lcd_PrintDigitInt32
       ___aldiv
       ___bmul
       _labs
       _lcd_PrintChar
         _lcd_DelaySetupTime
         _lcd_WriteData
       _lcd_PrintString
         _lcd_PrintChar
       _memset
     _lcd_PrintString
     _motor_SetSpeed
     _pb_DelayDebounce
       _delay_ms

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BIGRAM             480      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     43      43     53.8%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      57      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Sep 21 21:38:12 2024

                  ??_lcd_PrintCmd 0075                    ___bmul@product 0071                _lcd_DelaySetupTime 0305  
                              l62 0348                                l70 03B4                                l64 0351  
                              l76 0428                                l92 0796                                l84 06BE  
                              l79 0491                                l99 07DF                   ??_lcd_PrintChar 0075  
                             l111 0309                               l120 0519                               l114 030E  
                             l123 032D                               l140 0338                               l108 0344  
                             l117 0322                               l126 045B                               l137 03FF  
                             l401 05A4                               l146 03CB                               l170 0678  
                             l173 0361                               l158 05CE                               l352 0374  
                             l176 039E                               l391 052C                               l933 0352  
                             l935 0359                               l937 035B                               l795 03E2  
                             l789 0389                               _PR2 001B                               u600 0368  
                             u505 04B6                               u601 0367                               u610 0373  
                             u515 04C6                               u611 0372                               u700 058C  
                             u620 051F                               u525 04DA                               u701 058B  
                             u621 051E                               u470 0351                               u550 03B4  
                             u710 0591                               u630 0530                               u471 0350  
                             u551 03B3                               u535 04EB                               u711 0590  
                             u631 052F                               u560 0428                               u640 054D  
                             u720 05C5                               u800 06BA                               u561 0427  
                             u545 04FA                               u641 054C                               u721 05C4  
                             u801 06B9                               u570 03CB                               u730 05CA  
                             u810 06C7                               u555 03B0                               u571 03CA  
                             u731 05C9                               u811 06C6                               u660 055D  
                             u580 03E2                               u740 05E9                               u820 071A  
                             u565 0424                               u485 0496                               u661 055C  
                             u581 03E1                               u741 05E8                               u821 0719  
                             u590 0379                               u750 062C                               u830 072E  
                             u495 04A7                               u655 0551                               u591 0378  
                             u751 062B                               u831 072D                               u680 0576  
                             u760 0636                               u840 076E                               u681 0575  
                             u761 0635                               u841 076D                               u770 0657  
                             u850 0787                               u675 055E                               u771 0656  
                             u851 0786                               u780 0660                               u860 079B  
                             u685 0572                               u781 065F                               u861 079A  
                             u870 07B7                               u790 06A3                               u695 0580  
                             u775 0653                               u871 07B6                               u791 06A2  
                             u880 07D0                               u881 07CF                               u890 07E4  
                             u891 07E3               ?_lcd_DelaySetupTime 0070                               wreg 0009  
             _lcd_PrintDigitInt32 05A5                              l1201 0409                              l1203 0410  
                            l1211 03BE                              l1205 0416                              l1301 03F7  
                            l1213 03C2                              l1221 03CF                              l1215 0324  
                            l1231 037A                              l1207 03B5                              l1223 03D4  
                            l1311 05C5                              l1303 05A5                              l1161 030A  
                            l1217 0326                              l1241 036A                              l1209 03B6  
                            l1225 03D6                              l1321 05F6                              l1313 05CA  
                            l1305 05A8                              l1401 0703                              l1155 0346  
                            l1163 0318                              l1171 0493                              l1251 051B  
                            l1243 036C                              l1235 0363                              l1227 0375  
                            l1219 03CC                              l1331 062C                              l1323 0612  
                            l1315 05E4                              l1307 05B4                              l1411 072E  
                            l1403 070A                              l1157 0349                              l1165 031A  
                            l1181 0507                              l1173 04D4                              l1261 0545  
                            l1253 051F                              l1245 0373                              l1237 0364  
                            l1229 0379                              l1341 063F                              l1333 062E  
                            l1325 061B                              l1317 05E9                              l1309 05C0  
                            l1421 0757                              l1413 0732                              l1405 0715  
                            l1159 034B                              l1191 03A6                              l1167 031D  
                            l1183 0512                              l1175 04D7                              l1271 0564  
                            l1263 054D                              l1255 0530                              l1239 0368  
                            l1335 0630                              l1343 0642                              l1327 0622  
                            l1319 05ED                              l1431 077D                              l1423 075E  
                            l1415 0737                              l1407 071A                              l1193 03AA  
                            l1169 0305                              l1185 0515                              l1177 04E8  
                            l1273 0576                              l1265 0550                              l1281 058C  
                            l1257 053B                              l1249 051A                              l1361 0671  
                            l1353 0661                              l1345 0657                              l1337 0636  
                            l1329 0624                              l1433 0787                              l1441 07AC  
                            l1417 0746                              l1409 0727                              l1425 0769  
                            l1187 039F                              l1179 04F7                              l1291 03E4  
                            l1283 0591                              l1275 057E                              l1267 0559  
                            l1259 053D                              l1195 032F                              l1355 066C  
                            l1347 065A                              l1339 063B                              l1363 038A  
                            l1451 07D0                              l1443 07B2                              l1435 078F  
                            l1427 076E                              l1419 0751                              l1371 0679  
                            l1189 03A2                              l1293 03E5                              l1285 059C  
                            l1277 057F                              l1269 055D                              l1197 0331  
                            l1357 066E                              l1349 065B                              l1365 0339  
                            l1453 07D8                              l1445 07B7                              l1437 079B  
                            l1429 077B                              l1381 069E                              l1373 067C  
                            l1461 030F                              l1199 0400                              l1367 045C  
                            l1295 03EB                              l1279 0586                              l1455 07E4  
                            l1447 07C4                              l1439 07A8                              l1391 06CC  
                            l1383 06A3                              l1375 0681                              l1463 0312  
                            l1289 0429                              l1369 048B                              l1297 03F1  
                            l1457 07F1                              l1449 07C6                              l1393 06DE  
                            l1385 06B0                              l1377 0688                              l1459 07F5  
                            l1395 06E3                              l1387 06BA                              l1379 068D  
                            l1397 06F2                              l1389 06C7                              l1399 06FD  
                            STR_1 0800                              STR_2 0816                              STR_3 0810  
                            STR_4 081C                              STR_5 0810                              STR_6 0822  
                            STR_7 0810                              STR_8 0828                              STR_9 0810  
               ?_pb_DelayDebounce 0070                   ??_lcd_WriteData 0072                              _labs 0375  
                            _main 030F                ??_pb_DelayDebounce 007E                              fsr0h 0005  
                            fsr1h 0007                              indf0 0000                              fsr0l 0004  
                            indf1 0001                              fsr1l 0006                              btemp 007E  
            ??_lcd_DelaySetupTime 0072                              start 0002              ?_lcd_PrintDigitInt32 0020  
               ___bmul@multiplier 0072              __end_of_delay_x1o5us 0352                 ??_lcd_PrintString 0078  
                 __end_of___aldiv 05A5                             ?_labs 0070                             ?_main 0070  
                           labs@a 0070               delay_x24o25us@delay 0072                             status 0003  
                           wtemp0 007E             ??_lcd_PrintDigitInt32 0027                   __initialization 07FD  
                    __end_of_labs 038A                      __end_of_main 0318                            ??_labs 0074  
                          ??_main 007E          lcd_PrintDigitInt32@tempC 0045          lcd_PrintDigitInt32@tempN 0041  
                          _CCPR1L 0291              __end_of_lcd_PrintCmd 032E                  __end_of_delay_ms 0429  
               delay_x1o5us@delay 0070                  __end_of_lcd_Goto 0400                            ___bmul 0362  
                       ??___aldiv 0078                            _memset 03CC                    _delay_x24o25us 039F  
           programLoop@motorSpeed 0049            lcd_PrintChar@character 0075           __end_of__initialization 07FD  
   lcd_PrintDigitInt32@numberChar 0036                      ?_programLoop 0070                  _motor_Initialize 0352  
             ___bmul@multiplicand 0070                    __pcstackCOMMON 0070               lcd_PrintCmd@command 0075  
          __end_of_delay_x24o25us 03B5     lcd_PrintDigitInt32@totalDigit 0047                      _delay_x1o5us 0345  
               _programInitialize 045C                   _lcd_PrintString 03B5                        __pmaintext 030F  
              ?_programInitialize 0070                           ?___bmul 0070                        _lcd_EPulse 0318  
                 ?_delay_x24o25us 0072                           ?_memset 0070               ??_programInitialize 007E  
           __end_of_lcd_PrintChar 0339                         ?_delay_ms 0076                         ?_lcd_Goto 0076  
       __end_of_programInitialize 0492             __end_of_lcd_WriteData 051A             lcd_PrintDigitInt32@i1 0048  
           lcd_PrintDigitInt32@i2 0046                           ___aldiv 051A                      _lcd_PrintCmd 0323  
                         __ptext1 0679                           __ptext2 0339                           __ptext3 038A  
                         __ptext4 05A5                           __ptext5 03CC                           __ptext6 03B5  
                         __ptext7 032E                           __ptext8 0375                           __ptext9 0362  
                       _T2CONbits 001C                  ___aldiv@dividend 0074                        ??_delay_ms 007A  
                      ??_lcd_Goto 0077              end_of_initialization 07FD           __end_of_lcd_PrintString 03CC  
      lcd_PrintDigitInt32@noDigit 0024       __end_of_lcd_PrintDigitInt32 0679                           memset@c 0071  
                         memset@n 0073                           memset@p 0075                  ___aldiv@quotient 007A  
                     ?_lcd_EPulse 0070                         _PORTAbits 000C          __end_of_motor_Initialize 0362  
               motor_SetSpeed@pwm 0070                         _TRISAbits 008C                         _TRISBbits 008D  
                       _TRISCbits 008E                    _lcd_DelayPulse 030A                     delay_x1o5us@i 0071  
                     _CCP1CONbits 0293                  _pb_DelayDebounce 0339                    __end_of___bmul 0375  
                   delay_ms@delay 0076                    __end_of_memset 03E3            __end_of_lcd_DelayPulse 030F  
             start_initialization 07FD                    _motor_SetSpeed 038A                  ?_lcd_PrintString 0076  
lcd_PrintDigitInt32@numberRevChar 002B                    _lcd_Initialize 0429                  ??_delay_x24o25us 0074  
                        ??___bmul 0071                          ??_memset 0075                        memset@dest 0070  
                 ?_lcd_DelayPulse 0070                         ___latbits 0001                     __pcstackBANK0 0020  
          __end_of_motor_SetSpeed 039F            __end_of_lcd_Initialize 045C                          ?___aldiv 0070  
                 ?_motor_SetSpeed 0070                   ?_lcd_Initialize 0070                   ___aldiv@divisor 0070  
      __end_of_lcd_DelaySetupTime 030A                   ___aldiv@counter 0078                          _LATBbits 010D  
                        _LATCbits 010E                         delay_ms@i 007A                      ??_lcd_EPulse 0072  
                       lcd_Goto@x 0076                         lcd_Goto@y 0077                 lcd_WriteData@data 0074  
               ?_motor_Initialize 0070                ??_motor_Initialize 0070          __end_of_pb_DelayDebounce 0345  
              __end_of_lcd_EPulse 0323                     ??_programLoop 007E                        _APFCONbits 011D  
                      _ANSELAbits 018C                        _ANSELBbits 018D                     _lcd_PrintChar 032E  
                        _delay_ms 0400                          __ptext10 051A                          __ptext11 03E3  
                        __ptext20 0400                          __ptext12 045C                          __ptext21 039F  
                        __ptext13 0352                          __ptext22 0345                          __ptext14 0429  
                        __ptext15 0323                          __ptext16 0492                          __ptext17 0318  
                        __ptext18 030A                          __ptext19 0305                          _lcd_Goto 03E3  
                   ?_delay_x1o5us 0070                     _lcd_WriteData 0492               __end_of_programLoop 07FD  
                ??_lcd_DelayPulse 0072                    ?_lcd_PrintChar 0070                    ??_delay_x1o5us 0070  
                  ?_lcd_WriteData 0070         lcd_PrintDigitInt32@enSign 0025         lcd_PrintDigitInt32@enZero 0026  
       lcd_PrintDigitInt32@number 0020                   delay_x24o25us@i 0074                     ?_lcd_PrintCmd 0070  
                   __pstringtext1 0800                     __pstringtext2 0810                     __pstringtext3 0816  
                   __pstringtext4 081C                     __pstringtext5 0822                     __pstringtext6 0828  
                   __pstringtext7 0000                  ??_motor_SetSpeed 0072                      ___aldiv@sign 0079  
                ??_lcd_Initialize 007E             lcd_PrintString@string 0076                       _programLoop 0679  
