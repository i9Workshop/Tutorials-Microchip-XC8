

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Sep 19 23:23:08 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1783
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Generated 07/09/2023 GMT
    37                           ; 
    38                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F1783 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70     0008                     bsr             equ	8
    71     0005                     fsr0h           equ	5
    72     0004                     fsr0l           equ	4
    73     0007                     fsr1h           equ	7
    74     0006                     fsr1l           equ	6
    75     0000                     indf            equ	0
    76     0000                     indf0           equ	0
    77     0001                     indf1           equ	1
    78     000B                     intcon          equ	11
    79     0002                     pc              equ	2
    80     0002                     pcl             equ	2
    81     000A                     pclath          equ	10
    82     0003                     status          equ	3
    83     0009                     wreg            equ	9
    84     0000                     INDF0           equ	0	;# 
    85     0001                     INDF1           equ	1	;# 
    86     0002                     PCL             equ	2	;# 
    87     0003                     STATUS          equ	3	;# 
    88     0004                     FSR0L           equ	4	;# 
    89     0005                     FSR0H           equ	5	;# 
    90     0006                     FSR1L           equ	6	;# 
    91     0007                     FSR1H           equ	7	;# 
    92     0008                     BSR             equ	8	;# 
    93     0009                     WREG            equ	9	;# 
    94     000A                     PCLATH          equ	10	;# 
    95     000B                     INTCON          equ	11	;# 
    96     000C                     PORTA           equ	12	;# 
    97     000D                     PORTB           equ	13	;# 
    98     000E                     PORTC           equ	14	;# 
    99     0010                     PORTE           equ	16	;# 
   100     0011                     PIR1            equ	17	;# 
   101     0012                     PIR2            equ	18	;# 
   102     0014                     PIR4            equ	20	;# 
   103     0015                     TMR0            equ	21	;# 
   104     0016                     TMR1            equ	22	;# 
   105     0016                     TMR1L           equ	22	;# 
   106     0017                     TMR1H           equ	23	;# 
   107     0018                     T1CON           equ	24	;# 
   108     0019                     T1GCON          equ	25	;# 
   109     001A                     TMR2            equ	26	;# 
   110     001B                     PR2             equ	27	;# 
   111     001C                     T2CON           equ	28	;# 
   112     008C                     TRISA           equ	140	;# 
   113     008D                     TRISB           equ	141	;# 
   114     008E                     TRISC           equ	142	;# 
   115     0090                     TRISE           equ	144	;# 
   116     0091                     PIE1            equ	145	;# 
   117     0092                     PIE2            equ	146	;# 
   118     0094                     PIE4            equ	148	;# 
   119     0095                     OPTION_REG      equ	149	;# 
   120     0096                     PCON            equ	150	;# 
   121     0097                     WDTCON          equ	151	;# 
   122     0098                     OSCTUNE         equ	152	;# 
   123     0099                     OSCCON          equ	153	;# 
   124     009A                     OSCSTAT         equ	154	;# 
   125     009B                     ADRES           equ	155	;# 
   126     009B                     ADRESL          equ	155	;# 
   127     009C                     ADRESH          equ	156	;# 
   128     009D                     ADCON0          equ	157	;# 
   129     009E                     ADCON1          equ	158	;# 
   130     009F                     ADCON2          equ	159	;# 
   131     010C                     LATA            equ	268	;# 
   132     010D                     LATB            equ	269	;# 
   133     010E                     LATC            equ	270	;# 
   134     0111                     CM1CON0         equ	273	;# 
   135     0112                     CM1CON1         equ	274	;# 
   136     0113                     CM2CON0         equ	275	;# 
   137     0114                     CM2CON1         equ	276	;# 
   138     0115                     CMOUT           equ	277	;# 
   139     0116                     BORCON          equ	278	;# 
   140     0117                     FVRCON          equ	279	;# 
   141     0118                     DACCON0         equ	280	;# 
   142     0119                     DACCON1         equ	281	;# 
   143     011D                     APFCON          equ	285	;# 
   144     011D                     APFCON0         equ	285	;# 
   145     011E                     CM3CON0         equ	286	;# 
   146     011F                     CM3CON1         equ	287	;# 
   147     018C                     ANSELA          equ	396	;# 
   148     018D                     ANSELB          equ	397	;# 
   149     0191                     EEADR           equ	401	;# 
   150     0191                     EEADRL          equ	401	;# 
   151     0192                     EEADRH          equ	402	;# 
   152     0193                     EEDAT           equ	403	;# 
   153     0193                     EEDATL          equ	403	;# 
   154     0193                     EEDATA          equ	403	;# 
   155     0194                     EEDATH          equ	404	;# 
   156     0195                     EECON1          equ	405	;# 
   157     0196                     EECON2          equ	406	;# 
   158     0197                     VREGCON         equ	407	;# 
   159     0199                     RC1REG          equ	409	;# 
   160     0199                     RCREG           equ	409	;# 
   161     0199                     RCREG1          equ	409	;# 
   162     019A                     TX1REG          equ	410	;# 
   163     019A                     TXREG1          equ	410	;# 
   164     019A                     TXREG           equ	410	;# 
   165     019B                     SP1BRG          equ	411	;# 
   166     019B                     SPBRG           equ	411	;# 
   167     019B                     SP1BRGL         equ	411	;# 
   168     019B                     SPBRG1          equ	411	;# 
   169     019B                     SPBRGL          equ	411	;# 
   170     019C                     SP1BRGH         equ	412	;# 
   171     019C                     SPBRGH          equ	412	;# 
   172     019C                     SPBRGH1         equ	412	;# 
   173     019D                     RC1STA          equ	413	;# 
   174     019D                     RCSTA1          equ	413	;# 
   175     019D                     RCSTA           equ	413	;# 
   176     019E                     TX1STA          equ	414	;# 
   177     019E                     TXSTA1          equ	414	;# 
   178     019E                     TXSTA           equ	414	;# 
   179     019F                     BAUD1CON        equ	415	;# 
   180     019F                     BAUDCON1        equ	415	;# 
   181     019F                     BAUDCTL1        equ	415	;# 
   182     019F                     BAUDCON         equ	415	;# 
   183     019F                     BAUDCTL         equ	415	;# 
   184     020C                     WPUA            equ	524	;# 
   185     020D                     WPUB            equ	525	;# 
   186     020E                     WPUC            equ	526	;# 
   187     0210                     WPUE            equ	528	;# 
   188     0211                     SSPBUF          equ	529	;# 
   189     0211                     SSP1BUF         equ	529	;# 
   190     0212                     SSPADD          equ	530	;# 
   191     0212                     SSP1ADD         equ	530	;# 
   192     0213                     SSPMSK          equ	531	;# 
   193     0213                     SSP1MSK         equ	531	;# 
   194     0214                     SSPSTAT         equ	532	;# 
   195     0214                     SSP1STAT        equ	532	;# 
   196     0215                     SSPCON1         equ	533	;# 
   197     0215                     SSP1CON         equ	533	;# 
   198     0215                     SSPCON          equ	533	;# 
   199     0216                     SSPCON2         equ	534	;# 
   200     0216                     SSP1CON2        equ	534	;# 
   201     0217                     SSPCON3         equ	535	;# 
   202     0217                     SSP1CON3        equ	535	;# 
   203     028C                     ODCONA          equ	652	;# 
   204     028D                     ODCONB          equ	653	;# 
   205     028E                     ODCONC          equ	654	;# 
   206     0291                     CCPR1           equ	657	;# 
   207     0291                     CCPR1L          equ	657	;# 
   208     0292                     CCPR1H          equ	658	;# 
   209     0293                     CCP1CON         equ	659	;# 
   210     0298                     CCPR2           equ	664	;# 
   211     0298                     CCPR2L          equ	664	;# 
   212     0299                     CCPR2H          equ	665	;# 
   213     029A                     CCP2CON         equ	666	;# 
   214     030C                     SLRCONA         equ	780	;# 
   215     030D                     SLRCONB         equ	781	;# 
   216     030E                     SLRCONC         equ	782	;# 
   217     038C                     INLVLA          equ	908	;# 
   218     038D                     INLVLB          equ	909	;# 
   219     038E                     INLVLC          equ	910	;# 
   220     0390                     INLVLE          equ	912	;# 
   221     0391                     IOCAP           equ	913	;# 
   222     0392                     IOCAN           equ	914	;# 
   223     0393                     IOCAF           equ	915	;# 
   224     0394                     IOCBP           equ	916	;# 
   225     0395                     IOCBN           equ	917	;# 
   226     0396                     IOCBF           equ	918	;# 
   227     0397                     IOCCP           equ	919	;# 
   228     0398                     IOCCN           equ	920	;# 
   229     0399                     IOCCF           equ	921	;# 
   230     039D                     IOCEP           equ	925	;# 
   231     039E                     IOCEN           equ	926	;# 
   232     039F                     IOCEF           equ	927	;# 
   233     0511                     OPA1CON         equ	1297	;# 
   234     0513                     OPA2CON         equ	1299	;# 
   235     051A                     CLKRCON         equ	1306	;# 
   236     0811                     PSMC1CON        equ	2065	;# 
   237     0812                     PSMC1MDL        equ	2066	;# 
   238     0813                     PSMC1SYNC       equ	2067	;# 
   239     0814                     PSMC1CLK        equ	2068	;# 
   240     0815                     PSMC1OEN        equ	2069	;# 
   241     0816                     PSMC1POL        equ	2070	;# 
   242     0817                     PSMC1BLNK       equ	2071	;# 
   243     0818                     PSMC1REBS       equ	2072	;# 
   244     0819                     PSMC1FEBS       equ	2073	;# 
   245     081A                     PSMC1PHS        equ	2074	;# 
   246     081B                     PSMC1DCS        equ	2075	;# 
   247     081C                     PSMC1PRS        equ	2076	;# 
   248     081D                     PSMC1ASDC       equ	2077	;# 
   249     081E                     PSMC1ASDL       equ	2078	;# 
   250     081F                     PSMC1ASDS       equ	2079	;# 
   251     0820                     PSMC1INT        equ	2080	;# 
   252     0821                     PSMC1PH         equ	2081	;# 
   253     0821                     PSMC1PHL        equ	2081	;# 
   254     0822                     PSMC1PHH        equ	2082	;# 
   255     0823                     PSMC1DC         equ	2083	;# 
   256     0823                     PSMC1DCL        equ	2083	;# 
   257     0824                     PSMC1DCH        equ	2084	;# 
   258     0825                     PSMC1PR         equ	2085	;# 
   259     0825                     PSMC1PRL        equ	2085	;# 
   260     0826                     PSMC1PRH        equ	2086	;# 
   261     0827                     PSMC1TMR        equ	2087	;# 
   262     0827                     PSMC1TMRL       equ	2087	;# 
   263     0828                     PSMC1TMRH       equ	2088	;# 
   264     0829                     PSMC1DBR        equ	2089	;# 
   265     082A                     PSMC1DBF        equ	2090	;# 
   266     082B                     PSMC1BLKR       equ	2091	;# 
   267     082C                     PSMC1BLKF       equ	2092	;# 
   268     082D                     PSMC1FFA        equ	2093	;# 
   269     082E                     PSMC1STR0       equ	2094	;# 
   270     082F                     PSMC1STR1       equ	2095	;# 
   271     0831                     PSMC2CON        equ	2097	;# 
   272     0832                     PSMC2MDL        equ	2098	;# 
   273     0833                     PSMC2SYNC       equ	2099	;# 
   274     0834                     PSMC2CLK        equ	2100	;# 
   275     0835                     PSMC2OEN        equ	2101	;# 
   276     0836                     PSMC2POL        equ	2102	;# 
   277     0837                     PSMC2BLNK       equ	2103	;# 
   278     0838                     PSMC2REBS       equ	2104	;# 
   279     0839                     PSMC2FEBS       equ	2105	;# 
   280     083A                     PSMC2PHS        equ	2106	;# 
   281     083B                     PSMC2DCS        equ	2107	;# 
   282     083C                     PSMC2PRS        equ	2108	;# 
   283     083D                     PSMC2ASDC       equ	2109	;# 
   284     083E                     PSMC2ASDL       equ	2110	;# 
   285     083F                     PSMC2ASDS       equ	2111	;# 
   286     0840                     PSMC2INT        equ	2112	;# 
   287     0841                     PSMC2PH         equ	2113	;# 
   288     0841                     PSMC2PHL        equ	2113	;# 
   289     0842                     PSMC2PHH        equ	2114	;# 
   290     0843                     PSMC2DC         equ	2115	;# 
   291     0843                     PSMC2DCL        equ	2115	;# 
   292     0844                     PSMC2DCH        equ	2116	;# 
   293     0845                     PSMC2PR         equ	2117	;# 
   294     0845                     PSMC2PRL        equ	2117	;# 
   295     0846                     PSMC2PRH        equ	2118	;# 
   296     0847                     PSMC2TMR        equ	2119	;# 
   297     0847                     PSMC2TMRL       equ	2119	;# 
   298     0848                     PSMC2TMRH       equ	2120	;# 
   299     0849                     PSMC2DBR        equ	2121	;# 
   300     084A                     PSMC2DBF        equ	2122	;# 
   301     084B                     PSMC2BLKR       equ	2123	;# 
   302     084C                     PSMC2BLKF       equ	2124	;# 
   303     084D                     PSMC2FFA        equ	2125	;# 
   304     084E                     PSMC2STR0       equ	2126	;# 
   305     084F                     PSMC2STR1       equ	2127	;# 
   306     0FE4                     STATUS_SHAD     equ	4068	;# 
   307     0FE5                     WREG_SHAD       equ	4069	;# 
   308     0FE6                     BSR_SHAD        equ	4070	;# 
   309     0FE7                     PCLATH_SHAD     equ	4071	;# 
   310     0FE8                     FSR0L_SHAD      equ	4072	;# 
   311     0FE9                     FSR0H_SHAD      equ	4073	;# 
   312     0FEA                     FSR1L_SHAD      equ	4074	;# 
   313     0FEB                     FSR1H_SHAD      equ	4075	;# 
   314     0FED                     STKPTR          equ	4077	;# 
   315     0FEE                     TOSL            equ	4078	;# 
   316     0FEF                     TOSH            equ	4079	;# 
   317     0000                     INDF0           equ	0	;# 
   318     0001                     INDF1           equ	1	;# 
   319     0002                     PCL             equ	2	;# 
   320     0003                     STATUS          equ	3	;# 
   321     0004                     FSR0L           equ	4	;# 
   322     0005                     FSR0H           equ	5	;# 
   323     0006                     FSR1L           equ	6	;# 
   324     0007                     FSR1H           equ	7	;# 
   325     0008                     BSR             equ	8	;# 
   326     0009                     WREG            equ	9	;# 
   327     000A                     PCLATH          equ	10	;# 
   328     000B                     INTCON          equ	11	;# 
   329     000C                     PORTA           equ	12	;# 
   330     000D                     PORTB           equ	13	;# 
   331     000E                     PORTC           equ	14	;# 
   332     0010                     PORTE           equ	16	;# 
   333     0011                     PIR1            equ	17	;# 
   334     0012                     PIR2            equ	18	;# 
   335     0014                     PIR4            equ	20	;# 
   336     0015                     TMR0            equ	21	;# 
   337     0016                     TMR1            equ	22	;# 
   338     0016                     TMR1L           equ	22	;# 
   339     0017                     TMR1H           equ	23	;# 
   340     0018                     T1CON           equ	24	;# 
   341     0019                     T1GCON          equ	25	;# 
   342     001A                     TMR2            equ	26	;# 
   343     001B                     PR2             equ	27	;# 
   344     001C                     T2CON           equ	28	;# 
   345     008C                     TRISA           equ	140	;# 
   346     008D                     TRISB           equ	141	;# 
   347     008E                     TRISC           equ	142	;# 
   348     0090                     TRISE           equ	144	;# 
   349     0091                     PIE1            equ	145	;# 
   350     0092                     PIE2            equ	146	;# 
   351     0094                     PIE4            equ	148	;# 
   352     0095                     OPTION_REG      equ	149	;# 
   353     0096                     PCON            equ	150	;# 
   354     0097                     WDTCON          equ	151	;# 
   355     0098                     OSCTUNE         equ	152	;# 
   356     0099                     OSCCON          equ	153	;# 
   357     009A                     OSCSTAT         equ	154	;# 
   358     009B                     ADRES           equ	155	;# 
   359     009B                     ADRESL          equ	155	;# 
   360     009C                     ADRESH          equ	156	;# 
   361     009D                     ADCON0          equ	157	;# 
   362     009E                     ADCON1          equ	158	;# 
   363     009F                     ADCON2          equ	159	;# 
   364     010C                     LATA            equ	268	;# 
   365     010D                     LATB            equ	269	;# 
   366     010E                     LATC            equ	270	;# 
   367     0111                     CM1CON0         equ	273	;# 
   368     0112                     CM1CON1         equ	274	;# 
   369     0113                     CM2CON0         equ	275	;# 
   370     0114                     CM2CON1         equ	276	;# 
   371     0115                     CMOUT           equ	277	;# 
   372     0116                     BORCON          equ	278	;# 
   373     0117                     FVRCON          equ	279	;# 
   374     0118                     DACCON0         equ	280	;# 
   375     0119                     DACCON1         equ	281	;# 
   376     011D                     APFCON          equ	285	;# 
   377     011D                     APFCON0         equ	285	;# 
   378     011E                     CM3CON0         equ	286	;# 
   379     011F                     CM3CON1         equ	287	;# 
   380     018C                     ANSELA          equ	396	;# 
   381     018D                     ANSELB          equ	397	;# 
   382     0191                     EEADR           equ	401	;# 
   383     0191                     EEADRL          equ	401	;# 
   384     0192                     EEADRH          equ	402	;# 
   385     0193                     EEDAT           equ	403	;# 
   386     0193                     EEDATL          equ	403	;# 
   387     0193                     EEDATA          equ	403	;# 
   388     0194                     EEDATH          equ	404	;# 
   389     0195                     EECON1          equ	405	;# 
   390     0196                     EECON2          equ	406	;# 
   391     0197                     VREGCON         equ	407	;# 
   392     0199                     RC1REG          equ	409	;# 
   393     0199                     RCREG           equ	409	;# 
   394     0199                     RCREG1          equ	409	;# 
   395     019A                     TX1REG          equ	410	;# 
   396     019A                     TXREG1          equ	410	;# 
   397     019A                     TXREG           equ	410	;# 
   398     019B                     SP1BRG          equ	411	;# 
   399     019B                     SPBRG           equ	411	;# 
   400     019B                     SP1BRGL         equ	411	;# 
   401     019B                     SPBRG1          equ	411	;# 
   402     019B                     SPBRGL          equ	411	;# 
   403     019C                     SP1BRGH         equ	412	;# 
   404     019C                     SPBRGH          equ	412	;# 
   405     019C                     SPBRGH1         equ	412	;# 
   406     019D                     RC1STA          equ	413	;# 
   407     019D                     RCSTA1          equ	413	;# 
   408     019D                     RCSTA           equ	413	;# 
   409     019E                     TX1STA          equ	414	;# 
   410     019E                     TXSTA1          equ	414	;# 
   411     019E                     TXSTA           equ	414	;# 
   412     019F                     BAUD1CON        equ	415	;# 
   413     019F                     BAUDCON1        equ	415	;# 
   414     019F                     BAUDCTL1        equ	415	;# 
   415     019F                     BAUDCON         equ	415	;# 
   416     019F                     BAUDCTL         equ	415	;# 
   417     020C                     WPUA            equ	524	;# 
   418     020D                     WPUB            equ	525	;# 
   419     020E                     WPUC            equ	526	;# 
   420     0210                     WPUE            equ	528	;# 
   421     0211                     SSPBUF          equ	529	;# 
   422     0211                     SSP1BUF         equ	529	;# 
   423     0212                     SSPADD          equ	530	;# 
   424     0212                     SSP1ADD         equ	530	;# 
   425     0213                     SSPMSK          equ	531	;# 
   426     0213                     SSP1MSK         equ	531	;# 
   427     0214                     SSPSTAT         equ	532	;# 
   428     0214                     SSP1STAT        equ	532	;# 
   429     0215                     SSPCON1         equ	533	;# 
   430     0215                     SSP1CON         equ	533	;# 
   431     0215                     SSPCON          equ	533	;# 
   432     0216                     SSPCON2         equ	534	;# 
   433     0216                     SSP1CON2        equ	534	;# 
   434     0217                     SSPCON3         equ	535	;# 
   435     0217                     SSP1CON3        equ	535	;# 
   436     028C                     ODCONA          equ	652	;# 
   437     028D                     ODCONB          equ	653	;# 
   438     028E                     ODCONC          equ	654	;# 
   439     0291                     CCPR1           equ	657	;# 
   440     0291                     CCPR1L          equ	657	;# 
   441     0292                     CCPR1H          equ	658	;# 
   442     0293                     CCP1CON         equ	659	;# 
   443     0298                     CCPR2           equ	664	;# 
   444     0298                     CCPR2L          equ	664	;# 
   445     0299                     CCPR2H          equ	665	;# 
   446     029A                     CCP2CON         equ	666	;# 
   447     030C                     SLRCONA         equ	780	;# 
   448     030D                     SLRCONB         equ	781	;# 
   449     030E                     SLRCONC         equ	782	;# 
   450     038C                     INLVLA          equ	908	;# 
   451     038D                     INLVLB          equ	909	;# 
   452     038E                     INLVLC          equ	910	;# 
   453     0390                     INLVLE          equ	912	;# 
   454     0391                     IOCAP           equ	913	;# 
   455     0392                     IOCAN           equ	914	;# 
   456     0393                     IOCAF           equ	915	;# 
   457     0394                     IOCBP           equ	916	;# 
   458     0395                     IOCBN           equ	917	;# 
   459     0396                     IOCBF           equ	918	;# 
   460     0397                     IOCCP           equ	919	;# 
   461     0398                     IOCCN           equ	920	;# 
   462     0399                     IOCCF           equ	921	;# 
   463     039D                     IOCEP           equ	925	;# 
   464     039E                     IOCEN           equ	926	;# 
   465     039F                     IOCEF           equ	927	;# 
   466     0511                     OPA1CON         equ	1297	;# 
   467     0513                     OPA2CON         equ	1299	;# 
   468     051A                     CLKRCON         equ	1306	;# 
   469     0811                     PSMC1CON        equ	2065	;# 
   470     0812                     PSMC1MDL        equ	2066	;# 
   471     0813                     PSMC1SYNC       equ	2067	;# 
   472     0814                     PSMC1CLK        equ	2068	;# 
   473     0815                     PSMC1OEN        equ	2069	;# 
   474     0816                     PSMC1POL        equ	2070	;# 
   475     0817                     PSMC1BLNK       equ	2071	;# 
   476     0818                     PSMC1REBS       equ	2072	;# 
   477     0819                     PSMC1FEBS       equ	2073	;# 
   478     081A                     PSMC1PHS        equ	2074	;# 
   479     081B                     PSMC1DCS        equ	2075	;# 
   480     081C                     PSMC1PRS        equ	2076	;# 
   481     081D                     PSMC1ASDC       equ	2077	;# 
   482     081E                     PSMC1ASDL       equ	2078	;# 
   483     081F                     PSMC1ASDS       equ	2079	;# 
   484     0820                     PSMC1INT        equ	2080	;# 
   485     0821                     PSMC1PH         equ	2081	;# 
   486     0821                     PSMC1PHL        equ	2081	;# 
   487     0822                     PSMC1PHH        equ	2082	;# 
   488     0823                     PSMC1DC         equ	2083	;# 
   489     0823                     PSMC1DCL        equ	2083	;# 
   490     0824                     PSMC1DCH        equ	2084	;# 
   491     0825                     PSMC1PR         equ	2085	;# 
   492     0825                     PSMC1PRL        equ	2085	;# 
   493     0826                     PSMC1PRH        equ	2086	;# 
   494     0827                     PSMC1TMR        equ	2087	;# 
   495     0827                     PSMC1TMRL       equ	2087	;# 
   496     0828                     PSMC1TMRH       equ	2088	;# 
   497     0829                     PSMC1DBR        equ	2089	;# 
   498     082A                     PSMC1DBF        equ	2090	;# 
   499     082B                     PSMC1BLKR       equ	2091	;# 
   500     082C                     PSMC1BLKF       equ	2092	;# 
   501     082D                     PSMC1FFA        equ	2093	;# 
   502     082E                     PSMC1STR0       equ	2094	;# 
   503     082F                     PSMC1STR1       equ	2095	;# 
   504     0831                     PSMC2CON        equ	2097	;# 
   505     0832                     PSMC2MDL        equ	2098	;# 
   506     0833                     PSMC2SYNC       equ	2099	;# 
   507     0834                     PSMC2CLK        equ	2100	;# 
   508     0835                     PSMC2OEN        equ	2101	;# 
   509     0836                     PSMC2POL        equ	2102	;# 
   510     0837                     PSMC2BLNK       equ	2103	;# 
   511     0838                     PSMC2REBS       equ	2104	;# 
   512     0839                     PSMC2FEBS       equ	2105	;# 
   513     083A                     PSMC2PHS        equ	2106	;# 
   514     083B                     PSMC2DCS        equ	2107	;# 
   515     083C                     PSMC2PRS        equ	2108	;# 
   516     083D                     PSMC2ASDC       equ	2109	;# 
   517     083E                     PSMC2ASDL       equ	2110	;# 
   518     083F                     PSMC2ASDS       equ	2111	;# 
   519     0840                     PSMC2INT        equ	2112	;# 
   520     0841                     PSMC2PH         equ	2113	;# 
   521     0841                     PSMC2PHL        equ	2113	;# 
   522     0842                     PSMC2PHH        equ	2114	;# 
   523     0843                     PSMC2DC         equ	2115	;# 
   524     0843                     PSMC2DCL        equ	2115	;# 
   525     0844                     PSMC2DCH        equ	2116	;# 
   526     0845                     PSMC2PR         equ	2117	;# 
   527     0845                     PSMC2PRL        equ	2117	;# 
   528     0846                     PSMC2PRH        equ	2118	;# 
   529     0847                     PSMC2TMR        equ	2119	;# 
   530     0847                     PSMC2TMRL       equ	2119	;# 
   531     0848                     PSMC2TMRH       equ	2120	;# 
   532     0849                     PSMC2DBR        equ	2121	;# 
   533     084A                     PSMC2DBF        equ	2122	;# 
   534     084B                     PSMC2BLKR       equ	2123	;# 
   535     084C                     PSMC2BLKF       equ	2124	;# 
   536     084D                     PSMC2FFA        equ	2125	;# 
   537     084E                     PSMC2STR0       equ	2126	;# 
   538     084F                     PSMC2STR1       equ	2127	;# 
   539     0FE4                     STATUS_SHAD     equ	4068	;# 
   540     0FE5                     WREG_SHAD       equ	4069	;# 
   541     0FE6                     BSR_SHAD        equ	4070	;# 
   542     0FE7                     PCLATH_SHAD     equ	4071	;# 
   543     0FE8                     FSR0L_SHAD      equ	4072	;# 
   544     0FE9                     FSR0H_SHAD      equ	4073	;# 
   545     0FEA                     FSR1L_SHAD      equ	4074	;# 
   546     0FEB                     FSR1H_SHAD      equ	4075	;# 
   547     0FED                     STKPTR          equ	4077	;# 
   548     0FEE                     TOSL            equ	4078	;# 
   549     0FEF                     TOSH            equ	4079	;# 
   550     0000                     INDF0           equ	0	;# 
   551     0001                     INDF1           equ	1	;# 
   552     0002                     PCL             equ	2	;# 
   553     0003                     STATUS          equ	3	;# 
   554     0004                     FSR0L           equ	4	;# 
   555     0005                     FSR0H           equ	5	;# 
   556     0006                     FSR1L           equ	6	;# 
   557     0007                     FSR1H           equ	7	;# 
   558     0008                     BSR             equ	8	;# 
   559     0009                     WREG            equ	9	;# 
   560     000A                     PCLATH          equ	10	;# 
   561     000B                     INTCON          equ	11	;# 
   562     000C                     PORTA           equ	12	;# 
   563     000D                     PORTB           equ	13	;# 
   564     000E                     PORTC           equ	14	;# 
   565     0010                     PORTE           equ	16	;# 
   566     0011                     PIR1            equ	17	;# 
   567     0012                     PIR2            equ	18	;# 
   568     0014                     PIR4            equ	20	;# 
   569     0015                     TMR0            equ	21	;# 
   570     0016                     TMR1            equ	22	;# 
   571     0016                     TMR1L           equ	22	;# 
   572     0017                     TMR1H           equ	23	;# 
   573     0018                     T1CON           equ	24	;# 
   574     0019                     T1GCON          equ	25	;# 
   575     001A                     TMR2            equ	26	;# 
   576     001B                     PR2             equ	27	;# 
   577     001C                     T2CON           equ	28	;# 
   578     008C                     TRISA           equ	140	;# 
   579     008D                     TRISB           equ	141	;# 
   580     008E                     TRISC           equ	142	;# 
   581     0090                     TRISE           equ	144	;# 
   582     0091                     PIE1            equ	145	;# 
   583     0092                     PIE2            equ	146	;# 
   584     0094                     PIE4            equ	148	;# 
   585     0095                     OPTION_REG      equ	149	;# 
   586     0096                     PCON            equ	150	;# 
   587     0097                     WDTCON          equ	151	;# 
   588     0098                     OSCTUNE         equ	152	;# 
   589     0099                     OSCCON          equ	153	;# 
   590     009A                     OSCSTAT         equ	154	;# 
   591     009B                     ADRES           equ	155	;# 
   592     009B                     ADRESL          equ	155	;# 
   593     009C                     ADRESH          equ	156	;# 
   594     009D                     ADCON0          equ	157	;# 
   595     009E                     ADCON1          equ	158	;# 
   596     009F                     ADCON2          equ	159	;# 
   597     010C                     LATA            equ	268	;# 
   598     010D                     LATB            equ	269	;# 
   599     010E                     LATC            equ	270	;# 
   600     0111                     CM1CON0         equ	273	;# 
   601     0112                     CM1CON1         equ	274	;# 
   602     0113                     CM2CON0         equ	275	;# 
   603     0114                     CM2CON1         equ	276	;# 
   604     0115                     CMOUT           equ	277	;# 
   605     0116                     BORCON          equ	278	;# 
   606     0117                     FVRCON          equ	279	;# 
   607     0118                     DACCON0         equ	280	;# 
   608     0119                     DACCON1         equ	281	;# 
   609     011D                     APFCON          equ	285	;# 
   610     011D                     APFCON0         equ	285	;# 
   611     011E                     CM3CON0         equ	286	;# 
   612     011F                     CM3CON1         equ	287	;# 
   613     018C                     ANSELA          equ	396	;# 
   614     018D                     ANSELB          equ	397	;# 
   615     0191                     EEADR           equ	401	;# 
   616     0191                     EEADRL          equ	401	;# 
   617     0192                     EEADRH          equ	402	;# 
   618     0193                     EEDAT           equ	403	;# 
   619     0193                     EEDATL          equ	403	;# 
   620     0193                     EEDATA          equ	403	;# 
   621     0194                     EEDATH          equ	404	;# 
   622     0195                     EECON1          equ	405	;# 
   623     0196                     EECON2          equ	406	;# 
   624     0197                     VREGCON         equ	407	;# 
   625     0199                     RC1REG          equ	409	;# 
   626     0199                     RCREG           equ	409	;# 
   627     0199                     RCREG1          equ	409	;# 
   628     019A                     TX1REG          equ	410	;# 
   629     019A                     TXREG1          equ	410	;# 
   630     019A                     TXREG           equ	410	;# 
   631     019B                     SP1BRG          equ	411	;# 
   632     019B                     SPBRG           equ	411	;# 
   633     019B                     SP1BRGL         equ	411	;# 
   634     019B                     SPBRG1          equ	411	;# 
   635     019B                     SPBRGL          equ	411	;# 
   636     019C                     SP1BRGH         equ	412	;# 
   637     019C                     SPBRGH          equ	412	;# 
   638     019C                     SPBRGH1         equ	412	;# 
   639     019D                     RC1STA          equ	413	;# 
   640     019D                     RCSTA1          equ	413	;# 
   641     019D                     RCSTA           equ	413	;# 
   642     019E                     TX1STA          equ	414	;# 
   643     019E                     TXSTA1          equ	414	;# 
   644     019E                     TXSTA           equ	414	;# 
   645     019F                     BAUD1CON        equ	415	;# 
   646     019F                     BAUDCON1        equ	415	;# 
   647     019F                     BAUDCTL1        equ	415	;# 
   648     019F                     BAUDCON         equ	415	;# 
   649     019F                     BAUDCTL         equ	415	;# 
   650     020C                     WPUA            equ	524	;# 
   651     020D                     WPUB            equ	525	;# 
   652     020E                     WPUC            equ	526	;# 
   653     0210                     WPUE            equ	528	;# 
   654     0211                     SSPBUF          equ	529	;# 
   655     0211                     SSP1BUF         equ	529	;# 
   656     0212                     SSPADD          equ	530	;# 
   657     0212                     SSP1ADD         equ	530	;# 
   658     0213                     SSPMSK          equ	531	;# 
   659     0213                     SSP1MSK         equ	531	;# 
   660     0214                     SSPSTAT         equ	532	;# 
   661     0214                     SSP1STAT        equ	532	;# 
   662     0215                     SSPCON1         equ	533	;# 
   663     0215                     SSP1CON         equ	533	;# 
   664     0215                     SSPCON          equ	533	;# 
   665     0216                     SSPCON2         equ	534	;# 
   666     0216                     SSP1CON2        equ	534	;# 
   667     0217                     SSPCON3         equ	535	;# 
   668     0217                     SSP1CON3        equ	535	;# 
   669     028C                     ODCONA          equ	652	;# 
   670     028D                     ODCONB          equ	653	;# 
   671     028E                     ODCONC          equ	654	;# 
   672     0291                     CCPR1           equ	657	;# 
   673     0291                     CCPR1L          equ	657	;# 
   674     0292                     CCPR1H          equ	658	;# 
   675     0293                     CCP1CON         equ	659	;# 
   676     0298                     CCPR2           equ	664	;# 
   677     0298                     CCPR2L          equ	664	;# 
   678     0299                     CCPR2H          equ	665	;# 
   679     029A                     CCP2CON         equ	666	;# 
   680     030C                     SLRCONA         equ	780	;# 
   681     030D                     SLRCONB         equ	781	;# 
   682     030E                     SLRCONC         equ	782	;# 
   683     038C                     INLVLA          equ	908	;# 
   684     038D                     INLVLB          equ	909	;# 
   685     038E                     INLVLC          equ	910	;# 
   686     0390                     INLVLE          equ	912	;# 
   687     0391                     IOCAP           equ	913	;# 
   688     0392                     IOCAN           equ	914	;# 
   689     0393                     IOCAF           equ	915	;# 
   690     0394                     IOCBP           equ	916	;# 
   691     0395                     IOCBN           equ	917	;# 
   692     0396                     IOCBF           equ	918	;# 
   693     0397                     IOCCP           equ	919	;# 
   694     0398                     IOCCN           equ	920	;# 
   695     0399                     IOCCF           equ	921	;# 
   696     039D                     IOCEP           equ	925	;# 
   697     039E                     IOCEN           equ	926	;# 
   698     039F                     IOCEF           equ	927	;# 
   699     0511                     OPA1CON         equ	1297	;# 
   700     0513                     OPA2CON         equ	1299	;# 
   701     051A                     CLKRCON         equ	1306	;# 
   702     0811                     PSMC1CON        equ	2065	;# 
   703     0812                     PSMC1MDL        equ	2066	;# 
   704     0813                     PSMC1SYNC       equ	2067	;# 
   705     0814                     PSMC1CLK        equ	2068	;# 
   706     0815                     PSMC1OEN        equ	2069	;# 
   707     0816                     PSMC1POL        equ	2070	;# 
   708     0817                     PSMC1BLNK       equ	2071	;# 
   709     0818                     PSMC1REBS       equ	2072	;# 
   710     0819                     PSMC1FEBS       equ	2073	;# 
   711     081A                     PSMC1PHS        equ	2074	;# 
   712     081B                     PSMC1DCS        equ	2075	;# 
   713     081C                     PSMC1PRS        equ	2076	;# 
   714     081D                     PSMC1ASDC       equ	2077	;# 
   715     081E                     PSMC1ASDL       equ	2078	;# 
   716     081F                     PSMC1ASDS       equ	2079	;# 
   717     0820                     PSMC1INT        equ	2080	;# 
   718     0821                     PSMC1PH         equ	2081	;# 
   719     0821                     PSMC1PHL        equ	2081	;# 
   720     0822                     PSMC1PHH        equ	2082	;# 
   721     0823                     PSMC1DC         equ	2083	;# 
   722     0823                     PSMC1DCL        equ	2083	;# 
   723     0824                     PSMC1DCH        equ	2084	;# 
   724     0825                     PSMC1PR         equ	2085	;# 
   725     0825                     PSMC1PRL        equ	2085	;# 
   726     0826                     PSMC1PRH        equ	2086	;# 
   727     0827                     PSMC1TMR        equ	2087	;# 
   728     0827                     PSMC1TMRL       equ	2087	;# 
   729     0828                     PSMC1TMRH       equ	2088	;# 
   730     0829                     PSMC1DBR        equ	2089	;# 
   731     082A                     PSMC1DBF        equ	2090	;# 
   732     082B                     PSMC1BLKR       equ	2091	;# 
   733     082C                     PSMC1BLKF       equ	2092	;# 
   734     082D                     PSMC1FFA        equ	2093	;# 
   735     082E                     PSMC1STR0       equ	2094	;# 
   736     082F                     PSMC1STR1       equ	2095	;# 
   737     0831                     PSMC2CON        equ	2097	;# 
   738     0832                     PSMC2MDL        equ	2098	;# 
   739     0833                     PSMC2SYNC       equ	2099	;# 
   740     0834                     PSMC2CLK        equ	2100	;# 
   741     0835                     PSMC2OEN        equ	2101	;# 
   742     0836                     PSMC2POL        equ	2102	;# 
   743     0837                     PSMC2BLNK       equ	2103	;# 
   744     0838                     PSMC2REBS       equ	2104	;# 
   745     0839                     PSMC2FEBS       equ	2105	;# 
   746     083A                     PSMC2PHS        equ	2106	;# 
   747     083B                     PSMC2DCS        equ	2107	;# 
   748     083C                     PSMC2PRS        equ	2108	;# 
   749     083D                     PSMC2ASDC       equ	2109	;# 
   750     083E                     PSMC2ASDL       equ	2110	;# 
   751     083F                     PSMC2ASDS       equ	2111	;# 
   752     0840                     PSMC2INT        equ	2112	;# 
   753     0841                     PSMC2PH         equ	2113	;# 
   754     0841                     PSMC2PHL        equ	2113	;# 
   755     0842                     PSMC2PHH        equ	2114	;# 
   756     0843                     PSMC2DC         equ	2115	;# 
   757     0843                     PSMC2DCL        equ	2115	;# 
   758     0844                     PSMC2DCH        equ	2116	;# 
   759     0845                     PSMC2PR         equ	2117	;# 
   760     0845                     PSMC2PRL        equ	2117	;# 
   761     0846                     PSMC2PRH        equ	2118	;# 
   762     0847                     PSMC2TMR        equ	2119	;# 
   763     0847                     PSMC2TMRL       equ	2119	;# 
   764     0848                     PSMC2TMRH       equ	2120	;# 
   765     0849                     PSMC2DBR        equ	2121	;# 
   766     084A                     PSMC2DBF        equ	2122	;# 
   767     084B                     PSMC2BLKR       equ	2123	;# 
   768     084C                     PSMC2BLKF       equ	2124	;# 
   769     084D                     PSMC2FFA        equ	2125	;# 
   770     084E                     PSMC2STR0       equ	2126	;# 
   771     084F                     PSMC2STR1       equ	2127	;# 
   772     0FE4                     STATUS_SHAD     equ	4068	;# 
   773     0FE5                     WREG_SHAD       equ	4069	;# 
   774     0FE6                     BSR_SHAD        equ	4070	;# 
   775     0FE7                     PCLATH_SHAD     equ	4071	;# 
   776     0FE8                     FSR0L_SHAD      equ	4072	;# 
   777     0FE9                     FSR0H_SHAD      equ	4073	;# 
   778     0FEA                     FSR1L_SHAD      equ	4074	;# 
   779     0FEB                     FSR1H_SHAD      equ	4075	;# 
   780     0FED                     STKPTR          equ	4077	;# 
   781     0FEE                     TOSL            equ	4078	;# 
   782     0FEF                     TOSH            equ	4079	;# 
   783     000E                     _PORTCbits      set	14
   784     000C                     _PORTAbits      set	12
   785     008C                     _TRISAbits      set	140
   786     008E                     _TRISCbits      set	142
   787     008D                     _TRISBbits      set	141
   788     010E                     _LATCbits       set	270
   789     010D                     _LATBbits       set	269
   790     018C                     _ANSELAbits     set	396
   791     018D                     _ANSELBbits     set	397
   792                           
   793                           	psect	stringtext1
   794     0800                     __pstringtext1:
   795     0800                     STR_1:
   796     0800  3452               	retlw	82	;'R'
   797     0801  346F               	retlw	111	;'o'
   798     0802  3474               	retlw	116	;'t'
   799     0803  3461               	retlw	97	;'a'
   800     0804  3472               	retlw	114	;'r'
   801     0805  3479               	retlw	121	;'y'
   802     0806  3420               	retlw	32	;' '
   803     0807  3445               	retlw	69	;'E'
   804     0808  346E               	retlw	110	;'n'
   805     0809  3463               	retlw	99	;'c'
   806     080A  346F               	retlw	111	;'o'
   807     080B  3464               	retlw	100	;'d'
   808     080C  3465               	retlw	101	;'e'
   809     080D  3472               	retlw	114	;'r'
   810     080E  3400               	retlw	0
   811                           
   812                           	psect	stringtext2
   813     080F                     __pstringtext2:
   814     080F                     STR_3:
   815     080F  3443               	retlw	67	;'C'
   816     0810  3457               	retlw	87	;'W'
   817     0811  3420               	retlw	32	;' '
   818     0812  3400               	retlw	0
   819                           
   820                           	psect	stringtext3
   821     0813                     __pstringtext3:
   822     0813                     STR_4:
   823     0813  3443               	retlw	67	;'C'
   824     0814  3443               	retlw	67	;'C'
   825     0815  3457               	retlw	87	;'W'
   826     0816  3400               	retlw	0
   827                           
   828                           	psect	stringtext4
   829     0817                     __pstringtext4:
   830     0817                     STR_2:
   831     0817  3444               	retlw	68	;'D'
   832     0818  3469               	retlw	105	;'i'
   833     0819  3472               	retlw	114	;'r'
   834     081A  3400               	retlw	0
   835                           
   836                           	psect	stringtext5
   837     0000                     __pstringtext5:
   838                           
   839                           	psect	cinit
   840     07FD                     start_initialization:	
   841                           ; #config settings
   842                           
   843     07FD                     __initialization:
   844     07FD                     end_of_initialization:	
   845                           ;End of C runtime variable initialization code
   846                           
   847     07FD                     __end_of__initialization:
   848     07FD  0020               	movlb	0
   849     07FE  3184  2C01         	ljmp	_main	;jump to C main() function
   850                           
   851                           	psect	cstackCOMMON
   852     0070                     __pcstackCOMMON:
   853     0070                     ?_programInitialize:
   854     0070                     ?_programLoop:	
   855                           ; 1 bytes @ 0x0
   856                           
   857     0070                     ?_lcd_Initialize:	
   858                           ; 1 bytes @ 0x0
   859                           
   860     0070                     ?_pb_DelayDebounce:	
   861                           ; 1 bytes @ 0x0
   862                           
   863     0070                     ?_memset:	
   864                           ; 1 bytes @ 0x0
   865                           
   866     0070                     ?_main:	
   867                           ; 1 bytes @ 0x0
   868                           
   869     0070                     ?_delay_x1o5us:	
   870                           ; 1 bytes @ 0x0
   871                           
   872     0070                     ?_lcd_DelaySetupTime:	
   873                           ; 1 bytes @ 0x0
   874                           
   875     0070                     ?_lcd_DelayPulse:	
   876                           ; 1 bytes @ 0x0
   877                           
   878     0070                     ?_lcd_EPulse:	
   879                           ; 1 bytes @ 0x0
   880                           
   881     0070                     ?_lcd_WriteData:	
   882                           ; 1 bytes @ 0x0
   883                           
   884     0070                     ?_lcd_PrintCmd:	
   885                           ; 1 bytes @ 0x0
   886                           
   887     0070                     ?_lcd_PrintChar:	
   888                           ; 1 bytes @ 0x0
   889                           
   890     0070                     ?___bmul:	
   891                           ; 1 bytes @ 0x0
   892                           
   893     0070                     ?_labs:	
   894                           ; 1 bytes @ 0x0
   895                           
   896     0070                     ?___aldiv:	
   897                           ; 4 bytes @ 0x0
   898                           
   899     0070                     delay_x1o5us@delay:	
   900                           ; 4 bytes @ 0x0
   901                           
   902     0070                     ___bmul@multiplicand:	
   903                           ; 1 bytes @ 0x0
   904                           
   905     0070                     memset@dest:	
   906                           ; 1 bytes @ 0x0
   907                           
   908     0070                     ___aldiv@divisor:	
   909                           ; 1 bytes @ 0x0
   910                           
   911     0070                     labs@a:	
   912                           ; 4 bytes @ 0x0
   913                           
   914     0070                     ??_delay_x1o5us:	
   915                           ; 4 bytes @ 0x0
   916                           
   917                           
   918                           ; 1 bytes @ 0x0
   919     0070                     	ds	1
   920     0071                     delay_x1o5us@i:
   921     0071                     ___bmul@product:	
   922                           ; 1 bytes @ 0x1
   923                           
   924     0071                     memset@c:	
   925                           ; 1 bytes @ 0x1
   926                           
   927     0071                     ??___bmul:	
   928                           ; 2 bytes @ 0x1
   929                           
   930                           
   931                           ; 1 bytes @ 0x1
   932     0071                     	ds	1
   933     0072                     ?_delay_x24o25us:
   934     0072                     ___bmul@multiplier:	
   935                           ; 1 bytes @ 0x2
   936                           
   937     0072                     delay_x24o25us@delay:	
   938                           ; 1 bytes @ 0x2
   939                           
   940     0072                     ??_lcd_DelaySetupTime:	
   941                           ; 2 bytes @ 0x2
   942                           
   943     0072                     ??_lcd_DelayPulse:	
   944                           ; 1 bytes @ 0x2
   945                           
   946     0072                     ??_lcd_EPulse:	
   947                           ; 1 bytes @ 0x2
   948                           
   949     0072                     ??_lcd_WriteData:	
   950                           ; 1 bytes @ 0x2
   951                           
   952                           
   953                           ; 1 bytes @ 0x2
   954     0072                     	ds	1
   955     0073                     memset@n:
   956                           
   957                           ; 2 bytes @ 0x3
   958     0073                     	ds	1
   959     0074                     lcd_WriteData@data:
   960     0074                     delay_x24o25us@i:	
   961                           ; 1 bytes @ 0x4
   962                           
   963     0074                     ___aldiv@dividend:	
   964                           ; 2 bytes @ 0x4
   965                           
   966     0074                     ??_labs:	
   967                           ; 4 bytes @ 0x4
   968                           
   969     0074                     ??_delay_x24o25us:	
   970                           ; 1 bytes @ 0x4
   971                           
   972                           
   973                           ; 1 bytes @ 0x4
   974     0074                     	ds	1
   975     0075                     lcd_PrintCmd@command:
   976     0075                     lcd_PrintChar@character:	
   977                           ; 1 bytes @ 0x5
   978                           
   979     0075                     memset@p:	
   980                           ; 1 bytes @ 0x5
   981                           
   982     0075                     ??_memset:	
   983                           ; 1 bytes @ 0x5
   984                           
   985     0075                     ??_lcd_PrintCmd:	
   986                           ; 1 bytes @ 0x5
   987                           
   988     0075                     ??_lcd_PrintChar:	
   989                           ; 1 bytes @ 0x5
   990                           
   991                           
   992                           ; 1 bytes @ 0x5
   993     0075                     	ds	1
   994     0076                     ?_lcd_Goto:
   995     0076                     ?_lcd_PrintString:	
   996                           ; 1 bytes @ 0x6
   997                           
   998     0076                     ?_delay_ms:	
   999                           ; 1 bytes @ 0x6
  1000                           
  1001     0076                     lcd_Goto@x:	
  1002                           ; 1 bytes @ 0x6
  1003                           
  1004     0076                     lcd_PrintString@string:	
  1005                           ; 1 bytes @ 0x6
  1006                           
  1007     0076                     delay_ms@delay:	
  1008                           ; 2 bytes @ 0x6
  1009                           
  1010                           
  1011                           ; 4 bytes @ 0x6
  1012     0076                     	ds	1
  1013     0077                     lcd_Goto@y:
  1014     0077                     ??_lcd_Goto:	
  1015                           ; 1 bytes @ 0x7
  1016                           
  1017                           
  1018                           ; 1 bytes @ 0x7
  1019     0077                     	ds	1
  1020     0078                     ___aldiv@counter:
  1021     0078                     ??_lcd_PrintString:	
  1022                           ; 1 bytes @ 0x8
  1023                           
  1024     0078                     ??___aldiv:	
  1025                           ; 1 bytes @ 0x8
  1026                           
  1027                           
  1028                           ; 1 bytes @ 0x8
  1029     0078                     	ds	1
  1030     0079                     ___aldiv@sign:
  1031                           
  1032                           ; 1 bytes @ 0x9
  1033     0079                     	ds	1
  1034     007A                     delay_ms@i:
  1035     007A                     ___aldiv@quotient:	
  1036                           ; 4 bytes @ 0xA
  1037                           
  1038     007A                     ??_delay_ms:	
  1039                           ; 4 bytes @ 0xA
  1040                           
  1041                           
  1042                           ; 1 bytes @ 0xA
  1043     007A                     	ds	4
  1044     007E                     ??_programInitialize:
  1045     007E                     ??_lcd_Initialize:	
  1046                           ; 1 bytes @ 0xE
  1047                           
  1048     007E                     ??_pb_DelayDebounce:	
  1049                           ; 1 bytes @ 0xE
  1050                           
  1051     007E                     ??_main:	
  1052                           ; 1 bytes @ 0xE
  1053                           
  1054                           
  1055                           	psect	cstackBANK0
  1056     0020                     __pcstackBANK0:	
  1057                           ; 1 bytes @ 0xE
  1058                           
  1059     0020                     ?_lcd_PrintDigitInt32:
  1060     0020                     lcd_PrintDigitInt32@number:	
  1061                           ; 1 bytes @ 0x0
  1062                           
  1063                           
  1064                           ; 4 bytes @ 0x0
  1065     0020                     	ds	4
  1066     0024                     lcd_PrintDigitInt32@noDigit:
  1067                           
  1068                           ; 1 bytes @ 0x4
  1069     0024                     	ds	1
  1070     0025                     lcd_PrintDigitInt32@enSign:
  1071                           
  1072                           ; 1 bytes @ 0x5
  1073     0025                     	ds	1
  1074     0026                     lcd_PrintDigitInt32@enZero:
  1075                           
  1076                           ; 1 bytes @ 0x6
  1077     0026                     	ds	1
  1078     0027                     ??_lcd_PrintDigitInt32:
  1079                           
  1080                           ; 1 bytes @ 0x7
  1081     0027                     	ds	4
  1082     002B                     lcd_PrintDigitInt32@numberRevChar:
  1083                           
  1084                           ; 11 bytes @ 0xB
  1085     002B                     	ds	11
  1086     0036                     lcd_PrintDigitInt32@numberChar:
  1087                           
  1088                           ; 11 bytes @ 0x16
  1089     0036                     	ds	11
  1090     0041                     lcd_PrintDigitInt32@tempN:
  1091                           
  1092                           ; 4 bytes @ 0x21
  1093     0041                     	ds	4
  1094     0045                     lcd_PrintDigitInt32@tempC:
  1095                           
  1096                           ; 1 bytes @ 0x25
  1097     0045                     	ds	1
  1098     0046                     lcd_PrintDigitInt32@i2:
  1099                           
  1100                           ; 1 bytes @ 0x26
  1101     0046                     	ds	1
  1102     0047                     lcd_PrintDigitInt32@totalDigit:
  1103                           
  1104                           ; 1 bytes @ 0x27
  1105     0047                     	ds	1
  1106     0048                     lcd_PrintDigitInt32@i1:
  1107                           
  1108                           ; 1 bytes @ 0x28
  1109     0048                     	ds	1
  1110     0049                     ??_programLoop:
  1111                           
  1112                           ; 1 bytes @ 0x29
  1113     0049                     	ds	2
  1114     004B                     programLoop@encoderData:
  1115                           
  1116                           ; 1 bytes @ 0x2B
  1117     004B                     	ds	1
  1118     004C                     programLoop@counter:
  1119                           
  1120                           ; 2 bytes @ 0x2C
  1121     004C                     	ds	2
  1122                           
  1123                           	psect	maintext
  1124     0401                     __pmaintext:	
  1125 ;;
  1126 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1127 ;;
  1128 ;; *************** function _main *****************
  1129 ;; Defined at:
  1130 ;;		line 26 in file "main.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : B1F/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1144 ;;      Params:         0       0       0       0       0       0       0
  1145 ;;      Locals:         0       0       0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0
  1147 ;;      Totals:         0       0       0       0       0       0       0
  1148 ;;Total ram usage:        0 bytes
  1149 ;; Hardware stack levels required when called: 8
  1150 ;; This function calls:
  1151 ;;		_programInitialize
  1152 ;;		_programLoop
  1153 ;; This function is called by:
  1154 ;;		Startup code after reset
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158     0401                     _main:	
  1159                           ;psect for function _main
  1160                           
  1161     0401                     l1354:	
  1162                           ;incstack = 0
  1163                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1164                           
  1165                           
  1166                           ;main.c: 27:     programInitialize();
  1167     0401  3184  24CD  3184   	fcall	_programInitialize
  1168     0404                     l1356:
  1169                           
  1170                           ;main.c: 30:         programLoop();
  1171     0404  3186  2660  3184   	fcall	_programLoop
  1172     0407  2C04               	goto	l1356
  1173     0408  3180  2802         	ljmp	start
  1174     040A                     __end_of_main:
  1175                           
  1176                           	psect	text1
  1177     0660                     __ptext1:	
  1178 ;; *************** function _programLoop *****************
  1179 ;; Defined at:
  1180 ;;		line 56 in file "program.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;  counter         2   44[BANK0 ] unsigned short 
  1185 ;;  encoderData     1   43[BANK0 ] unsigned char 
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1195 ;;      Params:         0       0       0       0       0       0       0
  1196 ;;      Locals:         0       3       0       0       0       0       0
  1197 ;;      Temps:          0       2       0       0       0       0       0
  1198 ;;      Totals:         0       5       0       0       0       0       0
  1199 ;;Total ram usage:        5 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; Hardware stack levels required when called: 7
  1202 ;; This function calls:
  1203 ;;		_delay_ms
  1204 ;;		_lcd_Goto
  1205 ;;		_lcd_PrintDigitInt32
  1206 ;;		_lcd_PrintString
  1207 ;;		_pb_DelayDebounce
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213     0660                     _programLoop:	
  1214                           ;psect for function _programLoop
  1215                           
  1216     0660                     l1298:	
  1217                           ;incstack = 0
  1218                           ; Regs used in _programLoop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1219                           
  1220                           
  1221                           ;program.c: 58:     uint16_t counter = 0;
  1222     0660  0020               	movlb	0	; select bank0
  1223     0661  01CC               	clrf	programLoop@counter
  1224     0662  01CD               	clrf	programLoop@counter+1
  1225     0663                     l1300:
  1226                           
  1227                           ;program.c: 60:     lcd_Goto(0, 0);
  1228     0663  01F6               	clrf	lcd_Goto@x
  1229     0664  3000               	movlw	0
  1230     0665  3184  24B0  3186   	fcall	_lcd_Goto
  1231     0668                     l1302:
  1232                           
  1233                           ;program.c: 61:     lcd_PrintString("Rotary Encoder");
  1234     0668  3000               	movlw	low (STR_1| (0+32768))
  1235     0669  00F6               	movwf	lcd_PrintString@string
  1236     066A  3088               	movlw	high (STR_1| (0+32768))
  1237     066B  00F7               	movwf	lcd_PrintString@string+1
  1238     066C  3184  2482  3186   	fcall	_lcd_PrintString
  1239     066F                     l1304:
  1240                           
  1241                           ;program.c: 63:     lcd_Goto(1, 0);
  1242     066F  01F6               	clrf	lcd_Goto@x
  1243     0670  3001               	movlw	1
  1244     0671  3184  24B0  3186   	fcall	_lcd_Goto
  1245     0674                     l1306:
  1246                           
  1247                           ;program.c: 64:     lcd_PrintDigitInt32(0, 5, 0, 1);
  1248     0674  3000               	movlw	0
  1249     0675  0020               	movlb	0	; select bank0
  1250     0676  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1251     0677  3000               	movlw	0
  1252     0678  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1253     0679  3000               	movlw	0
  1254     067A  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1255     067B  3000               	movlw	0
  1256     067C  00A0               	movwf	lcd_PrintDigitInt32@number
  1257     067D  3005               	movlw	5
  1258     067E  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1259     067F  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1260     0680  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1261     0681  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1262     0682  3187  2729  3186   	fcall	_lcd_PrintDigitInt32
  1263     0685                     l1308:
  1264                           
  1265                           ;program.c: 66:     lcd_Goto(1, 6);
  1266     0685  3006               	movlw	6
  1267     0686  00F6               	movwf	lcd_Goto@x
  1268     0687  3001               	movlw	1
  1269     0688  3184  24B0  3186   	fcall	_lcd_Goto
  1270     068B                     l1310:
  1271                           
  1272                           ;program.c: 67:     lcd_PrintString("Dir");
  1273     068B  3017               	movlw	low (STR_2| (0+32768))
  1274     068C  00F6               	movwf	lcd_PrintString@string
  1275     068D  3088               	movlw	high (STR_2| (0+32768))
  1276     068E  00F7               	movwf	lcd_PrintString@string+1
  1277     068F  3184  2482  3186   	fcall	_lcd_PrintString
  1278     0692                     l1312:
  1279                           
  1280                           ;program.c: 70:         if(!PORTAbits.RA5) {
  1281     0692  0020               	movlb	0	; select bank0
  1282     0693  1A8C               	btfsc	12,5	;volatile
  1283     0694  2E96               	goto	u751
  1284     0695  2E97               	goto	u750
  1285     0696                     u751:
  1286     0696  2E9D               	goto	l71
  1287     0697                     u750:
  1288     0697                     l1314:
  1289                           
  1290                           ;program.c: 71:             LATBbits.LATB7 = 1;
  1291     0697  0022               	movlb	2	; select bank2
  1292     0698  178D               	bsf	13,7	;volatile
  1293     0699                     l1316:
  1294                           
  1295                           ;program.c: 72:             pb_DelayDebounce();
  1296     0699  3184  242B  3186   	fcall	_pb_DelayDebounce
  1297                           
  1298                           ;program.c: 73:         } else {
  1299     069C  2E9F               	goto	l1318
  1300     069D                     l71:
  1301                           
  1302                           ;program.c: 74:             LATBbits.LATB7 = 0;
  1303     069D  0022               	movlb	2	; select bank2
  1304     069E  138D               	bcf	13,7	;volatile
  1305     069F                     l1318:
  1306                           
  1307                           ;program.c: 77:         encoderData = ((PORTCbits.RC0<<1) | PORTCbits.RC2) & 0x03;
  1308     069F  0020               	movlb	0	; select bank0
  1309     06A0  0C0E               	rrf	14,w	;volatile
  1310     06A1  0C89               	rrf	9,f
  1311     06A2  3901               	andlw	1
  1312     06A3  00C9               	movwf	??_programLoop
  1313     06A4  080E               	movf	14,w	;volatile
  1314     06A5  3901               	andlw	1
  1315     06A6  00CA               	movwf	??_programLoop+1
  1316     06A7  3001               	movlw	1
  1317     06A8                     u765:
  1318     06A8  35CA               	lslf	??_programLoop+1,f
  1319     06A9  0B89               	decfsz	9,f
  1320     06AA  2EA8               	goto	u765
  1321     06AB  084A               	movf	??_programLoop+1,w
  1322     06AC  0449               	iorwf	??_programLoop,w
  1323     06AD  3903               	andlw	3
  1324     06AE  00CB               	movwf	programLoop@encoderData
  1325                           
  1326                           ;program.c: 79:         if(encoderData==0x03) {
  1327     06AF  3003               	movlw	3
  1328     06B0  064B               	xorwf	programLoop@encoderData,w
  1329     06B1  1D03               	btfss	3,2
  1330     06B2  2EB4               	goto	u771
  1331     06B3  2EB5               	goto	u770
  1332     06B4                     u771:
  1333     06B4  2EB6               	goto	l1322
  1334     06B5                     u770:
  1335     06B5  2E92               	goto	l1312
  1336     06B6                     l1322:
  1337     06B6  3002               	movlw	2
  1338     06B7  064B               	xorwf	programLoop@encoderData,w
  1339     06B8  1D03               	btfss	3,2
  1340     06B9  2EBB               	goto	u781
  1341     06BA  2EBC               	goto	u780
  1342     06BB                     u781:
  1343     06BB  2EF6               	goto	l1338
  1344     06BC                     u780:
  1345     06BC                     l1324:
  1346                           
  1347                           ;program.c: 84:             if(counter<60000) counter++;
  1348     06BC  30EA               	movlw	234
  1349     06BD  024D               	subwf	programLoop@counter+1,w
  1350     06BE  3060               	movlw	96
  1351     06BF  1903               	skipnz
  1352     06C0  024C               	subwf	programLoop@counter,w
  1353     06C1  1803               	skipnc
  1354     06C2  2EC4               	goto	u791
  1355     06C3  2EC5               	goto	u790
  1356     06C4                     u791:
  1357     06C4  2EC9               	goto	l1328
  1358     06C5                     u790:
  1359     06C5                     l1326:
  1360     06C5  3001               	movlw	1
  1361     06C6  07CC               	addwf	programLoop@counter,f
  1362     06C7  3000               	movlw	0
  1363     06C8  3DCD               	addwfc	programLoop@counter+1,f
  1364     06C9                     l1328:
  1365                           
  1366                           ;program.c: 86:             lcd_Goto(1, 0);
  1367     06C9  01F6               	clrf	lcd_Goto@x
  1368     06CA  3001               	movlw	1
  1369     06CB  3184  24B0  3186   	fcall	_lcd_Goto
  1370     06CE                     l1330:
  1371                           
  1372                           ;program.c: 87:             lcd_PrintDigitInt32(counter, 5, 0, 1);
  1373     06CE  0020               	movlb	0	; select bank0
  1374     06CF  084C               	movf	programLoop@counter,w
  1375     06D0  00A0               	movwf	lcd_PrintDigitInt32@number
  1376     06D1  084D               	movf	programLoop@counter+1,w
  1377     06D2  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1378     06D3  01A2               	clrf	lcd_PrintDigitInt32@number+2
  1379     06D4  01A3               	clrf	lcd_PrintDigitInt32@number+3
  1380     06D5  3005               	movlw	5
  1381     06D6  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1382     06D7  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1383     06D8  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1384     06D9  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1385     06DA  3187  2729  3186   	fcall	_lcd_PrintDigitInt32
  1386     06DD                     l1332:
  1387                           
  1388                           ;program.c: 89:             lcd_Goto(1, 6);
  1389     06DD  3006               	movlw	6
  1390     06DE  00F6               	movwf	lcd_Goto@x
  1391     06DF  3001               	movlw	1
  1392     06E0  3184  24B0  3186   	fcall	_lcd_Goto
  1393     06E3                     l1334:
  1394                           
  1395                           ;program.c: 90:             lcd_PrintString("CW ");
  1396     06E3  300F               	movlw	low (STR_3| (0+32768))
  1397     06E4  00F6               	movwf	lcd_PrintString@string
  1398     06E5  3088               	movlw	high (STR_3| (0+32768))
  1399     06E6  00F7               	movwf	lcd_PrintString@string+1
  1400     06E7  3184  2482  3186   	fcall	_lcd_PrintString
  1401     06EA                     l1336:
  1402                           
  1403                           ;program.c: 92:             delay_ms(50);
  1404     06EA  3000               	movlw	0
  1405     06EB  00F9               	movwf	delay_ms@delay+3
  1406     06EC  3000               	movlw	0
  1407     06ED  00F8               	movwf	delay_ms@delay+2
  1408     06EE  3000               	movlw	0
  1409     06EF  00F7               	movwf	delay_ms@delay+1
  1410     06F0  3032               	movlw	50
  1411     06F1  00F6               	movwf	delay_ms@delay
  1412     06F2  3184  24F1  3186   	fcall	_delay_ms
  1413                           
  1414                           ;program.c: 93:         }
  1415     06F5  2E92               	goto	l1312
  1416     06F6                     l1338:
  1417     06F6  034B               	decf	programLoop@encoderData,w
  1418     06F7  1D03               	btfss	3,2
  1419     06F8  2EFA               	goto	u801
  1420     06F9  2EFB               	goto	u800
  1421     06FA                     u801:
  1422     06FA  2F27               	goto	l74
  1423     06FB                     u800:
  1424     06FB                     l1340:
  1425                           
  1426                           ;program.c: 96:             if(counter>0) counter--;
  1427     06FB  084C               	movf	programLoop@counter,w
  1428     06FC  044D               	iorwf	programLoop@counter+1,w
  1429     06FD  1903               	btfsc	3,2
  1430     06FE  2F00               	goto	u811
  1431     06FF  2F01               	goto	u810
  1432     0700                     u811:
  1433     0700  2F05               	goto	l1344
  1434     0701                     u810:
  1435     0701                     l1342:
  1436     0701  3001               	movlw	1
  1437     0702  02CC               	subwf	programLoop@counter,f
  1438     0703  3000               	movlw	0
  1439     0704  3BCD               	subwfb	programLoop@counter+1,f
  1440     0705                     l1344:
  1441                           
  1442                           ;program.c: 98:             lcd_Goto(1, 0);
  1443     0705  01F6               	clrf	lcd_Goto@x
  1444     0706  3001               	movlw	1
  1445     0707  3184  24B0  3186   	fcall	_lcd_Goto
  1446     070A                     l1346:
  1447                           
  1448                           ;program.c: 99:             lcd_PrintDigitInt32(counter, 5, 0, 1);
  1449     070A  0020               	movlb	0	; select bank0
  1450     070B  084C               	movf	programLoop@counter,w
  1451     070C  00A0               	movwf	lcd_PrintDigitInt32@number
  1452     070D  084D               	movf	programLoop@counter+1,w
  1453     070E  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1454     070F  01A2               	clrf	lcd_PrintDigitInt32@number+2
  1455     0710  01A3               	clrf	lcd_PrintDigitInt32@number+3
  1456     0711  3005               	movlw	5
  1457     0712  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1458     0713  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1459     0714  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1460     0715  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1461     0716  3187  2729  3186   	fcall	_lcd_PrintDigitInt32
  1462     0719                     l1348:
  1463                           
  1464                           ;program.c: 101:             lcd_Goto(1, 6);
  1465     0719  3006               	movlw	6
  1466     071A  00F6               	movwf	lcd_Goto@x
  1467     071B  3001               	movlw	1
  1468     071C  3184  24B0  3186   	fcall	_lcd_Goto
  1469     071F                     l1350:
  1470                           
  1471                           ;program.c: 102:             lcd_PrintString("CCW");
  1472     071F  3013               	movlw	low (STR_4| (0+32768))
  1473     0720  00F6               	movwf	lcd_PrintString@string
  1474     0721  3088               	movlw	high (STR_4| (0+32768))
  1475     0722  00F7               	movwf	lcd_PrintString@string+1
  1476     0723  3184  2482  3186   	fcall	_lcd_PrintString
  1477     0726  2EEA               	goto	l1336
  1478     0727                     l74:
  1479     0727  2E92               	goto	l1312
  1480     0728  0008               	return
  1481     0729                     __end_of_programLoop:
  1482                           
  1483                           	psect	text2
  1484     042B                     __ptext2:	
  1485 ;; *************** function _pb_DelayDebounce *****************
  1486 ;; Defined at:
  1487 ;;		line 111 in file "program.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2, status,0, pclath, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1501 ;;      Params:         0       0       0       0       0       0       0
  1502 ;;      Locals:         0       0       0       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0
  1504 ;;      Totals:         0       0       0       0       0       0       0
  1505 ;;Total ram usage:        0 bytes
  1506 ;; Hardware stack levels used: 1
  1507 ;; Hardware stack levels required when called: 3
  1508 ;; This function calls:
  1509 ;;		_delay_ms
  1510 ;; This function is called by:
  1511 ;;		_programLoop
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515     042B                     _pb_DelayDebounce:	
  1516                           ;psect for function _pb_DelayDebounce
  1517                           
  1518     042B                     l1292:	
  1519                           ;incstack = 0
  1520                           ; Regs used in _pb_DelayDebounce: [wreg+status,2+status,0+pclath+cstack]
  1521                           
  1522                           
  1523                           ;program.c: 112:     delay_ms(200);
  1524     042B  3000               	movlw	0
  1525     042C  00F9               	movwf	delay_ms@delay+3
  1526     042D  3000               	movlw	0
  1527     042E  00F8               	movwf	delay_ms@delay+2
  1528     042F  3000               	movlw	0
  1529     0430  00F7               	movwf	delay_ms@delay+1
  1530     0431  30C8               	movlw	200
  1531     0432  00F6               	movwf	delay_ms@delay
  1532     0433  3184  24F1  3184   	fcall	_delay_ms
  1533     0436                     l85:
  1534     0436  0008               	return
  1535     0437                     __end_of_pb_DelayDebounce:
  1536                           
  1537                           	psect	text3
  1538     0729                     __ptext3:	
  1539 ;; *************** function _lcd_PrintDigitInt32 *****************
  1540 ;; Defined at:
  1541 ;;		line 250 in file "program.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  number          4    0[BANK0 ] long 
  1544 ;;  noDigit         1    4[BANK0 ] unsigned char 
  1545 ;;  enSign          1    5[BANK0 ] _Bool 
  1546 ;;  enZero          1    6[BANK0 ] _Bool 
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  tempN           4   33[BANK0 ] long 
  1549 ;;  tempC           1   37[BANK0 ] unsigned char 
  1550 ;;  numberChar     11   22[BANK0 ] unsigned char [11]
  1551 ;;  numberRevCha   11   11[BANK0 ] unsigned char [11]
  1552 ;;  i1              1   40[BANK0 ] unsigned char 
  1553 ;;  totalDigit      1   39[BANK0 ] unsigned char 
  1554 ;;  i2              1   38[BANK0 ] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1564 ;;      Params:         0       7       0       0       0       0       0
  1565 ;;      Locals:         0      30       0       0       0       0       0
  1566 ;;      Temps:          0       4       0       0       0       0       0
  1567 ;;      Totals:         0      41       0       0       0       0       0
  1568 ;;Total ram usage:       41 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; Hardware stack levels required when called: 6
  1571 ;; This function calls:
  1572 ;;		___aldiv
  1573 ;;		___bmul
  1574 ;;		_labs
  1575 ;;		_lcd_PrintChar
  1576 ;;		_lcd_PrintString
  1577 ;;		_memset
  1578 ;; This function is called by:
  1579 ;;		_programLoop
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583     0729                     _lcd_PrintDigitInt32:	
  1584                           ;psect for function _lcd_PrintDigitInt32
  1585                           
  1586     0729                     l1232:	
  1587                           ;incstack = 0
  1588                           ; Regs used in _lcd_PrintDigitInt32: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1589                           
  1590                           
  1591                           ;program.c: 251:     uint8_t i1 = 0,
  1592     0729  0020               	movlb	0	; select bank0
  1593     072A  01C8               	clrf	lcd_PrintDigitInt32@i1
  1594                           
  1595                           ;program.c: 253:             totalDigit = 0;
  1596     072B  01C7               	clrf	lcd_PrintDigitInt32@totalDigit
  1597     072C                     l1234:
  1598                           
  1599                           ;program.c: 255:     char numberRevChar[11];;program.c: 256:     char numberChar[11];;pr
      +                          ogram.c: 259:     memset(numberRevChar, 0, 11);
  1600     072C  302B               	movlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  1601     072D  00F0               	movwf	memset@dest
  1602     072E  3000               	movlw	0
  1603     072F  00F1               	movwf	memset@c
  1604     0730  00F2               	movwf	memset@c+1
  1605     0731  300B               	movlw	11
  1606     0732  00F3               	movwf	memset@n
  1607     0733  3000               	movlw	0
  1608     0734  00F4               	movwf	memset@n+1
  1609     0735  3184  2499  3187   	fcall	_memset
  1610     0738                     l1236:
  1611                           
  1612                           ;program.c: 260:     memset(numberChar, 0, 11);
  1613     0738  3036               	movlw	(low (lcd_PrintDigitInt32@numberChar| 0))& (0+255)
  1614     0739  00F0               	movwf	memset@dest
  1615     073A  3000               	movlw	0
  1616     073B  00F1               	movwf	memset@c
  1617     073C  00F2               	movwf	memset@c+1
  1618     073D  300B               	movlw	11
  1619     073E  00F3               	movwf	memset@n
  1620     073F  3000               	movlw	0
  1621     0740  00F4               	movwf	memset@n+1
  1622     0741  3184  2499  3187   	fcall	_memset
  1623     0744                     l1238:
  1624                           
  1625                           ;program.c: 262:     if(number<0) {
  1626     0744  0020               	movlb	0	; select bank0
  1627     0745  1FA3               	btfss	lcd_PrintDigitInt32@number+3,7
  1628     0746  2F48               	goto	u681
  1629     0747  2F49               	goto	u680
  1630     0748                     u681:
  1631     0748  2F68               	goto	l1244
  1632     0749                     u680:
  1633     0749                     l1240:
  1634                           
  1635                           ;program.c: 263:         if(enSign) lcd_PrintChar('-');
  1636     0749  0825               	movf	lcd_PrintDigitInt32@enSign,w
  1637     074A  1903               	btfsc	3,2
  1638     074B  2F4D               	goto	u691
  1639     074C  2F4E               	goto	u690
  1640     074D                     u691:
  1641     074D  2F52               	goto	l135
  1642     074E                     u690:
  1643     074E                     l1242:
  1644     074E  302D               	movlw	45
  1645     074F  3184  2420  3187   	fcall	_lcd_PrintChar
  1646     0752                     l135:
  1647                           
  1648                           ;program.c: 264:         number = labs(number);
  1649     0752  0020               	movlb	0	; select bank0
  1650     0753  0823               	movf	lcd_PrintDigitInt32@number+3,w
  1651     0754  00F3               	movwf	labs@a+3
  1652     0755  0822               	movf	lcd_PrintDigitInt32@number+2,w
  1653     0756  00F2               	movwf	labs@a+2
  1654     0757  0821               	movf	lcd_PrintDigitInt32@number+1,w
  1655     0758  00F1               	movwf	labs@a+1
  1656     0759  0820               	movf	lcd_PrintDigitInt32@number,w
  1657     075A  00F0               	movwf	labs@a
  1658     075B  3184  2457  3187   	fcall	_labs
  1659     075E  0873               	movf	?_labs+3,w
  1660     075F  0020               	movlb	0	; select bank0
  1661     0760  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1662     0761  0872               	movf	?_labs+2,w
  1663     0762  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1664     0763  0871               	movf	?_labs+1,w
  1665     0764  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1666     0765  0870               	movf	?_labs,w
  1667     0766  00A0               	movwf	lcd_PrintDigitInt32@number
  1668                           
  1669                           ;program.c: 265:     } else {
  1670     0767  2F71               	goto	l1248
  1671     0768                     l1244:
  1672                           
  1673                           ;program.c: 266:         if(enSign) lcd_PrintChar(' ');
  1674     0768  0825               	movf	lcd_PrintDigitInt32@enSign,w
  1675     0769  1903               	btfsc	3,2
  1676     076A  2F6C               	goto	u701
  1677     076B  2F6D               	goto	u700
  1678     076C                     u701:
  1679     076C  2F71               	goto	l1248
  1680     076D                     u700:
  1681     076D                     l1246:
  1682     076D  3020               	movlw	32
  1683     076E  3184  2420  3187   	fcall	_lcd_PrintChar
  1684     0771                     l1248:
  1685                           
  1686                           ;program.c: 270:         int32_t tempN = number;
  1687     0771  0020               	movlb	0	; select bank0
  1688     0772  0823               	movf	lcd_PrintDigitInt32@number+3,w
  1689     0773  00C4               	movwf	lcd_PrintDigitInt32@tempN+3
  1690     0774  0822               	movf	lcd_PrintDigitInt32@number+2,w
  1691     0775  00C3               	movwf	lcd_PrintDigitInt32@tempN+2
  1692     0776  0821               	movf	lcd_PrintDigitInt32@number+1,w
  1693     0777  00C2               	movwf	lcd_PrintDigitInt32@tempN+1
  1694     0778  0820               	movf	lcd_PrintDigitInt32@number,w
  1695     0779  00C1               	movwf	lcd_PrintDigitInt32@tempN
  1696     077A                     l1250:
  1697                           
  1698                           ;program.c: 271:         number /= 10;
  1699     077A  3000               	movlw	0
  1700     077B  00F3               	movwf	___aldiv@divisor+3
  1701     077C  3000               	movlw	0
  1702     077D  00F2               	movwf	___aldiv@divisor+2
  1703     077E  3000               	movlw	0
  1704     077F  00F1               	movwf	___aldiv@divisor+1
  1705     0780  300A               	movlw	10
  1706     0781  00F0               	movwf	___aldiv@divisor
  1707     0782  0823               	movf	lcd_PrintDigitInt32@number+3,w
  1708     0783  00F7               	movwf	___aldiv@dividend+3
  1709     0784  0822               	movf	lcd_PrintDigitInt32@number+2,w
  1710     0785  00F6               	movwf	___aldiv@dividend+2
  1711     0786  0821               	movf	lcd_PrintDigitInt32@number+1,w
  1712     0787  00F5               	movwf	___aldiv@dividend+1
  1713     0788  0820               	movf	lcd_PrintDigitInt32@number,w
  1714     0789  00F4               	movwf	___aldiv@dividend
  1715     078A  3185  25D5  3187   	fcall	___aldiv
  1716     078D  0873               	movf	?___aldiv+3,w
  1717     078E  0020               	movlb	0	; select bank0
  1718     078F  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1719     0790  0872               	movf	?___aldiv+2,w
  1720     0791  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1721     0792  0871               	movf	?___aldiv+1,w
  1722     0793  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1723     0794  0870               	movf	?___aldiv,w
  1724     0795  00A0               	movwf	lcd_PrintDigitInt32@number
  1725     0796                     l1252:
  1726                           
  1727                           ;program.c: 272:         char tempC = (char)(tempN -10 * number);
  1728     0796  30F6               	movlw	246
  1729     0797  00F0               	movwf	___bmul@multiplicand
  1730     0798  0820               	movf	lcd_PrintDigitInt32@number,w
  1731     0799  3184  2444  3187   	fcall	___bmul
  1732     079C  0020               	movlb	0	; select bank0
  1733     079D  0741               	addwf	lcd_PrintDigitInt32@tempN,w
  1734     079E  00C5               	movwf	lcd_PrintDigitInt32@tempC
  1735     079F                     l1254:
  1736                           
  1737                           ;program.c: 273:         numberRevChar[i1] = tempC + 48;
  1738     079F  0848               	movf	lcd_PrintDigitInt32@i1,w
  1739     07A0  3E2B               	addlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  1740     07A1  0086               	movwf	6
  1741     07A2  0187               	clrf	7
  1742     07A3  0845               	movf	lcd_PrintDigitInt32@tempC,w
  1743     07A4  3E30               	addlw	48
  1744     07A5  0081               	movwf	1
  1745     07A6                     l1256:
  1746                           
  1747                           ;program.c: 274:         i1++;
  1748     07A6  3001               	movlw	1
  1749     07A7  07C8               	addwf	lcd_PrintDigitInt32@i1,f
  1750     07A8                     l1258:
  1751                           
  1752                           ;program.c: 275:     } while(number);
  1753     07A8  0823               	movf	lcd_PrintDigitInt32@number+3,w
  1754     07A9  0422               	iorwf	lcd_PrintDigitInt32@number+2,w
  1755     07AA  0421               	iorwf	lcd_PrintDigitInt32@number+1,w
  1756     07AB  0420               	iorwf	lcd_PrintDigitInt32@number,w
  1757     07AC  1D03               	skipz
  1758     07AD  2FAF               	goto	u711
  1759     07AE  2FB0               	goto	u710
  1760     07AF                     u711:
  1761     07AF  2F71               	goto	l1248
  1762     07B0                     u710:
  1763     07B0                     l1260:
  1764                           
  1765                           ;program.c: 277:     totalDigit = i1;
  1766     07B0  0848               	movf	lcd_PrintDigitInt32@i1,w
  1767     07B1  00C7               	movwf	lcd_PrintDigitInt32@totalDigit
  1768     07B2                     l1262:
  1769                           
  1770                           ;program.c: 279:     for(i1=0; i1<(noDigit-totalDigit); i1++) {
  1771     07B2  01C8               	clrf	lcd_PrintDigitInt32@i1
  1772     07B3  2FC6               	goto	l1272
  1773     07B4                     l1264:
  1774                           
  1775                           ;program.c: 280:         if(enZero) lcd_PrintChar('0');
  1776     07B4  0020               	movlb	0	; select bank0
  1777     07B5  0826               	movf	lcd_PrintDigitInt32@enZero,w
  1778     07B6  1903               	btfsc	3,2
  1779     07B7  2FB9               	goto	u721
  1780     07B8  2FBA               	goto	u720
  1781     07B9                     u721:
  1782     07B9  2FBF               	goto	l1268
  1783     07BA                     u720:
  1784     07BA                     l1266:
  1785     07BA  3030               	movlw	48
  1786     07BB  3184  2420  3187   	fcall	_lcd_PrintChar
  1787     07BE  2FC3               	goto	l1270
  1788     07BF                     l1268:
  1789     07BF  3020               	movlw	32
  1790     07C0  3184  2420  3187   	fcall	_lcd_PrintChar
  1791     07C3                     l1270:
  1792                           
  1793                           ;program.c: 282:     }
  1794     07C3  3001               	movlw	1
  1795     07C4  0020               	movlb	0	; select bank0
  1796     07C5  07C8               	addwf	lcd_PrintDigitInt32@i1,f
  1797     07C6                     l1272:
  1798     07C6  0824               	movf	lcd_PrintDigitInt32@noDigit,w
  1799     07C7  00A7               	movwf	??_lcd_PrintDigitInt32
  1800     07C8  01A8               	clrf	??_lcd_PrintDigitInt32+1
  1801     07C9  0828               	movf	??_lcd_PrintDigitInt32+1,w
  1802     07CA  00AA               	movwf	??_lcd_PrintDigitInt32+3
  1803     07CB  0847               	movf	lcd_PrintDigitInt32@totalDigit,w
  1804     07CC  0227               	subwf	??_lcd_PrintDigitInt32,w
  1805     07CD  00A9               	movwf	??_lcd_PrintDigitInt32+2
  1806     07CE  1C03               	skipc
  1807     07CF  03AA               	decf	??_lcd_PrintDigitInt32+3,f
  1808     07D0  082A               	movf	??_lcd_PrintDigitInt32+3,w
  1809     07D1  3A80               	xorlw	128
  1810     07D2  3C80               	sublw	128
  1811     07D3  1D03               	skipz
  1812     07D4  2FD7               	goto	u735
  1813     07D5  0829               	movf	??_lcd_PrintDigitInt32+2,w
  1814     07D6  0248               	subwf	lcd_PrintDigitInt32@i1,w
  1815     07D7                     u735:
  1816     07D7  1C03               	skipc
  1817     07D8  2FDA               	goto	u731
  1818     07D9  2FDB               	goto	u730
  1819     07DA                     u731:
  1820     07DA  2FB4               	goto	l1264
  1821     07DB                     u730:
  1822     07DB                     l1274:
  1823                           
  1824                           ;program.c: 284:     for(i1=totalDigit, i2=0; i1>0; i1--, i2++) {
  1825     07DB  0020               	movlb	0	; select bank0
  1826     07DC  0847               	movf	lcd_PrintDigitInt32@totalDigit,w
  1827     07DD  00C8               	movwf	lcd_PrintDigitInt32@i1
  1828     07DE                     l1276:
  1829     07DE  01C6               	clrf	lcd_PrintDigitInt32@i2
  1830     07DF                     l1278:
  1831     07DF  0848               	movf	lcd_PrintDigitInt32@i1,w
  1832     07E0  1D03               	btfss	3,2
  1833     07E1  2FE3               	goto	u741
  1834     07E2  2FE4               	goto	u740
  1835     07E3                     u741:
  1836     07E3  2FE5               	goto	l1282
  1837     07E4                     u740:
  1838     07E4  2FF5               	goto	l1290
  1839     07E5                     l1282:
  1840                           
  1841                           ;program.c: 285:         numberChar[i2] = numberRevChar[i1-1];
  1842     07E5  0846               	movf	lcd_PrintDigitInt32@i2,w
  1843     07E6  3E36               	addlw	(low (lcd_PrintDigitInt32@numberChar| 0))& (0+255)
  1844     07E7  0086               	movwf	6
  1845     07E8  0187               	clrf	7
  1846     07E9  0848               	movf	lcd_PrintDigitInt32@i1,w
  1847     07EA  3EFF               	addlw	255
  1848     07EB  3E2B               	addlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  1849     07EC  0084               	movwf	4
  1850     07ED  0185               	clrf	5
  1851     07EE  0800               	movf	0,w
  1852     07EF  0081               	movwf	1
  1853     07F0                     l1284:
  1854                           
  1855                           ;program.c: 286:     }
  1856     07F0  3001               	movlw	1
  1857     07F1  02C8               	subwf	lcd_PrintDigitInt32@i1,f
  1858     07F2                     l1286:
  1859     07F2  3001               	movlw	1
  1860     07F3  07C6               	addwf	lcd_PrintDigitInt32@i2,f
  1861     07F4  2FDF               	goto	l1278
  1862     07F5                     l1290:
  1863                           
  1864                           ;program.c: 288:     lcd_PrintString(numberChar);
  1865     07F5  3036               	movlw	low lcd_PrintDigitInt32@numberChar
  1866     07F6  00F6               	movwf	lcd_PrintString@string
  1867     07F7  3000               	movlw	high lcd_PrintDigitInt32@numberChar
  1868     07F8  00F7               	movwf	lcd_PrintString@string+1
  1869     07F9  3184  2482  3187   	fcall	_lcd_PrintString
  1870     07FC                     l147:
  1871     07FC  0008               	return
  1872     07FD                     __end_of_lcd_PrintDigitInt32:
  1873                           
  1874                           	psect	text4
  1875     0499                     __ptext4:	
  1876 ;; *************** function _memset *****************
  1877 ;; Defined at:
  1878 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memset.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  dest            1    0[COMMON] PTR void 
  1881 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintDigitInt32@numberRevChar(11), lcd_PrintInt32@numberChar(11), lcd_Pr
      +intInt32@numberRevChar(11), 
  1882 ;;  c               2    1[COMMON] int 
  1883 ;;  n               2    3[COMMON] unsigned int 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  p               1    5[COMMON] PTR unsigned char 
  1886 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintDigitInt32@numberRevChar(11), lcd_PrintInt32@numberChar(11), lcd_Pr
      +intInt32@numberRevChar(11), 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    0[COMMON] PTR void 
  1889 ;; Registers used:
  1890 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1896 ;;      Params:         5       0       0       0       0       0       0
  1897 ;;      Locals:         1       0       0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0
  1899 ;;      Totals:         6       0       0       0       0       0       0
  1900 ;;Total ram usage:        6 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_lcd_PrintDigitInt32
  1906 ;;		_lcd_PrintInt32
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910     0499                     _memset:	
  1911                           ;psect for function _memset
  1912                           
  1913     0499                     l1148:	
  1914                           ;incstack = 0
  1915                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  1916                           
  1917     0499  0870               	movf	memset@dest,w
  1918     049A  00F5               	movwf	memset@p
  1919     049B  2CA3               	goto	l1154
  1920     049C                     l1150:
  1921     049C  0875               	movf	memset@p,w
  1922     049D  0086               	movwf	6
  1923     049E  0187               	clrf	7
  1924     049F  0871               	movf	memset@c,w
  1925     04A0  0081               	movwf	1
  1926     04A1                     l1152:
  1927     04A1  3001               	movlw	1
  1928     04A2  07F5               	addwf	memset@p,f
  1929     04A3                     l1154:
  1930     04A3  3001               	movlw	1
  1931     04A4  02F3               	subwf	memset@n,f
  1932     04A5  3000               	movlw	0
  1933     04A6  3BF4               	subwfb	memset@n+1,f
  1934     04A7  0A73               	incf	memset@n,w
  1935     04A8  1D03               	skipz
  1936     04A9  2CAE               	goto	u541
  1937     04AA  0A74               	incf	memset@n+1,w
  1938     04AB  1D03               	btfss	3,2
  1939     04AC  2CAE               	goto	u541
  1940     04AD  2CAF               	goto	u540
  1941     04AE                     u541:
  1942     04AE  2C9C               	goto	l1150
  1943     04AF                     u540:
  1944     04AF                     l766:
  1945     04AF  0008               	return
  1946     04B0                     __end_of_memset:
  1947                           
  1948                           	psect	text5
  1949     0482                     __ptext5:	
  1950 ;; *************** function _lcd_PrintString *****************
  1951 ;; Defined at:
  1952 ;;		line 209 in file "program.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  string          2    6[COMMON] PTR unsigned char 
  1955 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintInt32@numberChar(11), STR_4(4), STR_3(4), 
  1956 ;;		 -> STR_2(4), STR_1(15), 
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1968 ;;      Params:         2       0       0       0       0       0       0
  1969 ;;      Locals:         0       0       0       0       0       0       0
  1970 ;;      Temps:          1       0       0       0       0       0       0
  1971 ;;      Totals:         3       0       0       0       0       0       0
  1972 ;;Total ram usage:        3 bytes
  1973 ;; Hardware stack levels used: 1
  1974 ;; Hardware stack levels required when called: 5
  1975 ;; This function calls:
  1976 ;;		_lcd_PrintChar
  1977 ;; This function is called by:
  1978 ;;		_programLoop
  1979 ;;		_lcd_PrintDigitInt32
  1980 ;;		_lcd_PrintInt32
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984     0482                     _lcd_PrintString:	
  1985                           ;psect for function _lcd_PrintString
  1986                           
  1987     0482                     l1136:	
  1988                           ;incstack = 0
  1989                           ; Regs used in _lcd_PrintString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1990                           
  1991                           
  1992                           ;program.c: 210:     while(*string!=0) {
  1993     0482  2C8F               	goto	l1142
  1994     0483                     l1138:
  1995                           
  1996                           ;program.c: 211:         lcd_PrintChar(*string);
  1997     0483  0876               	movf	lcd_PrintString@string,w
  1998     0484  0084               	movwf	4
  1999     0485  0877               	movf	lcd_PrintString@string+1,w
  2000     0486  0085               	movwf	5
  2001     0487  0800               	movf	0,w	;code access
  2002     0488  3184  2420  3184   	fcall	_lcd_PrintChar
  2003     048B                     l1140:
  2004                           
  2005                           ;program.c: 212:         string++;
  2006     048B  3001               	movlw	1
  2007     048C  07F6               	addwf	lcd_PrintString@string,f
  2008     048D  3000               	movlw	0
  2009     048E  3DF7               	addwfc	lcd_PrintString@string+1,f
  2010     048F                     l1142:
  2011                           
  2012                           ;program.c: 210:     while(*string!=0) {
  2013     048F  0876               	movf	lcd_PrintString@string,w
  2014     0490  0084               	movwf	4
  2015     0491  0877               	movf	lcd_PrintString@string+1,w
  2016     0492  0085               	movwf	5
  2017     0493  0012               	moviw fsr0++
  2018     0494  1D03               	btfss	3,2
  2019     0495  2C97               	goto	u531
  2020     0496  2C98               	goto	u530
  2021     0497                     u531:
  2022     0497  2C83               	goto	l1138
  2023     0498                     u530:
  2024     0498                     l123:
  2025     0498  0008               	return
  2026     0499                     __end_of_lcd_PrintString:
  2027                           
  2028                           	psect	text6
  2029     0420                     __ptext6:	
  2030 ;; *************** function _lcd_PrintChar *****************
  2031 ;; Defined at:
  2032 ;;		line 202 in file "program.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  character       1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  character       1    5[COMMON] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0, pclath, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2046 ;;      Params:         0       0       0       0       0       0       0
  2047 ;;      Locals:         1       0       0       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0
  2049 ;;      Totals:         1       0       0       0       0       0       0
  2050 ;;Total ram usage:        1 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 4
  2053 ;; This function calls:
  2054 ;;		_lcd_DelaySetupTime
  2055 ;;		_lcd_WriteData
  2056 ;; This function is called by:
  2057 ;;		_lcd_PrintString
  2058 ;;		_lcd_PrintDigitInt32
  2059 ;;		_lcd_PrintInt32
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063     0420                     _lcd_PrintChar:	
  2064                           ;psect for function _lcd_PrintChar
  2065                           
  2066                           
  2067                           ;incstack = 0
  2068                           ; Regs used in _lcd_PrintChar: [wreg+status,2+status,0+pclath+cstack]
  2069                           ;lcd_PrintChar@character stored from wreg
  2070     0420  00F5               	movwf	lcd_PrintChar@character
  2071     0421                     l1124:
  2072                           
  2073                           ;program.c: 203:     LATBbits.LATB5 = 1;
  2074     0421  0022               	movlb	2	; select bank2
  2075     0422  168D               	bsf	13,5	;volatile
  2076     0423                     l1126:
  2077                           
  2078                           ;program.c: 204:     lcd_DelaySetupTime();
  2079     0423  3183  23F7  3184   	fcall	_lcd_DelaySetupTime
  2080                           
  2081                           ;program.c: 206:     lcd_WriteData(character);
  2082     0426  0875               	movf	lcd_PrintChar@character,w
  2083     0427  3185  254D  3184   	fcall	_lcd_WriteData
  2084     042A                     l117:
  2085     042A  0008               	return
  2086     042B                     __end_of_lcd_PrintChar:
  2087                           
  2088                           	psect	text7
  2089     0457                     __ptext7:	
  2090 ;; *************** function _labs *****************
  2091 ;; Defined at:
  2092 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\labs.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  a               4    0[COMMON] long 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  4    0[COMMON] long 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2106 ;;      Params:         4       0       0       0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0
  2109 ;;      Totals:         4       0       0       0       0       0       0
  2110 ;;Total ram usage:        4 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_lcd_PrintDigitInt32
  2116 ;;		_lcd_PrintInt32
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120     0457                     _labs:	
  2121                           ;psect for function _labs
  2122                           
  2123     0457                     l1156:	
  2124                           ;incstack = 0
  2125                           ; Regs used in _labs: [wreg+status,2+status,0]
  2126                           
  2127     0457  1BF3               	btfsc	labs@a+3,7
  2128     0458  2C5A               	goto	u551
  2129     0459  2C5B               	goto	u550
  2130     045A                     u551:
  2131     045A  2C5C               	goto	l1160
  2132     045B                     u550:
  2133     045B                     l1158:
  2134     045B  2C6B               	goto	l760
  2135     045C                     l1160:
  2136     045C  0970               	comf	labs@a,w
  2137     045D  00F0               	movwf	?_labs
  2138     045E  0971               	comf	labs@a+1,w
  2139     045F  00F1               	movwf	?_labs+1
  2140     0460  0972               	comf	labs@a+2,w
  2141     0461  00F2               	movwf	?_labs+2
  2142     0462  0973               	comf	labs@a+3,w
  2143     0463  00F3               	movwf	?_labs+3
  2144     0464  0AF0               	incf	?_labs,f
  2145     0465  1903               	skipnz
  2146     0466  0AF1               	incf	?_labs+1,f
  2147     0467  1903               	skipnz
  2148     0468  0AF2               	incf	?_labs+2,f
  2149     0469  1903               	skipnz
  2150     046A  0AF3               	incf	?_labs+3,f
  2151     046B                     l760:
  2152     046B  0008               	return
  2153     046C                     __end_of_labs:
  2154                           
  2155                           	psect	text8
  2156     0444                     __ptext8:	
  2157 ;; *************** function ___bmul *****************
  2158 ;; Defined at:
  2159 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  multiplier      1    wreg     unsigned char 
  2162 ;;  multiplicand    1    0[COMMON] unsigned char 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  multiplier      1    2[COMMON] unsigned char 
  2165 ;;  product         1    1[COMMON] unsigned char 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      unsigned char 
  2168 ;; Registers used:
  2169 ;;		wreg, status,2, status,0
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2175 ;;      Params:         1       0       0       0       0       0       0
  2176 ;;      Locals:         2       0       0       0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0
  2178 ;;      Totals:         3       0       0       0       0       0       0
  2179 ;;Total ram usage:        3 bytes
  2180 ;; Hardware stack levels used: 1
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_lcd_PrintDigitInt32
  2185 ;;		_lcd_PrintInt32
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189     0444                     ___bmul:	
  2190                           ;psect for function ___bmul
  2191                           
  2192                           
  2193                           ;incstack = 0
  2194                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2195                           ;___bmul@multiplier stored from wreg
  2196     0444  00F2               	movwf	___bmul@multiplier
  2197     0445                     l1164:
  2198     0445  01F1               	clrf	___bmul@product
  2199     0446                     l1166:
  2200     0446  1C72               	btfss	___bmul@multiplier,0
  2201     0447  2C49               	goto	u561
  2202     0448  2C4A               	goto	u560
  2203     0449                     u561:
  2204     0449  2C4C               	goto	l1170
  2205     044A                     u560:
  2206     044A                     l1168:
  2207     044A  0870               	movf	___bmul@multiplicand,w
  2208     044B  07F1               	addwf	___bmul@product,f
  2209     044C                     l1170:
  2210     044C  1003               	clrc
  2211     044D  0DF0               	rlf	___bmul@multiplicand,f
  2212     044E                     l1172:
  2213     044E  1003               	clrc
  2214     044F  0CF2               	rrf	___bmul@multiplier,f
  2215     0450  0872               	movf	___bmul@multiplier,w
  2216     0451  1D03               	btfss	3,2
  2217     0452  2C54               	goto	u571
  2218     0453  2C55               	goto	u570
  2219     0454                     u571:
  2220     0454  2C46               	goto	l1166
  2221     0455                     u570:
  2222     0455                     l1174:
  2223     0455  0871               	movf	___bmul@product,w
  2224     0456                     l323:
  2225     0456  0008               	return
  2226     0457                     __end_of___bmul:
  2227                           
  2228                           	psect	text9
  2229     05D5                     __ptext9:	
  2230 ;; *************** function ___aldiv *****************
  2231 ;; Defined at:
  2232 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  divisor         4    0[COMMON] long 
  2235 ;;  dividend        4    4[COMMON] long 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  quotient        4   10[COMMON] long 
  2238 ;;  sign            1    9[COMMON] unsigned char 
  2239 ;;  counter         1    8[COMMON] unsigned char 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  4    0[COMMON] long 
  2242 ;; Registers used:
  2243 ;;		wreg, status,2, status,0
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2249 ;;      Params:         8       0       0       0       0       0       0
  2250 ;;      Locals:         6       0       0       0       0       0       0
  2251 ;;      Temps:          0       0       0       0       0       0       0
  2252 ;;      Totals:        14       0       0       0       0       0       0
  2253 ;;Total ram usage:       14 bytes
  2254 ;; Hardware stack levels used: 1
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_lcd_PrintDigitInt32
  2259 ;;		_lcd_PrintInt32
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263     05D5                     ___aldiv:	
  2264                           ;psect for function ___aldiv
  2265                           
  2266     05D5                     l1178:	
  2267                           ;incstack = 0
  2268                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2269                           
  2270     05D5  01F9               	clrf	___aldiv@sign
  2271     05D6                     l1180:
  2272     05D6  1FF3               	btfss	___aldiv@divisor+3,7
  2273     05D7  2DD9               	goto	u581
  2274     05D8  2DDA               	goto	u580
  2275     05D9                     u581:
  2276     05D9  2DE7               	goto	l362
  2277     05DA                     u580:
  2278     05DA                     l1182:
  2279     05DA  09F0               	comf	___aldiv@divisor,f
  2280     05DB  09F1               	comf	___aldiv@divisor+1,f
  2281     05DC  09F2               	comf	___aldiv@divisor+2,f
  2282     05DD  09F3               	comf	___aldiv@divisor+3,f
  2283     05DE  0AF0               	incf	___aldiv@divisor,f
  2284     05DF  1903               	skipnz
  2285     05E0  0AF1               	incf	___aldiv@divisor+1,f
  2286     05E1  1903               	skipnz
  2287     05E2  0AF2               	incf	___aldiv@divisor+2,f
  2288     05E3  1903               	skipnz
  2289     05E4  0AF3               	incf	___aldiv@divisor+3,f
  2290     05E5  3001               	movlw	1
  2291     05E6  00F9               	movwf	___aldiv@sign
  2292     05E7                     l362:
  2293     05E7  1FF7               	btfss	___aldiv@dividend+3,7
  2294     05E8  2DEA               	goto	u591
  2295     05E9  2DEB               	goto	u590
  2296     05EA                     u591:
  2297     05EA  2DF8               	goto	l1188
  2298     05EB                     u590:
  2299     05EB                     l1184:
  2300     05EB  09F4               	comf	___aldiv@dividend,f
  2301     05EC  09F5               	comf	___aldiv@dividend+1,f
  2302     05ED  09F6               	comf	___aldiv@dividend+2,f
  2303     05EE  09F7               	comf	___aldiv@dividend+3,f
  2304     05EF  0AF4               	incf	___aldiv@dividend,f
  2305     05F0  1903               	skipnz
  2306     05F1  0AF5               	incf	___aldiv@dividend+1,f
  2307     05F2  1903               	skipnz
  2308     05F3  0AF6               	incf	___aldiv@dividend+2,f
  2309     05F4  1903               	skipnz
  2310     05F5  0AF7               	incf	___aldiv@dividend+3,f
  2311     05F6                     l1186:
  2312     05F6  3001               	movlw	1
  2313     05F7  06F9               	xorwf	___aldiv@sign,f
  2314     05F8                     l1188:
  2315     05F8  3000               	movlw	0
  2316     05F9  00FD               	movwf	___aldiv@quotient+3
  2317     05FA  3000               	movlw	0
  2318     05FB  00FC               	movwf	___aldiv@quotient+2
  2319     05FC  3000               	movlw	0
  2320     05FD  00FB               	movwf	___aldiv@quotient+1
  2321     05FE  3000               	movlw	0
  2322     05FF  00FA               	movwf	___aldiv@quotient
  2323     0600                     l1190:
  2324     0600  0873               	movf	___aldiv@divisor+3,w
  2325     0601  0472               	iorwf	___aldiv@divisor+2,w
  2326     0602  0471               	iorwf	___aldiv@divisor+1,w
  2327     0603  0470               	iorwf	___aldiv@divisor,w
  2328     0604  1903               	skipnz
  2329     0605  2E07               	goto	u601
  2330     0606  2E08               	goto	u600
  2331     0607                     u601:
  2332     0607  2E47               	goto	l1210
  2333     0608                     u600:
  2334     0608                     l1192:
  2335     0608  3001               	movlw	1
  2336     0609  00F8               	movwf	___aldiv@counter
  2337     060A  2E14               	goto	l1196
  2338     060B                     l1194:
  2339     060B  3001               	movlw	1
  2340     060C                     u615:
  2341     060C  35F0               	lslf	___aldiv@divisor,f
  2342     060D  0DF1               	rlf	___aldiv@divisor+1,f
  2343     060E  0DF2               	rlf	___aldiv@divisor+2,f
  2344     060F  0DF3               	rlf	___aldiv@divisor+3,f
  2345     0610  0B89               	decfsz	9,f
  2346     0611  2E0C               	goto	u615
  2347     0612  3001               	movlw	1
  2348     0613  07F8               	addwf	___aldiv@counter,f
  2349     0614                     l1196:
  2350     0614  1FF3               	btfss	___aldiv@divisor+3,7
  2351     0615  2E17               	goto	u621
  2352     0616  2E18               	goto	u620
  2353     0617                     u621:
  2354     0617  2E0B               	goto	l1194
  2355     0618                     u620:
  2356     0618                     l1198:
  2357     0618  3001               	movlw	1
  2358     0619                     u635:
  2359     0619  35FA               	lslf	___aldiv@quotient,f
  2360     061A  0DFB               	rlf	___aldiv@quotient+1,f
  2361     061B  0DFC               	rlf	___aldiv@quotient+2,f
  2362     061C  0DFD               	rlf	___aldiv@quotient+3,f
  2363     061D  0B89               	decfsz	9,f
  2364     061E  2E19               	goto	u635
  2365     061F                     l1200:
  2366     061F  0873               	movf	___aldiv@divisor+3,w
  2367     0620  0277               	subwf	___aldiv@dividend+3,w
  2368     0621  1D03               	skipz
  2369     0622  2E2D               	goto	u645
  2370     0623  0872               	movf	___aldiv@divisor+2,w
  2371     0624  0276               	subwf	___aldiv@dividend+2,w
  2372     0625  1D03               	skipz
  2373     0626  2E2D               	goto	u645
  2374     0627  0871               	movf	___aldiv@divisor+1,w
  2375     0628  0275               	subwf	___aldiv@dividend+1,w
  2376     0629  1D03               	skipz
  2377     062A  2E2D               	goto	u645
  2378     062B  0870               	movf	___aldiv@divisor,w
  2379     062C  0274               	subwf	___aldiv@dividend,w
  2380     062D                     u645:
  2381     062D  1C03               	skipc
  2382     062E  2E30               	goto	u641
  2383     062F  2E31               	goto	u640
  2384     0630                     u641:
  2385     0630  2E3A               	goto	l1206
  2386     0631                     u640:
  2387     0631                     l1202:
  2388     0631  0870               	movf	___aldiv@divisor,w
  2389     0632  02F4               	subwf	___aldiv@dividend,f
  2390     0633  0871               	movf	___aldiv@divisor+1,w
  2391     0634  3BF5               	subwfb	___aldiv@dividend+1,f
  2392     0635  0872               	movf	___aldiv@divisor+2,w
  2393     0636  3BF6               	subwfb	___aldiv@dividend+2,f
  2394     0637  0873               	movf	___aldiv@divisor+3,w
  2395     0638  3BF7               	subwfb	___aldiv@dividend+3,f
  2396     0639                     l1204:
  2397     0639  147A               	bsf	___aldiv@quotient,0
  2398     063A                     l1206:
  2399     063A  3001               	movlw	1
  2400     063B                     u655:
  2401     063B  36F3               	lsrf	___aldiv@divisor+3,f
  2402     063C  0CF2               	rrf	___aldiv@divisor+2,f
  2403     063D  0CF1               	rrf	___aldiv@divisor+1,f
  2404     063E  0CF0               	rrf	___aldiv@divisor,f
  2405     063F  0B89               	decfsz	9,f
  2406     0640  2E3B               	goto	u655
  2407     0641                     l1208:
  2408     0641  3001               	movlw	1
  2409     0642  02F8               	subwf	___aldiv@counter,f
  2410     0643  1D03               	btfss	3,2
  2411     0644  2E46               	goto	u661
  2412     0645  2E47               	goto	u660
  2413     0646                     u661:
  2414     0646  2E18               	goto	l1198
  2415     0647                     u660:
  2416     0647                     l1210:
  2417     0647  0879               	movf	___aldiv@sign,w
  2418     0648  1903               	btfsc	3,2
  2419     0649  2E4B               	goto	u671
  2420     064A  2E4C               	goto	u670
  2421     064B                     u671:
  2422     064B  2E57               	goto	l1214
  2423     064C                     u670:
  2424     064C                     l1212:
  2425     064C  09FA               	comf	___aldiv@quotient,f
  2426     064D  09FB               	comf	___aldiv@quotient+1,f
  2427     064E  09FC               	comf	___aldiv@quotient+2,f
  2428     064F  09FD               	comf	___aldiv@quotient+3,f
  2429     0650  0AFA               	incf	___aldiv@quotient,f
  2430     0651  1903               	skipnz
  2431     0652  0AFB               	incf	___aldiv@quotient+1,f
  2432     0653  1903               	skipnz
  2433     0654  0AFC               	incf	___aldiv@quotient+2,f
  2434     0655  1903               	skipnz
  2435     0656  0AFD               	incf	___aldiv@quotient+3,f
  2436     0657                     l1214:
  2437     0657  087D               	movf	___aldiv@quotient+3,w
  2438     0658  00F3               	movwf	?___aldiv+3
  2439     0659  087C               	movf	___aldiv@quotient+2,w
  2440     065A  00F2               	movwf	?___aldiv+2
  2441     065B  087B               	movf	___aldiv@quotient+1,w
  2442     065C  00F1               	movwf	?___aldiv+1
  2443     065D  087A               	movf	___aldiv@quotient,w
  2444     065E  00F0               	movwf	?___aldiv
  2445     065F                     l372:
  2446     065F  0008               	return
  2447     0660                     __end_of___aldiv:
  2448                           
  2449                           	psect	text10
  2450     04B0                     __ptext10:	
  2451 ;; *************** function _lcd_Goto *****************
  2452 ;; Defined at:
  2453 ;;		line 186 in file "program.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  y               1    wreg     unsigned char 
  2456 ;;  x               1    6[COMMON] unsigned char 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  y               1    7[COMMON] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2468 ;;      Params:         1       0       0       0       0       0       0
  2469 ;;      Locals:         1       0       0       0       0       0       0
  2470 ;;      Temps:          0       0       0       0       0       0       0
  2471 ;;      Totals:         2       0       0       0       0       0       0
  2472 ;;Total ram usage:        2 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; Hardware stack levels required when called: 5
  2475 ;; This function calls:
  2476 ;;		_lcd_PrintCmd
  2477 ;; This function is called by:
  2478 ;;		_programLoop
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482     04B0                     _lcd_Goto:	
  2483                           ;psect for function _lcd_Goto
  2484                           
  2485                           
  2486                           ;incstack = 0
  2487                           ; Regs used in _lcd_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2488                           ;lcd_Goto@y stored from wreg
  2489     04B0  00F7               	movwf	lcd_Goto@y
  2490     04B1                     l1220:
  2491                           
  2492                           ;program.c: 187:     switch(y) {
  2493     04B1  2CC4               	goto	l1230
  2494     04B2                     l1222:
  2495                           
  2496                           ;program.c: 189:             lcd_PrintCmd(0x80 + x);
  2497     04B2  0876               	movf	lcd_Goto@x,w
  2498     04B3  3E80               	addlw	128
  2499     04B4  3184  2415  3184   	fcall	_lcd_PrintCmd
  2500                           
  2501                           ;program.c: 190:             break;
  2502     04B7  2CCC               	goto	l114
  2503     04B8                     l1224:
  2504                           
  2505                           ;program.c: 193:             lcd_PrintCmd(0xC0 + x);
  2506     04B8  0876               	movf	lcd_Goto@x,w
  2507     04B9  3EC0               	addlw	192
  2508     04BA  3184  2415  3184   	fcall	_lcd_PrintCmd
  2509                           
  2510                           ;program.c: 194:             break;
  2511     04BD  2CCC               	goto	l114
  2512     04BE                     l1226:
  2513                           
  2514                           ;program.c: 197:             lcd_PrintCmd(0x80 + x);
  2515     04BE  0876               	movf	lcd_Goto@x,w
  2516     04BF  3E80               	addlw	128
  2517     04C0  3184  2415  3184   	fcall	_lcd_PrintCmd
  2518                           
  2519                           ;program.c: 198:             break;
  2520     04C3  2CCC               	goto	l114
  2521     04C4                     l1230:
  2522     04C4  0877               	movf	lcd_Goto@y,w
  2523                           
  2524                           ; Switch size 1, requested type "simple"
  2525                           ; Number of cases is 2, Range of values is 0 to 1
  2526                           ; switch strategies available:
  2527                           ; Name         Instructions Cycles
  2528                           ; simple_byte            7     4 (average)
  2529                           ; direct_byte           10     6 (fixed)
  2530                           ; jumptable            260     6 (fixed)
  2531                           ;	Chosen strategy is simple_byte
  2532     04C5  3A00               	xorlw	0	; case 0
  2533     04C6  1903               	skipnz
  2534     04C7  2CB2               	goto	l1222
  2535     04C8  3A01               	xorlw	1	; case 1
  2536     04C9  1903               	skipnz
  2537     04CA  2CB8               	goto	l1224
  2538     04CB  2CBE               	goto	l1226
  2539     04CC                     l114:
  2540     04CC  0008               	return
  2541     04CD                     __end_of_lcd_Goto:
  2542                           
  2543                           	psect	text11
  2544     04CD                     __ptext11:	
  2545 ;; *************** function _programInitialize *****************
  2546 ;; Defined at:
  2547 ;;		line 20 in file "program.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0, pclath, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2561 ;;      Params:         0       0       0       0       0       0       0
  2562 ;;      Locals:         0       0       0       0       0       0       0
  2563 ;;      Temps:          0       0       0       0       0       0       0
  2564 ;;      Totals:         0       0       0       0       0       0       0
  2565 ;;Total ram usage:        0 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 6
  2568 ;; This function calls:
  2569 ;;		_lcd_Initialize
  2570 ;; This function is called by:
  2571 ;;		_main
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575     04CD                     _programInitialize:	
  2576                           ;psect for function _programInitialize
  2577                           
  2578     04CD                     l1294:	
  2579                           ;incstack = 0
  2580                           ; Regs used in _programInitialize: [wreg+status,2+status,0+pclath+cstack]
  2581                           
  2582                           
  2583                           ;program.c: 21:     TRISBbits.TRISB6 = 0;
  2584     04CD  0021               	movlb	1	; select bank1
  2585     04CE  130D               	bcf	13,6	;volatile
  2586                           
  2587                           ;program.c: 22:     TRISBbits.TRISB7 = 0;
  2588     04CF  138D               	bcf	13,7	;volatile
  2589                           
  2590                           ;program.c: 24:     LATBbits.LATB7 = 0;
  2591     04D0  0022               	movlb	2	; select bank2
  2592     04D1  138D               	bcf	13,7	;volatile
  2593                           
  2594                           ;program.c: 25:     LATBbits.LATB6 = 0;
  2595     04D2  130D               	bcf	13,6	;volatile
  2596                           
  2597                           ;program.c: 27:     TRISBbits.TRISB5 = 0;
  2598     04D3  0021               	movlb	1	; select bank1
  2599     04D4  128D               	bcf	13,5	;volatile
  2600                           
  2601                           ;program.c: 28:     TRISBbits.TRISB4 = 0;
  2602     04D5  120D               	bcf	13,4	;volatile
  2603                           
  2604                           ;program.c: 29:     TRISBbits.TRISB3 = 0;
  2605     04D6  118D               	bcf	13,3	;volatile
  2606                           
  2607                           ;program.c: 30:     TRISBbits.TRISB2 = 0;
  2608     04D7  110D               	bcf	13,2	;volatile
  2609                           
  2610                           ;program.c: 31:     TRISBbits.TRISB1 = 0;
  2611     04D8  108D               	bcf	13,1	;volatile
  2612                           
  2613                           ;program.c: 32:     TRISCbits.TRISC5 = 0;
  2614     04D9  128E               	bcf	14,5	;volatile
  2615                           
  2616                           ;program.c: 34:     ANSELBbits.ANSB5 = 0;
  2617     04DA  0023               	movlb	3	; select bank3
  2618     04DB  128D               	bcf	13,5	;volatile
  2619                           
  2620                           ;program.c: 35:     ANSELBbits.ANSB4 = 0;
  2621     04DC  120D               	bcf	13,4	;volatile
  2622                           
  2623                           ;program.c: 36:     ANSELBbits.ANSB3 = 0;
  2624     04DD  118D               	bcf	13,3	;volatile
  2625                           
  2626                           ;program.c: 37:     ANSELBbits.ANSB2 = 0;
  2627     04DE  110D               	bcf	13,2	;volatile
  2628                           
  2629                           ;program.c: 38:     ANSELBbits.ANSB1 = 0;
  2630     04DF  108D               	bcf	13,1	;volatile
  2631                           
  2632                           ;program.c: 40:     TRISAbits.TRISA5 = 1;
  2633     04E0  0021               	movlb	1	; select bank1
  2634     04E1  168C               	bsf	12,5	;volatile
  2635                           
  2636                           ;program.c: 41:     TRISCbits.TRISC0 = 1;
  2637     04E2  140E               	bsf	14,0	;volatile
  2638                           
  2639                           ;program.c: 42:     TRISCbits.TRISC2 = 1;
  2640     04E3  150E               	bsf	14,2	;volatile
  2641                           
  2642                           ;program.c: 44:     ANSELAbits.ANSA5 = 0;
  2643     04E4  0023               	movlb	3	; select bank3
  2644     04E5  128C               	bcf	12,5	;volatile
  2645                           
  2646                           ;program.c: 46:     LATBbits.LATB5 = 0;
  2647     04E6  0022               	movlb	2	; select bank2
  2648     04E7  128D               	bcf	13,5	;volatile
  2649                           
  2650                           ;program.c: 47:     LATBbits.LATB4 = 0;
  2651     04E8  120D               	bcf	13,4	;volatile
  2652                           
  2653                           ;program.c: 48:     LATBbits.LATB3 = 0;
  2654     04E9  118D               	bcf	13,3	;volatile
  2655                           
  2656                           ;program.c: 49:     LATBbits.LATB2 = 0;
  2657     04EA  110D               	bcf	13,2	;volatile
  2658                           
  2659                           ;program.c: 50:     LATBbits.LATB1 = 0;
  2660     04EB  108D               	bcf	13,1	;volatile
  2661                           
  2662                           ;program.c: 51:     LATCbits.LATC5 = 0;
  2663     04EC  128E               	bcf	14,5	;volatile
  2664     04ED                     l1296:
  2665                           
  2666                           ;program.c: 53:     lcd_Initialize();
  2667     04ED  3185  251A  3184   	fcall	_lcd_Initialize
  2668     04F0                     l67:
  2669     04F0  0008               	return
  2670     04F1                     __end_of_programInitialize:
  2671                           
  2672                           	psect	text12
  2673     051A                     __ptext12:	
  2674 ;; *************** function _lcd_Initialize *****************
  2675 ;; Defined at:
  2676 ;;		line 161 in file "program.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0, pclath, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2690 ;;      Params:         0       0       0       0       0       0       0
  2691 ;;      Locals:         0       0       0       0       0       0       0
  2692 ;;      Temps:          0       0       0       0       0       0       0
  2693 ;;      Totals:         0       0       0       0       0       0       0
  2694 ;;Total ram usage:        0 bytes
  2695 ;; Hardware stack levels used: 1
  2696 ;; Hardware stack levels required when called: 5
  2697 ;; This function calls:
  2698 ;;		_delay_ms
  2699 ;;		_delay_x24o25us
  2700 ;;		_lcd_PrintCmd
  2701 ;; This function is called by:
  2702 ;;		_programInitialize
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706     051A                     _lcd_Initialize:	
  2707                           ;psect for function _lcd_Initialize
  2708                           
  2709     051A                     l1218:	
  2710                           ;incstack = 0
  2711                           ; Regs used in _lcd_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2712                           
  2713                           
  2714                           ;program.c: 162:     delay_ms(10);
  2715     051A  3000               	movlw	0
  2716     051B  00F9               	movwf	delay_ms@delay+3
  2717     051C  3000               	movlw	0
  2718     051D  00F8               	movwf	delay_ms@delay+2
  2719     051E  3000               	movlw	0
  2720     051F  00F7               	movwf	delay_ms@delay+1
  2721     0520  300A               	movlw	10
  2722     0521  00F6               	movwf	delay_ms@delay
  2723     0522  3184  24F1  3185   	fcall	_delay_ms
  2724                           
  2725                           ;program.c: 165:     lcd_PrintCmd(0x33);
  2726     0525  3033               	movlw	51
  2727     0526  3184  2415  3185   	fcall	_lcd_PrintCmd
  2728                           
  2729                           ;program.c: 166:     lcd_PrintCmd(0x32);
  2730     0529  3032               	movlw	50
  2731     052A  3184  2415  3185   	fcall	_lcd_PrintCmd
  2732                           
  2733                           ;program.c: 169:     lcd_PrintCmd(0x28);
  2734     052D  3028               	movlw	40
  2735     052E  3184  2415  3185   	fcall	_lcd_PrintCmd
  2736                           
  2737                           ;program.c: 170:     lcd_PrintCmd(0x02);
  2738     0531  3002               	movlw	2
  2739     0532  3184  2415  3185   	fcall	_lcd_PrintCmd
  2740                           
  2741                           ;program.c: 171:     lcd_PrintCmd(0x0C);
  2742     0535  300C               	movlw	12
  2743     0536  3184  2415  3185   	fcall	_lcd_PrintCmd
  2744                           
  2745                           ;program.c: 172:     lcd_PrintCmd(0x06);
  2746     0539  3006               	movlw	6
  2747     053A  3184  2415  3185   	fcall	_lcd_PrintCmd
  2748                           
  2749                           ;program.c: 173:     lcd_PrintCmd(0x01);
  2750     053D  3001               	movlw	1
  2751     053E  3184  2415  3185   	fcall	_lcd_PrintCmd
  2752                           
  2753                           ;program.c: 174:     lcd_PrintCmd(0x80);
  2754     0541  3080               	movlw	128
  2755     0542  3184  2415  3185   	fcall	_lcd_PrintCmd
  2756                           
  2757                           ;program.c: 176:     delay_x24o25us(63);
  2758     0545  303F               	movlw	63
  2759     0546  00F2               	movwf	delay_x24o25us@delay
  2760     0547  3000               	movlw	0
  2761     0548  00F3               	movwf	delay_x24o25us@delay+1
  2762     0549  3184  246C  3185   	fcall	_delay_x24o25us
  2763     054C                     l103:
  2764     054C  0008               	return
  2765     054D                     __end_of_lcd_Initialize:
  2766                           
  2767                           	psect	text13
  2768     0415                     __ptext13:	
  2769 ;; *************** function _lcd_PrintCmd *****************
  2770 ;; Defined at:
  2771 ;;		line 154 in file "program.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  command         1    wreg     unsigned char 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  command         1    5[COMMON] unsigned char 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2785 ;;      Params:         0       0       0       0       0       0       0
  2786 ;;      Locals:         1       0       0       0       0       0       0
  2787 ;;      Temps:          0       0       0       0       0       0       0
  2788 ;;      Totals:         1       0       0       0       0       0       0
  2789 ;;Total ram usage:        1 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 4
  2792 ;; This function calls:
  2793 ;;		_lcd_DelaySetupTime
  2794 ;;		_lcd_WriteData
  2795 ;; This function is called by:
  2796 ;;		_lcd_Initialize
  2797 ;;		_lcd_Goto
  2798 ;;		_lcd_ClearAll
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802     0415                     _lcd_PrintCmd:	
  2803                           ;psect for function _lcd_PrintCmd
  2804                           
  2805                           
  2806                           ;incstack = 0
  2807                           ; Regs used in _lcd_PrintCmd: [wreg+status,2+status,0+pclath+cstack]
  2808                           ;lcd_PrintCmd@command stored from wreg
  2809     0415  00F5               	movwf	lcd_PrintCmd@command
  2810     0416                     l1144:
  2811                           
  2812                           ;program.c: 155:     LATBbits.LATB5 = 0;
  2813     0416  0022               	movlb	2	; select bank2
  2814     0417  128D               	bcf	13,5	;volatile
  2815     0418                     l1146:
  2816                           
  2817                           ;program.c: 156:     lcd_DelaySetupTime();
  2818     0418  3183  23F7  3184   	fcall	_lcd_DelaySetupTime
  2819                           
  2820                           ;program.c: 158:     lcd_WriteData(command);
  2821     041B  0875               	movf	lcd_PrintCmd@command,w
  2822     041C  3185  254D  3184   	fcall	_lcd_WriteData
  2823     041F                     l100:
  2824     041F  0008               	return
  2825     0420                     __end_of_lcd_PrintCmd:
  2826                           
  2827                           	psect	text14
  2828     054D                     __ptext14:	
  2829 ;; *************** function _lcd_WriteData *****************
  2830 ;; Defined at:
  2831 ;;		line 133 in file "program.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  data            1    wreg     unsigned char 
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;  data            1    4[COMMON] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0, pclath, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2845 ;;      Params:         0       0       0       0       0       0       0
  2846 ;;      Locals:         1       0       0       0       0       0       0
  2847 ;;      Temps:          2       0       0       0       0       0       0
  2848 ;;      Totals:         3       0       0       0       0       0       0
  2849 ;;Total ram usage:        3 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; Hardware stack levels required when called: 3
  2852 ;; This function calls:
  2853 ;;		_delay_x1o5us
  2854 ;;		_lcd_EPulse
  2855 ;; This function is called by:
  2856 ;;		_lcd_PrintCmd
  2857 ;;		_lcd_PrintChar
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861     054D                     _lcd_WriteData:	
  2862                           ;psect for function _lcd_WriteData
  2863                           
  2864                           
  2865                           ;incstack = 0
  2866                           ; Regs used in _lcd_WriteData: [wreg+status,2+status,0+pclath+cstack]
  2867                           ;lcd_WriteData@data stored from wreg
  2868     054D  00F4               	movwf	lcd_WriteData@data
  2869     054E                     l1100:
  2870                           
  2871                           ;program.c: 135:     LATCbits.LATC5 = (data >> 7) & 0x01;
  2872     054E  0874               	movf	lcd_WriteData@data,w
  2873     054F  00F2               	movwf	??_lcd_WriteData
  2874     0550  3007               	movlw	7
  2875     0551                     u445:
  2876     0551  36F2               	lsrf	??_lcd_WriteData,f
  2877     0552  0B89               	decfsz	9,f
  2878     0553  2D51               	goto	u445
  2879     0554  0872               	movf	??_lcd_WriteData,w
  2880     0555  3901               	andlw	1
  2881     0556  00F3               	movwf	??_lcd_WriteData+1
  2882     0557  0EF3               	swapf	??_lcd_WriteData+1,f
  2883     0558  0DF3               	rlf	??_lcd_WriteData+1,f
  2884     0559  0022               	movlb	2	; select bank2
  2885     055A  080E               	movf	14,w	;volatile
  2886     055B  0673               	xorwf	??_lcd_WriteData+1,w
  2887     055C  39DF               	andlw	-33
  2888     055D  0673               	xorwf	??_lcd_WriteData+1,w
  2889     055E  008E               	movwf	14	;volatile
  2890                           
  2891                           ;program.c: 136:     LATBbits.LATB1 = (data >> 6) & 0x01;
  2892     055F  0874               	movf	lcd_WriteData@data,w
  2893     0560  00F2               	movwf	??_lcd_WriteData
  2894     0561  3006               	movlw	6
  2895     0562                     u455:
  2896     0562  36F2               	lsrf	??_lcd_WriteData,f
  2897     0563  0B89               	decfsz	9,f
  2898     0564  2D62               	goto	u455
  2899     0565  0872               	movf	??_lcd_WriteData,w
  2900     0566  3901               	andlw	1
  2901     0567  00F3               	movwf	??_lcd_WriteData+1
  2902     0568  0DF3               	rlf	??_lcd_WriteData+1,f
  2903     0569  080D               	movf	13,w	;volatile
  2904     056A  0673               	xorwf	??_lcd_WriteData+1,w
  2905     056B  39FD               	andlw	-3
  2906     056C  0673               	xorwf	??_lcd_WriteData+1,w
  2907     056D  008D               	movwf	13	;volatile
  2908                           
  2909                           ;program.c: 137:     LATBbits.LATB2 = (data >> 5) & 0x01;
  2910     056E  0874               	movf	lcd_WriteData@data,w
  2911     056F  00F2               	movwf	??_lcd_WriteData
  2912     0570  3005               	movlw	5
  2913     0571                     u465:
  2914     0571  36F2               	lsrf	??_lcd_WriteData,f
  2915     0572  0B89               	decfsz	9,f
  2916     0573  2D71               	goto	u465
  2917     0574  0872               	movf	??_lcd_WriteData,w
  2918     0575  3901               	andlw	1
  2919     0576  00F3               	movwf	??_lcd_WriteData+1
  2920     0577  0DF3               	rlf	??_lcd_WriteData+1,f
  2921     0578  0DF3               	rlf	??_lcd_WriteData+1,f
  2922     0579  080D               	movf	13,w	;volatile
  2923     057A  0673               	xorwf	??_lcd_WriteData+1,w
  2924     057B  39FB               	andlw	-5
  2925     057C  0673               	xorwf	??_lcd_WriteData+1,w
  2926     057D  008D               	movwf	13	;volatile
  2927                           
  2928                           ;program.c: 138:     LATBbits.LATB3 = (data >> 4) & 0x01;
  2929     057E  0874               	movf	lcd_WriteData@data,w
  2930     057F  00F2               	movwf	??_lcd_WriteData
  2931     0580  3004               	movlw	4
  2932     0581                     u475:
  2933     0581  36F2               	lsrf	??_lcd_WriteData,f
  2934     0582  0B89               	decfsz	9,f
  2935     0583  2D81               	goto	u475
  2936     0584  0872               	movf	??_lcd_WriteData,w
  2937     0585  3901               	andlw	1
  2938     0586  00F3               	movwf	??_lcd_WriteData+1
  2939     0587  0DF3               	rlf	??_lcd_WriteData+1,f
  2940     0588  0DF3               	rlf	??_lcd_WriteData+1,f
  2941     0589  0DF3               	rlf	??_lcd_WriteData+1,f
  2942     058A  080D               	movf	13,w	;volatile
  2943     058B  0673               	xorwf	??_lcd_WriteData+1,w
  2944     058C  39F7               	andlw	-9
  2945     058D  0673               	xorwf	??_lcd_WriteData+1,w
  2946     058E  008D               	movwf	13	;volatile
  2947     058F                     l1102:
  2948                           
  2949                           ;program.c: 140:     lcd_EPulse();
  2950     058F  3184  240A  3185   	fcall	_lcd_EPulse
  2951     0592                     l1104:
  2952                           
  2953                           ;program.c: 143:     LATCbits.LATC5 = (data >> 3) & 0x01;
  2954     0592  0874               	movf	lcd_WriteData@data,w
  2955     0593  00F2               	movwf	??_lcd_WriteData
  2956     0594  3003               	movlw	3
  2957     0595                     u485:
  2958     0595  36F2               	lsrf	??_lcd_WriteData,f
  2959     0596  0B89               	decfsz	9,f
  2960     0597  2D95               	goto	u485
  2961     0598  0872               	movf	??_lcd_WriteData,w
  2962     0599  3901               	andlw	1
  2963     059A  00F3               	movwf	??_lcd_WriteData+1
  2964     059B  0EF3               	swapf	??_lcd_WriteData+1,f
  2965     059C  0DF3               	rlf	??_lcd_WriteData+1,f
  2966     059D  0022               	movlb	2	; select bank2
  2967     059E  080E               	movf	14,w	;volatile
  2968     059F  0673               	xorwf	??_lcd_WriteData+1,w
  2969     05A0  39DF               	andlw	-33
  2970     05A1  0673               	xorwf	??_lcd_WriteData+1,w
  2971     05A2  008E               	movwf	14	;volatile
  2972     05A3                     l1106:
  2973                           
  2974                           ;program.c: 144:     LATBbits.LATB1 = (data >> 2) & 0x01;
  2975     05A3  0874               	movf	lcd_WriteData@data,w
  2976     05A4  00F2               	movwf	??_lcd_WriteData
  2977     05A5  3002               	movlw	2
  2978     05A6                     u495:
  2979     05A6  36F2               	lsrf	??_lcd_WriteData,f
  2980     05A7  0B89               	decfsz	9,f
  2981     05A8  2DA6               	goto	u495
  2982     05A9  0872               	movf	??_lcd_WriteData,w
  2983     05AA  3901               	andlw	1
  2984     05AB  00F3               	movwf	??_lcd_WriteData+1
  2985     05AC  0DF3               	rlf	??_lcd_WriteData+1,f
  2986     05AD  080D               	movf	13,w	;volatile
  2987     05AE  0673               	xorwf	??_lcd_WriteData+1,w
  2988     05AF  39FD               	andlw	-3
  2989     05B0  0673               	xorwf	??_lcd_WriteData+1,w
  2990     05B1  008D               	movwf	13	;volatile
  2991     05B2                     l1108:
  2992                           
  2993                           ;program.c: 145:     LATBbits.LATB2 = (data >> 1) & 0x01;
  2994     05B2  0874               	movf	lcd_WriteData@data,w
  2995     05B3  00F2               	movwf	??_lcd_WriteData
  2996     05B4  3001               	movlw	1
  2997     05B5                     u505:
  2998     05B5  36F2               	lsrf	??_lcd_WriteData,f
  2999     05B6  0B89               	decfsz	9,f
  3000     05B7  2DB5               	goto	u505
  3001     05B8  0872               	movf	??_lcd_WriteData,w
  3002     05B9  3901               	andlw	1
  3003     05BA  00F3               	movwf	??_lcd_WriteData+1
  3004     05BB  0DF3               	rlf	??_lcd_WriteData+1,f
  3005     05BC  0DF3               	rlf	??_lcd_WriteData+1,f
  3006     05BD  080D               	movf	13,w	;volatile
  3007     05BE  0673               	xorwf	??_lcd_WriteData+1,w
  3008     05BF  39FB               	andlw	-5
  3009     05C0  0673               	xorwf	??_lcd_WriteData+1,w
  3010     05C1  008D               	movwf	13	;volatile
  3011     05C2                     l1110:
  3012                           
  3013                           ;program.c: 146:     LATBbits.LATB3 = data & 0x01;
  3014     05C2  0874               	movf	lcd_WriteData@data,w
  3015     05C3  3901               	andlw	1
  3016     05C4  00F2               	movwf	??_lcd_WriteData
  3017     05C5  0DF2               	rlf	??_lcd_WriteData,f
  3018     05C6  0DF2               	rlf	??_lcd_WriteData,f
  3019     05C7  0DF2               	rlf	??_lcd_WriteData,f
  3020     05C8  080D               	movf	13,w	;volatile
  3021     05C9  0672               	xorwf	??_lcd_WriteData,w
  3022     05CA  39F7               	andlw	-9
  3023     05CB  0672               	xorwf	??_lcd_WriteData,w
  3024     05CC  008D               	movwf	13	;volatile
  3025     05CD                     l1112:
  3026                           
  3027                           ;program.c: 148:     lcd_EPulse();
  3028     05CD  3184  240A  3185   	fcall	_lcd_EPulse
  3029     05D0                     l1114:
  3030                           
  3031                           ;program.c: 150:     delay_x1o5us(25);
  3032     05D0  3019               	movlw	25
  3033     05D1  3184  2437  3185   	fcall	_delay_x1o5us
  3034     05D4                     l97:
  3035     05D4  0008               	return
  3036     05D5                     __end_of_lcd_WriteData:
  3037                           
  3038                           	psect	text15
  3039     040A                     __ptext15:	
  3040 ;; *************** function _lcd_EPulse *****************
  3041 ;; Defined at:
  3042 ;;		line 125 in file "program.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;		None
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0, pclath, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3056 ;;      Params:         0       0       0       0       0       0       0
  3057 ;;      Locals:         0       0       0       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0
  3059 ;;      Totals:         0       0       0       0       0       0       0
  3060 ;;Total ram usage:        0 bytes
  3061 ;; Hardware stack levels used: 1
  3062 ;; Hardware stack levels required when called: 2
  3063 ;; This function calls:
  3064 ;;		_lcd_DelayPulse
  3065 ;; This function is called by:
  3066 ;;		_lcd_WriteData
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070     040A                     _lcd_EPulse:	
  3071                           ;psect for function _lcd_EPulse
  3072                           
  3073     040A                     l1092:	
  3074                           ;incstack = 0
  3075                           ; Regs used in _lcd_EPulse: [wreg+status,2+status,0+pclath+cstack]
  3076                           
  3077                           
  3078                           ;program.c: 126:     LATBbits.LATB4 = 1;
  3079     040A  0022               	movlb	2	; select bank2
  3080     040B  160D               	bsf	13,4	;volatile
  3081     040C                     l1094:
  3082                           
  3083                           ;program.c: 127:     lcd_DelayPulse();
  3084     040C  3183  23FC  3184   	fcall	_lcd_DelayPulse
  3085     040F                     l1096:
  3086                           
  3087                           ;program.c: 129:     LATBbits.LATB4 = 0;
  3088     040F  0022               	movlb	2	; select bank2
  3089     0410  120D               	bcf	13,4	;volatile
  3090                           
  3091                           ;program.c: 130:     lcd_DelayPulse();
  3092     0411  3183  23FC  3184   	fcall	_lcd_DelayPulse
  3093     0414                     l94:
  3094     0414  0008               	return
  3095     0415                     __end_of_lcd_EPulse:
  3096                           
  3097                           	psect	text16
  3098     03FC                     __ptext16:	
  3099 ;; *************** function _lcd_DelayPulse *****************
  3100 ;; Defined at:
  3101 ;;		line 120 in file "program.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		wreg, status,2, status,0, pclath, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3115 ;;      Params:         0       0       0       0       0       0       0
  3116 ;;      Locals:         0       0       0       0       0       0       0
  3117 ;;      Temps:          0       0       0       0       0       0       0
  3118 ;;      Totals:         0       0       0       0       0       0       0
  3119 ;;Total ram usage:        0 bytes
  3120 ;; Hardware stack levels used: 1
  3121 ;; Hardware stack levels required when called: 1
  3122 ;; This function calls:
  3123 ;;		_delay_x1o5us
  3124 ;; This function is called by:
  3125 ;;		_lcd_EPulse
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129     03FC                     _lcd_DelayPulse:	
  3130                           ;psect for function _lcd_DelayPulse
  3131                           
  3132     03FC                     l1090:	
  3133                           ;incstack = 0
  3134                           ; Regs used in _lcd_DelayPulse: [wreg+status,2+status,0+pclath+cstack]
  3135                           
  3136                           
  3137                           ;program.c: 122:     delay_x1o5us(200);
  3138     03FC  30C8               	movlw	200
  3139     03FD  3184  2437  3183   	fcall	_delay_x1o5us
  3140     0400                     l91:
  3141     0400  0008               	return
  3142     0401                     __end_of_lcd_DelayPulse:
  3143                           
  3144                           	psect	text17
  3145     03F7                     __ptext17:	
  3146 ;; *************** function _lcd_DelaySetupTime *****************
  3147 ;; Defined at:
  3148 ;;		line 115 in file "program.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3162 ;;      Params:         0       0       0       0       0       0       0
  3163 ;;      Locals:         0       0       0       0       0       0       0
  3164 ;;      Temps:          0       0       0       0       0       0       0
  3165 ;;      Totals:         0       0       0       0       0       0       0
  3166 ;;Total ram usage:        0 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 1
  3169 ;; This function calls:
  3170 ;;		_delay_x1o5us
  3171 ;; This function is called by:
  3172 ;;		_lcd_PrintCmd
  3173 ;;		_lcd_PrintChar
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177     03F7                     _lcd_DelaySetupTime:	
  3178                           ;psect for function _lcd_DelaySetupTime
  3179                           
  3180     03F7                     l1098:	
  3181                           ;incstack = 0
  3182                           ; Regs used in _lcd_DelaySetupTime: [wreg+status,2+status,0+pclath+cstack]
  3183                           
  3184                           
  3185                           ;program.c: 117:     delay_x1o5us(200);
  3186     03F7  30C8               	movlw	200
  3187     03F8  3184  2437  3183   	fcall	_delay_x1o5us
  3188     03FB                     l88:
  3189     03FB  0008               	return
  3190     03FC                     __end_of_lcd_DelaySetupTime:
  3191                           
  3192                           	psect	text18
  3193     04F1                     __ptext18:	
  3194 ;; *************** function _delay_ms *****************
  3195 ;; Defined at:
  3196 ;;		line 15 in file "program.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  delay           4    6[COMMON] unsigned long 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  i               4   10[COMMON] unsigned long 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      void 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0, pclath, cstack
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3210 ;;      Params:         4       0       0       0       0       0       0
  3211 ;;      Locals:         4       0       0       0       0       0       0
  3212 ;;      Temps:          0       0       0       0       0       0       0
  3213 ;;      Totals:         8       0       0       0       0       0       0
  3214 ;;Total ram usage:        8 bytes
  3215 ;; Hardware stack levels used: 1
  3216 ;; Hardware stack levels required when called: 2
  3217 ;; This function calls:
  3218 ;;		_delay_x24o25us
  3219 ;; This function is called by:
  3220 ;;		_programLoop
  3221 ;;		_pb_DelayDebounce
  3222 ;;		_lcd_Initialize
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226     04F1                     _delay_ms:	
  3227                           ;psect for function _delay_ms
  3228                           
  3229     04F1                     l1128:	
  3230                           ;incstack = 0
  3231                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
  3232                           
  3233                           
  3234                           ;program.c: 16:     for(uint32_t i=0; i<delay; i++) delay_x24o25us(41);
  3235     04F1  3000               	movlw	0
  3236     04F2  00FD               	movwf	delay_ms@i+3
  3237     04F3  3000               	movlw	0
  3238     04F4  00FC               	movwf	delay_ms@i+2
  3239     04F5  3000               	movlw	0
  3240     04F6  00FB               	movwf	delay_ms@i+1
  3241     04F7  3000               	movlw	0
  3242     04F8  00FA               	movwf	delay_ms@i
  3243     04F9  2D07               	goto	l1134
  3244     04FA                     l1130:
  3245     04FA  3029               	movlw	41
  3246     04FB  00F2               	movwf	delay_x24o25us@delay
  3247     04FC  3000               	movlw	0
  3248     04FD  00F3               	movwf	delay_x24o25us@delay+1
  3249     04FE  3184  246C  3184   	fcall	_delay_x24o25us
  3250     0501                     l1132:
  3251     0501  3001               	movlw	1
  3252     0502  07FA               	addwf	delay_ms@i,f
  3253     0503  3000               	movlw	0
  3254     0504  3DFB               	addwfc	delay_ms@i+1,f
  3255     0505  3DFC               	addwfc	delay_ms@i+2,f
  3256     0506  3DFD               	addwfc	delay_ms@i+3,f
  3257     0507                     l1134:
  3258     0507  0879               	movf	delay_ms@delay+3,w
  3259     0508  027D               	subwf	delay_ms@i+3,w
  3260     0509  1D03               	skipz
  3261     050A  2D15               	goto	u525
  3262     050B  0878               	movf	delay_ms@delay+2,w
  3263     050C  027C               	subwf	delay_ms@i+2,w
  3264     050D  1D03               	skipz
  3265     050E  2D15               	goto	u525
  3266     050F  0877               	movf	delay_ms@delay+1,w
  3267     0510  027B               	subwf	delay_ms@i+1,w
  3268     0511  1D03               	skipz
  3269     0512  2D15               	goto	u525
  3270     0513  0876               	movf	delay_ms@delay,w
  3271     0514  027A               	subwf	delay_ms@i,w
  3272     0515                     u525:
  3273     0515  1C03               	skipc
  3274     0516  2D18               	goto	u521
  3275     0517  2D19               	goto	u520
  3276     0518                     u521:
  3277     0518  2CFA               	goto	l1130
  3278     0519                     u520:
  3279     0519                     l64:
  3280     0519  0008               	return
  3281     051A                     __end_of_delay_ms:
  3282                           
  3283                           	psect	text19
  3284     046C                     __ptext19:	
  3285 ;; *************** function _delay_x24o25us *****************
  3286 ;; Defined at:
  3287 ;;		line 10 in file "program.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  delay           2    2[COMMON] unsigned short 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  i               2    4[COMMON] unsigned short 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0, pclath, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3301 ;;      Params:         2       0       0       0       0       0       0
  3302 ;;      Locals:         2       0       0       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0       0       0
  3304 ;;      Totals:         4       0       0       0       0       0       0
  3305 ;;Total ram usage:        4 bytes
  3306 ;; Hardware stack levels used: 1
  3307 ;; Hardware stack levels required when called: 1
  3308 ;; This function calls:
  3309 ;;		_delay_x1o5us
  3310 ;; This function is called by:
  3311 ;;		_delay_ms
  3312 ;;		_lcd_Initialize
  3313 ;;		_lcd_ClearAll
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317     046C                     _delay_x24o25us:	
  3318                           ;psect for function _delay_x24o25us
  3319                           
  3320     046C                     l1116:	
  3321                           ;incstack = 0
  3322                           ; Regs used in _delay_x24o25us: [wreg+status,2+status,0+pclath+cstack]
  3323                           
  3324                           
  3325                           ;program.c: 11:     for(uint16_t i=0; i<delay; i++) delay_x1o5us(15);
  3326     046C  01F4               	clrf	delay_x24o25us@i
  3327     046D  01F5               	clrf	delay_x24o25us@i+1
  3328     046E  2C77               	goto	l1122
  3329     046F                     l1118:
  3330     046F  300F               	movlw	15
  3331     0470  3184  2437  3184   	fcall	_delay_x1o5us
  3332     0473                     l1120:
  3333     0473  3001               	movlw	1
  3334     0474  07F4               	addwf	delay_x24o25us@i,f
  3335     0475  3000               	movlw	0
  3336     0476  3DF5               	addwfc	delay_x24o25us@i+1,f
  3337     0477                     l1122:
  3338     0477  0873               	movf	delay_x24o25us@delay+1,w
  3339     0478  0275               	subwf	delay_x24o25us@i+1,w
  3340     0479  1D03               	skipz
  3341     047A  2C7D               	goto	u515
  3342     047B  0872               	movf	delay_x24o25us@delay,w
  3343     047C  0274               	subwf	delay_x24o25us@i,w
  3344     047D                     u515:
  3345     047D  1C03               	skipc
  3346     047E  2C80               	goto	u511
  3347     047F  2C81               	goto	u510
  3348     0480                     u511:
  3349     0480  2C6F               	goto	l1118
  3350     0481                     u510:
  3351     0481                     l58:
  3352     0481  0008               	return
  3353     0482                     __end_of_delay_x24o25us:
  3354                           
  3355                           	psect	text20
  3356     0437                     __ptext20:	
  3357 ;; *************** function _delay_x1o5us *****************
  3358 ;; Defined at:
  3359 ;;		line 5 in file "program.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  delay           1    wreg     unsigned char 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  delay           1    0[COMMON] unsigned char 
  3364 ;;  i               1    1[COMMON] unsigned char 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, status,2, status,0
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3374 ;;      Params:         0       0       0       0       0       0       0
  3375 ;;      Locals:         2       0       0       0       0       0       0
  3376 ;;      Temps:          0       0       0       0       0       0       0
  3377 ;;      Totals:         2       0       0       0       0       0       0
  3378 ;;Total ram usage:        2 bytes
  3379 ;; Hardware stack levels used: 1
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_delay_x24o25us
  3384 ;;		_lcd_DelaySetupTime
  3385 ;;		_lcd_DelayPulse
  3386 ;;		_lcd_WriteData
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390     0437                     _delay_x1o5us:	
  3391                           ;psect for function _delay_x1o5us
  3392                           
  3393                           
  3394                           ;incstack = 0
  3395                           ; Regs used in _delay_x1o5us: [wreg+status,2+status,0]
  3396                           ;delay_x1o5us@delay stored from wreg
  3397     0437  00F0               	movwf	delay_x1o5us@delay
  3398     0438                     l1084:
  3399                           
  3400                           ;program.c: 6:     for(uint8_t i=0; i<delay; i++) __nop();
  3401     0438  01F1               	clrf	delay_x1o5us@i
  3402     0439  2C3D               	goto	l1088
  3403     043A                     l50:
  3404     043A  0000               	nop
  3405     043B                     l1086:
  3406     043B  3001               	movlw	1
  3407     043C  07F1               	addwf	delay_x1o5us@i,f
  3408     043D                     l1088:
  3409     043D  0870               	movf	delay_x1o5us@delay,w
  3410     043E  0271               	subwf	delay_x1o5us@i,w
  3411     043F  1C03               	skipc
  3412     0440  2C42               	goto	u431
  3413     0441  2C43               	goto	u430
  3414     0442                     u431:
  3415     0442  2C3A               	goto	l50
  3416     0443                     u430:
  3417     0443                     l52:
  3418     0443  0008               	return
  3419     0444                     __end_of_delay_x1o5us:
  3420     0001                     ___latbits      equ	1
  3421     007E                     btemp           set	126	;btemp
  3422     007E                     wtemp0          set	126
  3423                           
  3424                           	psect	config
  3425                           
  3426                           ;Config register CONFIG1 @ 0x8007
  3427                           ;	Oscillator Selection
  3428                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  3429                           ;	Watchdog Timer Enable
  3430                           ;	WDTE = OFF, WDT disabled
  3431                           ;	Power-up Timer Enable
  3432                           ;	PWRTE = OFF, PWRT disabled
  3433                           ;	MCLR Pin Function Select
  3434                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3435                           ;	Flash Program Memory Code Protection
  3436                           ;	CP = OFF, Program memory code protection is disabled
  3437                           ;	Data Memory Code Protection
  3438                           ;	CPD = OFF, Data memory code protection is disabled
  3439                           ;	Brown-out Reset Enable
  3440                           ;	BOREN = OFF, Brown-out Reset disabled
  3441                           ;	Clock Out Enable
  3442                           ;	CLKOUTEN = ON, CLKOUT function is enabled on the CLKOUT pin
  3443                           ;	Internal/External Switchover
  3444                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3445                           ;	Fail-Safe Clock Monitor Enable
  3446                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3447     8007                     	org	32775
  3448     8007  01E2               	dw	482
  3449                           
  3450                           ;Config register CONFIG2 @ 0x8008
  3451                           ;	Flash Memory Self-Write Protection
  3452                           ;	WRT = OFF, Write protection off
  3453                           ;	Voltage Regulator Capacitor Enable bit
  3454                           ;	VCAPEN = OFF, Vcap functionality is disabled on RA6.
  3455                           ;	PLL Enable
  3456                           ;	PLLEN = ON, 4x PLL enabled
  3457                           ;	Stack Overflow/Underflow Reset Enable
  3458                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3459                           ;	Brown-out Reset Voltage Selection
  3460                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3461                           ;	Low Power Brown-Out Reset Enable Bit
  3462                           ;	LPBOR = 0x1, unprogrammed default
  3463                           ;	In-Circuit Debugger Mode
  3464                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  3465                           ;	Low-Voltage Programming Enable
  3466                           ;	LVP = ON, Low-voltage programming enabled
  3467     8008                     	org	32776
  3468     8008  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      46
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0

Pointer List with Targets:

    lcd_PrintString@string	PTR unsigned char  size(2) Largest target is 15
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), STR_1(CODE[15]), STR_2(CODE[4]), 
		 -> STR_3(CODE[4]), STR_4(CODE[4]), 

    memset@dest	PTR void  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 

    memset@p	PTR unsigned char  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 

    sp__memset	PTR void  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 


Critical Paths under _main in COMMON

    _programLoop->_delay_ms
    _pb_DelayDebounce->_delay_ms
    _lcd_PrintDigitInt32->___aldiv
    _lcd_PrintString->_lcd_PrintChar
    _lcd_PrintChar->_lcd_WriteData
    _lcd_Goto->_lcd_PrintCmd
    _lcd_Initialize->_delay_ms
    _lcd_PrintCmd->_lcd_WriteData
    _lcd_WriteData->_delay_x1o5us
    _lcd_DelayPulse->_delay_x1o5us
    _lcd_DelaySetupTime->_delay_x1o5us
    _delay_ms->_delay_x24o25us
    _delay_x24o25us->_delay_x1o5us

Critical Paths under _main in BANK0

    _main->_programLoop
    _programLoop->_lcd_PrintDigitInt32

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4242
                  _programInitialize
                        _programLoop
 ---------------------------------------------------------------------------------
 (1) _programLoop                                          5     5      0    3568
                                             41 BANK0      5     5      0
                           _delay_ms
                           _lcd_Goto
                _lcd_PrintDigitInt32
                    _lcd_PrintString
                   _pb_DelayDebounce
 ---------------------------------------------------------------------------------
 (2) _pb_DelayDebounce                                     0     0      0     152
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _lcd_PrintDigitInt32                                 41    34      7    2112
                                              0 BANK0     41    34      7
                            ___aldiv
                             ___bmul
                               _labs
                      _lcd_PrintChar
                    _lcd_PrintString
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               6     1      5     108
                                              0 COMMON     6     1      5
 ---------------------------------------------------------------------------------
 (2) _lcd_PrintString                                      3     1      2     471
                                              6 COMMON     3     1      2
                      _lcd_PrintChar
 ---------------------------------------------------------------------------------
 (3) _lcd_PrintChar                                        1     1      0     420
                                              5 COMMON     1     1      0
                 _lcd_DelaySetupTime
                      _lcd_WriteData
 ---------------------------------------------------------------------------------
 (3) _labs                                                 4     0      4      68
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     109
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     304
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _lcd_Goto                                             2     1      1     522
                                              6 COMMON     2     1      1
                       _lcd_PrintCmd
 ---------------------------------------------------------------------------------
 (1) _programInitialize                                    0     0      0     674
                     _lcd_Initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_Initialize                                       0     0      0     674
                           _delay_ms
                     _delay_x24o25us
                       _lcd_PrintCmd
 ---------------------------------------------------------------------------------
 (3) _lcd_PrintCmd                                         1     1      0     420
                                              5 COMMON     1     1      0
                 _lcd_DelaySetupTime
                      _lcd_WriteData
 ---------------------------------------------------------------------------------
 (4) _lcd_WriteData                                        3     3      0     338
                                              2 COMMON     3     3      0
                       _delay_x1o5us
                         _lcd_EPulse
 ---------------------------------------------------------------------------------
 (5) _lcd_EPulse                                           0     0      0      53
                     _lcd_DelayPulse
 ---------------------------------------------------------------------------------
 (6) _lcd_DelayPulse                                       0     0      0      53
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (4) _lcd_DelaySetupTime                                   0     0      0      53
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             8     4      4     152
                                              6 COMMON     8     4      4
                     _delay_x24o25us
 ---------------------------------------------------------------------------------
 (4) _delay_x24o25us                                       4     2      2     102
                                              2 COMMON     4     2      2
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (5) _delay_x1o5us                                         2     2      0      53
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _programInitialize
     _lcd_Initialize
       _delay_ms
         _delay_x24o25us
           _delay_x1o5us
       _delay_x24o25us
       _lcd_PrintCmd
         _lcd_DelaySetupTime
           _delay_x1o5us
         _lcd_WriteData
           _delay_x1o5us
           _lcd_EPulse
             _lcd_DelayPulse
               _delay_x1o5us
   _programLoop
     _delay_ms
     _lcd_Goto
       _lcd_PrintCmd
     _lcd_PrintDigitInt32
       ___aldiv
       ___bmul
       _labs
       _lcd_PrintChar
         _lcd_DelaySetupTime
         _lcd_WriteData
       _lcd_PrintString
         _lcd_PrintChar
       _memset
     _lcd_PrintString
     _pb_DelayDebounce
       _delay_ms

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BIGRAM             480      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     46      46     57.5%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      60      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Sep 19 23:23:08 2024

                  ??_lcd_PrintCmd 0075                    ___bmul@product 0071                _lcd_DelaySetupTime 03F7  
                              l50 043A                                l52 0443                                l71 069D  
                              l64 0519                                l58 0481                                l74 0727  
                              l91 0400                                l67 04F0                                l85 0436  
                              l94 0414                                l88 03FB                                l97 05D4  
                 ??_lcd_PrintChar 0075                programLoop@counter 004C                               l100 041F  
                             l103 054C                               l114 04CC                               l123 0498  
                             l117 042A                               l135 0752                               l323 0456  
                             l147 07FC                               l362 05E7                               l372 065F  
                             l760 046B                               l766 04AF                               u430 0443  
                             u510 0481                               u431 0442                               u511 0480  
                             u520 0519                               u600 0608                               u521 0518  
                             u505 05B5                               u601 0607                               u530 0498  
                             u515 047D                               u531 0497                               u620 0618  
                             u540 04AF                               u700 076D                               u525 0515  
                             u445 0551                               u621 0617                               u541 04AE  
                             u701 076C                               u550 045B                               u710 07B0  
                             u455 0562                               u615 060C                               u551 045A  
                             u711 07AF                               u640 0631                               u560 044A  
                             u720 07BA                               u800 06FB                               u465 0571  
                             u641 0630                               u561 0449                               u721 07B9  
                             u801 06FA                               u570 0455                               u730 07DB  
                             u810 0701                               u475 0581                               u635 0619  
                             u571 0454                               u731 07DA                               u811 0700  
                             u660 0647                               u580 05DA                               u740 07E4  
                             u485 0595                               u661 0646                               u645 062D  
                             u581 05D9                               u741 07E3                               u670 064C  
                             u590 05EB                               u750 0697                               u495 05A6  
                             u671 064B                               u655 063B                               u591 05EA  
                             u735 07D7                               u751 0696                               u680 0749  
                             u681 0748                               u690 074E                               u770 06B5  
                             u691 074D                               u771 06B4                               u780 06BC  
                             u781 06BB                               u765 06A8                               u790 06C5  
                             u791 06C4               ?_lcd_DelaySetupTime 0070                               wreg 0009  
             _lcd_PrintDigitInt32 0729                              l1100 054E                              l1110 05C2  
                            l1102 058F                              l1120 0473                              l1112 05CD  
                            l1104 0592                              l1200 061F                              l1122 0477  
                            l1130 04FA                              l1114 05D0                              l1106 05A3  
                            l1202 0631                              l1210 0647                              l1116 046C  
                            l1132 0501                              l1108 05B2                              l1220 04B1  
                            l1212 064C                              l1204 0639                              l1124 0421  
                            l1140 048B                              l1300 0663                              l1118 046F  
                            l1134 0507                              l1222 04B2                              l1230 04C4  
                            l1214 0657                              l1206 063A                              l1126 0423  
                            l1142 048F                              l1150 049C                              l1310 068B  
                            l1302 0668                              l1128 04F1                              l1144 0416  
                            l1224 04B8                              l1208 0641                              l1160 045C  
                            l1136 0482                              l1152 04A1                              l1240 0749  
                            l1232 0729                              l1312 0692                              l1304 066F  
                            l1090 03FC                              l1146 0418                              l1218 051A  
                            l1226 04BE                              l1170 044C                              l1138 0483  
                            l1154 04A3                              l1250 077A                              l1242 074E  
                            l1234 072C                              l1330 06CE                              l1322 06B6  
                            l1314 0697                              l1306 0674                              l1084 0438  
                            l1092 040A                              l1180 05D6                              l1172 044E  
                            l1164 0445                              l1156 0457                              l1148 0499  
                            l1260 07B0                              l1252 0796                              l1244 0768  
                            l1236 0738                              l1340 06FB                              l1332 06DD  
                            l1324 06BC                              l1316 0699                              l1308 0685  
                            l1086 043B                              l1094 040C                              l1190 0600  
                            l1182 05DA                              l1174 0455                              l1166 0446  
                            l1158 045B                              l1270 07C3                              l1262 07B2  
                            l1254 079F                              l1246 076D                              l1238 0744  
                            l1350 071F                              l1342 0701                              l1334 06E3  
                            l1326 06C5                              l1318 069F                              l1088 043D  
                            l1096 040F                              l1192 0608                              l1184 05EB  
                            l1168 044A                              l1264 07B4                              l1272 07C6  
                            l1256 07A6                              l1248 0771                              l1344 0705  
                            l1336 06EA                              l1328 06C9                              l1098 03F7  
                            l1194 060B                              l1186 05F6                              l1178 05D5  
                            l1290 07F5                              l1282 07E5                              l1274 07DB  
                            l1266 07BA                              l1258 07A8                              l1346 070A  
                            l1338 06F6                              l1354 0401                              l1196 0614  
                            l1188 05F8                              l1284 07F0                              l1276 07DE  
                            l1268 07BF                              l1292 042B                              l1348 0719  
                            l1356 0404                              l1294 04CD                              l1198 0618  
                            l1286 07F2                              l1278 07DF                              l1296 04ED  
                            l1298 0660                              STR_1 0800                              STR_2 0817  
                            STR_3 080F                              STR_4 0813                 ?_pb_DelayDebounce 0070  
                 ??_lcd_WriteData 0072                              _labs 0457                              _main 0401  
              ??_pb_DelayDebounce 007E                              fsr0h 0005                              fsr1h 0007  
                            indf0 0000                              fsr0l 0004                              indf1 0001  
                            fsr1l 0006                              btemp 007E              ??_lcd_DelaySetupTime 0072  
                            start 0002              ?_lcd_PrintDigitInt32 0020                 ___bmul@multiplier 0072  
            __end_of_delay_x1o5us 0444                 ??_lcd_PrintString 0078                   __end_of___aldiv 0660  
                           ?_labs 0070                             ?_main 0070                             labs@a 0070  
             delay_x24o25us@delay 0072                             status 0003                             wtemp0 007E  
           ??_lcd_PrintDigitInt32 0027                   __initialization 07FD                      __end_of_labs 046C  
                    __end_of_main 040A                            ??_labs 0074                            ??_main 007E  
        lcd_PrintDigitInt32@tempC 0045          lcd_PrintDigitInt32@tempN 0041              __end_of_lcd_PrintCmd 0420  
                __end_of_delay_ms 051A                 delay_x1o5us@delay 0070                  __end_of_lcd_Goto 04CD  
                          ___bmul 0444                         ??___aldiv 0078                            _memset 0499  
                  _delay_x24o25us 046C            programLoop@encoderData 004B            lcd_PrintChar@character 0075  
         __end_of__initialization 07FD     lcd_PrintDigitInt32@numberChar 0036                      ?_programLoop 0070  
             ___bmul@multiplicand 0070                    __pcstackCOMMON 0070               lcd_PrintCmd@command 0075  
          __end_of_delay_x24o25us 0482     lcd_PrintDigitInt32@totalDigit 0047                      _delay_x1o5us 0437  
               _programInitialize 04CD                   _lcd_PrintString 0482                        __pmaintext 0401  
              ?_programInitialize 0070                           ?___bmul 0070                        _lcd_EPulse 040A  
                 ?_delay_x24o25us 0072                           ?_memset 0070               ??_programInitialize 007E  
           __end_of_lcd_PrintChar 042B                         ?_delay_ms 0076                         ?_lcd_Goto 0076  
       __end_of_programInitialize 04F1             __end_of_lcd_WriteData 05D5             lcd_PrintDigitInt32@i1 0048  
           lcd_PrintDigitInt32@i2 0046                           ___aldiv 05D5                      _lcd_PrintCmd 0415  
                         __ptext1 0660                           __ptext2 042B                           __ptext3 0729  
                         __ptext4 0499                           __ptext5 0482                           __ptext6 0420  
                         __ptext7 0457                           __ptext8 0444                           __ptext9 05D5  
                ___aldiv@dividend 0074                        ??_delay_ms 007A                        ??_lcd_Goto 0077  
            end_of_initialization 07FD           __end_of_lcd_PrintString 0499        lcd_PrintDigitInt32@noDigit 0024  
     __end_of_lcd_PrintDigitInt32 07FD                           memset@c 0071                           memset@n 0073  
                         memset@p 0075                  ___aldiv@quotient 007A                       ?_lcd_EPulse 0070  
                       _PORTAbits 000C                         _PORTCbits 000E                         _TRISAbits 008C  
                       _TRISBbits 008D                         _TRISCbits 008E                    _lcd_DelayPulse 03FC  
                   delay_x1o5us@i 0071                  _pb_DelayDebounce 042B                    __end_of___bmul 0457  
                   delay_ms@delay 0076                    __end_of_memset 04B0            __end_of_lcd_DelayPulse 0401  
             start_initialization 07FD                  ?_lcd_PrintString 0076  lcd_PrintDigitInt32@numberRevChar 002B  
                  _lcd_Initialize 051A                  ??_delay_x24o25us 0074                          ??___bmul 0071  
                        ??_memset 0075                        memset@dest 0070                   ?_lcd_DelayPulse 0070  
                       ___latbits 0001                     __pcstackBANK0 0020            __end_of_lcd_Initialize 054D  
                        ?___aldiv 0070                   ?_lcd_Initialize 0070                   ___aldiv@divisor 0070  
      __end_of_lcd_DelaySetupTime 03FC                   ___aldiv@counter 0078                          _LATBbits 010D  
                        _LATCbits 010E                         delay_ms@i 007A                      ??_lcd_EPulse 0072  
                       lcd_Goto@x 0076                         lcd_Goto@y 0077                 lcd_WriteData@data 0074  
        __end_of_pb_DelayDebounce 0437                __end_of_lcd_EPulse 0415                     ??_programLoop 0049  
                      _ANSELAbits 018C                        _ANSELBbits 018D                     _lcd_PrintChar 0420  
                        _delay_ms 04F1                          __ptext10 04B0                          __ptext11 04CD  
                        __ptext20 0437                          __ptext12 051A                          __ptext13 0415  
                        __ptext14 054D                          __ptext15 040A                          __ptext16 03FC  
                        __ptext17 03F7                          __ptext18 04F1                          __ptext19 046C  
                        _lcd_Goto 04B0                     ?_delay_x1o5us 0070                     _lcd_WriteData 054D  
             __end_of_programLoop 0729                  ??_lcd_DelayPulse 0072                    ?_lcd_PrintChar 0070  
                  ??_delay_x1o5us 0070                    ?_lcd_WriteData 0070         lcd_PrintDigitInt32@enSign 0025  
       lcd_PrintDigitInt32@enZero 0026         lcd_PrintDigitInt32@number 0020                   delay_x24o25us@i 0074  
                   ?_lcd_PrintCmd 0070                     __pstringtext1 0800                     __pstringtext2 080F  
                   __pstringtext3 0813                     __pstringtext4 0817                     __pstringtext5 0000  
                    ___aldiv@sign 0079                  ??_lcd_Initialize 007E             lcd_PrintString@string 0076  
                     _programLoop 0660  
