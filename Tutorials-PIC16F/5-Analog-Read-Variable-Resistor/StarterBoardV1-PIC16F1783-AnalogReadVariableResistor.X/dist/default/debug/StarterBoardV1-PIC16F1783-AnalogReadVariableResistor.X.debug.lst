

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Sep 20 23:07:14 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1783
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Generated 07/09/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F1783 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68     0008                     bsr             equ	8
    69     0005                     fsr0h           equ	5
    70     0004                     fsr0l           equ	4
    71     0007                     fsr1h           equ	7
    72     0006                     fsr1l           equ	6
    73     0000                     indf            equ	0
    74     0000                     indf0           equ	0
    75     0001                     indf1           equ	1
    76     000B                     intcon          equ	11
    77     0002                     pc              equ	2
    78     0002                     pcl             equ	2
    79     000A                     pclath          equ	10
    80     0003                     status          equ	3
    81     0009                     wreg            equ	9
    82     0000                     INDF0           equ	0	;# 
    83     0001                     INDF1           equ	1	;# 
    84     0002                     PCL             equ	2	;# 
    85     0003                     STATUS          equ	3	;# 
    86     0004                     FSR0L           equ	4	;# 
    87     0005                     FSR0H           equ	5	;# 
    88     0006                     FSR1L           equ	6	;# 
    89     0007                     FSR1H           equ	7	;# 
    90     0008                     BSR             equ	8	;# 
    91     0009                     WREG            equ	9	;# 
    92     000A                     PCLATH          equ	10	;# 
    93     000B                     INTCON          equ	11	;# 
    94     000C                     PORTA           equ	12	;# 
    95     000D                     PORTB           equ	13	;# 
    96     000E                     PORTC           equ	14	;# 
    97     0010                     PORTE           equ	16	;# 
    98     0011                     PIR1            equ	17	;# 
    99     0012                     PIR2            equ	18	;# 
   100     0014                     PIR4            equ	20	;# 
   101     0015                     TMR0            equ	21	;# 
   102     0016                     TMR1            equ	22	;# 
   103     0016                     TMR1L           equ	22	;# 
   104     0017                     TMR1H           equ	23	;# 
   105     0018                     T1CON           equ	24	;# 
   106     0019                     T1GCON          equ	25	;# 
   107     001A                     TMR2            equ	26	;# 
   108     001B                     PR2             equ	27	;# 
   109     001C                     T2CON           equ	28	;# 
   110     008C                     TRISA           equ	140	;# 
   111     008D                     TRISB           equ	141	;# 
   112     008E                     TRISC           equ	142	;# 
   113     0090                     TRISE           equ	144	;# 
   114     0091                     PIE1            equ	145	;# 
   115     0092                     PIE2            equ	146	;# 
   116     0094                     PIE4            equ	148	;# 
   117     0095                     OPTION_REG      equ	149	;# 
   118     0096                     PCON            equ	150	;# 
   119     0097                     WDTCON          equ	151	;# 
   120     0098                     OSCTUNE         equ	152	;# 
   121     0099                     OSCCON          equ	153	;# 
   122     009A                     OSCSTAT         equ	154	;# 
   123     009B                     ADRES           equ	155	;# 
   124     009B                     ADRESL          equ	155	;# 
   125     009C                     ADRESH          equ	156	;# 
   126     009D                     ADCON0          equ	157	;# 
   127     009E                     ADCON1          equ	158	;# 
   128     009F                     ADCON2          equ	159	;# 
   129     010C                     LATA            equ	268	;# 
   130     010D                     LATB            equ	269	;# 
   131     010E                     LATC            equ	270	;# 
   132     0111                     CM1CON0         equ	273	;# 
   133     0112                     CM1CON1         equ	274	;# 
   134     0113                     CM2CON0         equ	275	;# 
   135     0114                     CM2CON1         equ	276	;# 
   136     0115                     CMOUT           equ	277	;# 
   137     0116                     BORCON          equ	278	;# 
   138     0117                     FVRCON          equ	279	;# 
   139     0118                     DACCON0         equ	280	;# 
   140     0119                     DACCON1         equ	281	;# 
   141     011D                     APFCON          equ	285	;# 
   142     011D                     APFCON0         equ	285	;# 
   143     011E                     CM3CON0         equ	286	;# 
   144     011F                     CM3CON1         equ	287	;# 
   145     018C                     ANSELA          equ	396	;# 
   146     018D                     ANSELB          equ	397	;# 
   147     0191                     EEADR           equ	401	;# 
   148     0191                     EEADRL          equ	401	;# 
   149     0192                     EEADRH          equ	402	;# 
   150     0193                     EEDAT           equ	403	;# 
   151     0193                     EEDATL          equ	403	;# 
   152     0193                     EEDATA          equ	403	;# 
   153     0194                     EEDATH          equ	404	;# 
   154     0195                     EECON1          equ	405	;# 
   155     0196                     EECON2          equ	406	;# 
   156     0197                     VREGCON         equ	407	;# 
   157     0199                     RC1REG          equ	409	;# 
   158     0199                     RCREG           equ	409	;# 
   159     0199                     RCREG1          equ	409	;# 
   160     019A                     TX1REG          equ	410	;# 
   161     019A                     TXREG1          equ	410	;# 
   162     019A                     TXREG           equ	410	;# 
   163     019B                     SP1BRG          equ	411	;# 
   164     019B                     SPBRG           equ	411	;# 
   165     019B                     SP1BRGL         equ	411	;# 
   166     019B                     SPBRG1          equ	411	;# 
   167     019B                     SPBRGL          equ	411	;# 
   168     019C                     SP1BRGH         equ	412	;# 
   169     019C                     SPBRGH          equ	412	;# 
   170     019C                     SPBRGH1         equ	412	;# 
   171     019D                     RC1STA          equ	413	;# 
   172     019D                     RCSTA1          equ	413	;# 
   173     019D                     RCSTA           equ	413	;# 
   174     019E                     TX1STA          equ	414	;# 
   175     019E                     TXSTA1          equ	414	;# 
   176     019E                     TXSTA           equ	414	;# 
   177     019F                     BAUD1CON        equ	415	;# 
   178     019F                     BAUDCON1        equ	415	;# 
   179     019F                     BAUDCTL1        equ	415	;# 
   180     019F                     BAUDCON         equ	415	;# 
   181     019F                     BAUDCTL         equ	415	;# 
   182     020C                     WPUA            equ	524	;# 
   183     020D                     WPUB            equ	525	;# 
   184     020E                     WPUC            equ	526	;# 
   185     0210                     WPUE            equ	528	;# 
   186     0211                     SSPBUF          equ	529	;# 
   187     0211                     SSP1BUF         equ	529	;# 
   188     0212                     SSPADD          equ	530	;# 
   189     0212                     SSP1ADD         equ	530	;# 
   190     0213                     SSPMSK          equ	531	;# 
   191     0213                     SSP1MSK         equ	531	;# 
   192     0214                     SSPSTAT         equ	532	;# 
   193     0214                     SSP1STAT        equ	532	;# 
   194     0215                     SSPCON1         equ	533	;# 
   195     0215                     SSP1CON         equ	533	;# 
   196     0215                     SSPCON          equ	533	;# 
   197     0216                     SSPCON2         equ	534	;# 
   198     0216                     SSP1CON2        equ	534	;# 
   199     0217                     SSPCON3         equ	535	;# 
   200     0217                     SSP1CON3        equ	535	;# 
   201     028C                     ODCONA          equ	652	;# 
   202     028D                     ODCONB          equ	653	;# 
   203     028E                     ODCONC          equ	654	;# 
   204     0291                     CCPR1           equ	657	;# 
   205     0291                     CCPR1L          equ	657	;# 
   206     0292                     CCPR1H          equ	658	;# 
   207     0293                     CCP1CON         equ	659	;# 
   208     0298                     CCPR2           equ	664	;# 
   209     0298                     CCPR2L          equ	664	;# 
   210     0299                     CCPR2H          equ	665	;# 
   211     029A                     CCP2CON         equ	666	;# 
   212     030C                     SLRCONA         equ	780	;# 
   213     030D                     SLRCONB         equ	781	;# 
   214     030E                     SLRCONC         equ	782	;# 
   215     038C                     INLVLA          equ	908	;# 
   216     038D                     INLVLB          equ	909	;# 
   217     038E                     INLVLC          equ	910	;# 
   218     0390                     INLVLE          equ	912	;# 
   219     0391                     IOCAP           equ	913	;# 
   220     0392                     IOCAN           equ	914	;# 
   221     0393                     IOCAF           equ	915	;# 
   222     0394                     IOCBP           equ	916	;# 
   223     0395                     IOCBN           equ	917	;# 
   224     0396                     IOCBF           equ	918	;# 
   225     0397                     IOCCP           equ	919	;# 
   226     0398                     IOCCN           equ	920	;# 
   227     0399                     IOCCF           equ	921	;# 
   228     039D                     IOCEP           equ	925	;# 
   229     039E                     IOCEN           equ	926	;# 
   230     039F                     IOCEF           equ	927	;# 
   231     0511                     OPA1CON         equ	1297	;# 
   232     0513                     OPA2CON         equ	1299	;# 
   233     051A                     CLKRCON         equ	1306	;# 
   234     0811                     PSMC1CON        equ	2065	;# 
   235     0812                     PSMC1MDL        equ	2066	;# 
   236     0813                     PSMC1SYNC       equ	2067	;# 
   237     0814                     PSMC1CLK        equ	2068	;# 
   238     0815                     PSMC1OEN        equ	2069	;# 
   239     0816                     PSMC1POL        equ	2070	;# 
   240     0817                     PSMC1BLNK       equ	2071	;# 
   241     0818                     PSMC1REBS       equ	2072	;# 
   242     0819                     PSMC1FEBS       equ	2073	;# 
   243     081A                     PSMC1PHS        equ	2074	;# 
   244     081B                     PSMC1DCS        equ	2075	;# 
   245     081C                     PSMC1PRS        equ	2076	;# 
   246     081D                     PSMC1ASDC       equ	2077	;# 
   247     081E                     PSMC1ASDL       equ	2078	;# 
   248     081F                     PSMC1ASDS       equ	2079	;# 
   249     0820                     PSMC1INT        equ	2080	;# 
   250     0821                     PSMC1PH         equ	2081	;# 
   251     0821                     PSMC1PHL        equ	2081	;# 
   252     0822                     PSMC1PHH        equ	2082	;# 
   253     0823                     PSMC1DC         equ	2083	;# 
   254     0823                     PSMC1DCL        equ	2083	;# 
   255     0824                     PSMC1DCH        equ	2084	;# 
   256     0825                     PSMC1PR         equ	2085	;# 
   257     0825                     PSMC1PRL        equ	2085	;# 
   258     0826                     PSMC1PRH        equ	2086	;# 
   259     0827                     PSMC1TMR        equ	2087	;# 
   260     0827                     PSMC1TMRL       equ	2087	;# 
   261     0828                     PSMC1TMRH       equ	2088	;# 
   262     0829                     PSMC1DBR        equ	2089	;# 
   263     082A                     PSMC1DBF        equ	2090	;# 
   264     082B                     PSMC1BLKR       equ	2091	;# 
   265     082C                     PSMC1BLKF       equ	2092	;# 
   266     082D                     PSMC1FFA        equ	2093	;# 
   267     082E                     PSMC1STR0       equ	2094	;# 
   268     082F                     PSMC1STR1       equ	2095	;# 
   269     0831                     PSMC2CON        equ	2097	;# 
   270     0832                     PSMC2MDL        equ	2098	;# 
   271     0833                     PSMC2SYNC       equ	2099	;# 
   272     0834                     PSMC2CLK        equ	2100	;# 
   273     0835                     PSMC2OEN        equ	2101	;# 
   274     0836                     PSMC2POL        equ	2102	;# 
   275     0837                     PSMC2BLNK       equ	2103	;# 
   276     0838                     PSMC2REBS       equ	2104	;# 
   277     0839                     PSMC2FEBS       equ	2105	;# 
   278     083A                     PSMC2PHS        equ	2106	;# 
   279     083B                     PSMC2DCS        equ	2107	;# 
   280     083C                     PSMC2PRS        equ	2108	;# 
   281     083D                     PSMC2ASDC       equ	2109	;# 
   282     083E                     PSMC2ASDL       equ	2110	;# 
   283     083F                     PSMC2ASDS       equ	2111	;# 
   284     0840                     PSMC2INT        equ	2112	;# 
   285     0841                     PSMC2PH         equ	2113	;# 
   286     0841                     PSMC2PHL        equ	2113	;# 
   287     0842                     PSMC2PHH        equ	2114	;# 
   288     0843                     PSMC2DC         equ	2115	;# 
   289     0843                     PSMC2DCL        equ	2115	;# 
   290     0844                     PSMC2DCH        equ	2116	;# 
   291     0845                     PSMC2PR         equ	2117	;# 
   292     0845                     PSMC2PRL        equ	2117	;# 
   293     0846                     PSMC2PRH        equ	2118	;# 
   294     0847                     PSMC2TMR        equ	2119	;# 
   295     0847                     PSMC2TMRL       equ	2119	;# 
   296     0848                     PSMC2TMRH       equ	2120	;# 
   297     0849                     PSMC2DBR        equ	2121	;# 
   298     084A                     PSMC2DBF        equ	2122	;# 
   299     084B                     PSMC2BLKR       equ	2123	;# 
   300     084C                     PSMC2BLKF       equ	2124	;# 
   301     084D                     PSMC2FFA        equ	2125	;# 
   302     084E                     PSMC2STR0       equ	2126	;# 
   303     084F                     PSMC2STR1       equ	2127	;# 
   304     0FE4                     STATUS_SHAD     equ	4068	;# 
   305     0FE5                     WREG_SHAD       equ	4069	;# 
   306     0FE6                     BSR_SHAD        equ	4070	;# 
   307     0FE7                     PCLATH_SHAD     equ	4071	;# 
   308     0FE8                     FSR0L_SHAD      equ	4072	;# 
   309     0FE9                     FSR0H_SHAD      equ	4073	;# 
   310     0FEA                     FSR1L_SHAD      equ	4074	;# 
   311     0FEB                     FSR1H_SHAD      equ	4075	;# 
   312     0FED                     STKPTR          equ	4077	;# 
   313     0FEE                     TOSL            equ	4078	;# 
   314     0FEF                     TOSH            equ	4079	;# 
   315     0000                     INDF0           equ	0	;# 
   316     0001                     INDF1           equ	1	;# 
   317     0002                     PCL             equ	2	;# 
   318     0003                     STATUS          equ	3	;# 
   319     0004                     FSR0L           equ	4	;# 
   320     0005                     FSR0H           equ	5	;# 
   321     0006                     FSR1L           equ	6	;# 
   322     0007                     FSR1H           equ	7	;# 
   323     0008                     BSR             equ	8	;# 
   324     0009                     WREG            equ	9	;# 
   325     000A                     PCLATH          equ	10	;# 
   326     000B                     INTCON          equ	11	;# 
   327     000C                     PORTA           equ	12	;# 
   328     000D                     PORTB           equ	13	;# 
   329     000E                     PORTC           equ	14	;# 
   330     0010                     PORTE           equ	16	;# 
   331     0011                     PIR1            equ	17	;# 
   332     0012                     PIR2            equ	18	;# 
   333     0014                     PIR4            equ	20	;# 
   334     0015                     TMR0            equ	21	;# 
   335     0016                     TMR1            equ	22	;# 
   336     0016                     TMR1L           equ	22	;# 
   337     0017                     TMR1H           equ	23	;# 
   338     0018                     T1CON           equ	24	;# 
   339     0019                     T1GCON          equ	25	;# 
   340     001A                     TMR2            equ	26	;# 
   341     001B                     PR2             equ	27	;# 
   342     001C                     T2CON           equ	28	;# 
   343     008C                     TRISA           equ	140	;# 
   344     008D                     TRISB           equ	141	;# 
   345     008E                     TRISC           equ	142	;# 
   346     0090                     TRISE           equ	144	;# 
   347     0091                     PIE1            equ	145	;# 
   348     0092                     PIE2            equ	146	;# 
   349     0094                     PIE4            equ	148	;# 
   350     0095                     OPTION_REG      equ	149	;# 
   351     0096                     PCON            equ	150	;# 
   352     0097                     WDTCON          equ	151	;# 
   353     0098                     OSCTUNE         equ	152	;# 
   354     0099                     OSCCON          equ	153	;# 
   355     009A                     OSCSTAT         equ	154	;# 
   356     009B                     ADRES           equ	155	;# 
   357     009B                     ADRESL          equ	155	;# 
   358     009C                     ADRESH          equ	156	;# 
   359     009D                     ADCON0          equ	157	;# 
   360     009E                     ADCON1          equ	158	;# 
   361     009F                     ADCON2          equ	159	;# 
   362     010C                     LATA            equ	268	;# 
   363     010D                     LATB            equ	269	;# 
   364     010E                     LATC            equ	270	;# 
   365     0111                     CM1CON0         equ	273	;# 
   366     0112                     CM1CON1         equ	274	;# 
   367     0113                     CM2CON0         equ	275	;# 
   368     0114                     CM2CON1         equ	276	;# 
   369     0115                     CMOUT           equ	277	;# 
   370     0116                     BORCON          equ	278	;# 
   371     0117                     FVRCON          equ	279	;# 
   372     0118                     DACCON0         equ	280	;# 
   373     0119                     DACCON1         equ	281	;# 
   374     011D                     APFCON          equ	285	;# 
   375     011D                     APFCON0         equ	285	;# 
   376     011E                     CM3CON0         equ	286	;# 
   377     011F                     CM3CON1         equ	287	;# 
   378     018C                     ANSELA          equ	396	;# 
   379     018D                     ANSELB          equ	397	;# 
   380     0191                     EEADR           equ	401	;# 
   381     0191                     EEADRL          equ	401	;# 
   382     0192                     EEADRH          equ	402	;# 
   383     0193                     EEDAT           equ	403	;# 
   384     0193                     EEDATL          equ	403	;# 
   385     0193                     EEDATA          equ	403	;# 
   386     0194                     EEDATH          equ	404	;# 
   387     0195                     EECON1          equ	405	;# 
   388     0196                     EECON2          equ	406	;# 
   389     0197                     VREGCON         equ	407	;# 
   390     0199                     RC1REG          equ	409	;# 
   391     0199                     RCREG           equ	409	;# 
   392     0199                     RCREG1          equ	409	;# 
   393     019A                     TX1REG          equ	410	;# 
   394     019A                     TXREG1          equ	410	;# 
   395     019A                     TXREG           equ	410	;# 
   396     019B                     SP1BRG          equ	411	;# 
   397     019B                     SPBRG           equ	411	;# 
   398     019B                     SP1BRGL         equ	411	;# 
   399     019B                     SPBRG1          equ	411	;# 
   400     019B                     SPBRGL          equ	411	;# 
   401     019C                     SP1BRGH         equ	412	;# 
   402     019C                     SPBRGH          equ	412	;# 
   403     019C                     SPBRGH1         equ	412	;# 
   404     019D                     RC1STA          equ	413	;# 
   405     019D                     RCSTA1          equ	413	;# 
   406     019D                     RCSTA           equ	413	;# 
   407     019E                     TX1STA          equ	414	;# 
   408     019E                     TXSTA1          equ	414	;# 
   409     019E                     TXSTA           equ	414	;# 
   410     019F                     BAUD1CON        equ	415	;# 
   411     019F                     BAUDCON1        equ	415	;# 
   412     019F                     BAUDCTL1        equ	415	;# 
   413     019F                     BAUDCON         equ	415	;# 
   414     019F                     BAUDCTL         equ	415	;# 
   415     020C                     WPUA            equ	524	;# 
   416     020D                     WPUB            equ	525	;# 
   417     020E                     WPUC            equ	526	;# 
   418     0210                     WPUE            equ	528	;# 
   419     0211                     SSPBUF          equ	529	;# 
   420     0211                     SSP1BUF         equ	529	;# 
   421     0212                     SSPADD          equ	530	;# 
   422     0212                     SSP1ADD         equ	530	;# 
   423     0213                     SSPMSK          equ	531	;# 
   424     0213                     SSP1MSK         equ	531	;# 
   425     0214                     SSPSTAT         equ	532	;# 
   426     0214                     SSP1STAT        equ	532	;# 
   427     0215                     SSPCON1         equ	533	;# 
   428     0215                     SSP1CON         equ	533	;# 
   429     0215                     SSPCON          equ	533	;# 
   430     0216                     SSPCON2         equ	534	;# 
   431     0216                     SSP1CON2        equ	534	;# 
   432     0217                     SSPCON3         equ	535	;# 
   433     0217                     SSP1CON3        equ	535	;# 
   434     028C                     ODCONA          equ	652	;# 
   435     028D                     ODCONB          equ	653	;# 
   436     028E                     ODCONC          equ	654	;# 
   437     0291                     CCPR1           equ	657	;# 
   438     0291                     CCPR1L          equ	657	;# 
   439     0292                     CCPR1H          equ	658	;# 
   440     0293                     CCP1CON         equ	659	;# 
   441     0298                     CCPR2           equ	664	;# 
   442     0298                     CCPR2L          equ	664	;# 
   443     0299                     CCPR2H          equ	665	;# 
   444     029A                     CCP2CON         equ	666	;# 
   445     030C                     SLRCONA         equ	780	;# 
   446     030D                     SLRCONB         equ	781	;# 
   447     030E                     SLRCONC         equ	782	;# 
   448     038C                     INLVLA          equ	908	;# 
   449     038D                     INLVLB          equ	909	;# 
   450     038E                     INLVLC          equ	910	;# 
   451     0390                     INLVLE          equ	912	;# 
   452     0391                     IOCAP           equ	913	;# 
   453     0392                     IOCAN           equ	914	;# 
   454     0393                     IOCAF           equ	915	;# 
   455     0394                     IOCBP           equ	916	;# 
   456     0395                     IOCBN           equ	917	;# 
   457     0396                     IOCBF           equ	918	;# 
   458     0397                     IOCCP           equ	919	;# 
   459     0398                     IOCCN           equ	920	;# 
   460     0399                     IOCCF           equ	921	;# 
   461     039D                     IOCEP           equ	925	;# 
   462     039E                     IOCEN           equ	926	;# 
   463     039F                     IOCEF           equ	927	;# 
   464     0511                     OPA1CON         equ	1297	;# 
   465     0513                     OPA2CON         equ	1299	;# 
   466     051A                     CLKRCON         equ	1306	;# 
   467     0811                     PSMC1CON        equ	2065	;# 
   468     0812                     PSMC1MDL        equ	2066	;# 
   469     0813                     PSMC1SYNC       equ	2067	;# 
   470     0814                     PSMC1CLK        equ	2068	;# 
   471     0815                     PSMC1OEN        equ	2069	;# 
   472     0816                     PSMC1POL        equ	2070	;# 
   473     0817                     PSMC1BLNK       equ	2071	;# 
   474     0818                     PSMC1REBS       equ	2072	;# 
   475     0819                     PSMC1FEBS       equ	2073	;# 
   476     081A                     PSMC1PHS        equ	2074	;# 
   477     081B                     PSMC1DCS        equ	2075	;# 
   478     081C                     PSMC1PRS        equ	2076	;# 
   479     081D                     PSMC1ASDC       equ	2077	;# 
   480     081E                     PSMC1ASDL       equ	2078	;# 
   481     081F                     PSMC1ASDS       equ	2079	;# 
   482     0820                     PSMC1INT        equ	2080	;# 
   483     0821                     PSMC1PH         equ	2081	;# 
   484     0821                     PSMC1PHL        equ	2081	;# 
   485     0822                     PSMC1PHH        equ	2082	;# 
   486     0823                     PSMC1DC         equ	2083	;# 
   487     0823                     PSMC1DCL        equ	2083	;# 
   488     0824                     PSMC1DCH        equ	2084	;# 
   489     0825                     PSMC1PR         equ	2085	;# 
   490     0825                     PSMC1PRL        equ	2085	;# 
   491     0826                     PSMC1PRH        equ	2086	;# 
   492     0827                     PSMC1TMR        equ	2087	;# 
   493     0827                     PSMC1TMRL       equ	2087	;# 
   494     0828                     PSMC1TMRH       equ	2088	;# 
   495     0829                     PSMC1DBR        equ	2089	;# 
   496     082A                     PSMC1DBF        equ	2090	;# 
   497     082B                     PSMC1BLKR       equ	2091	;# 
   498     082C                     PSMC1BLKF       equ	2092	;# 
   499     082D                     PSMC1FFA        equ	2093	;# 
   500     082E                     PSMC1STR0       equ	2094	;# 
   501     082F                     PSMC1STR1       equ	2095	;# 
   502     0831                     PSMC2CON        equ	2097	;# 
   503     0832                     PSMC2MDL        equ	2098	;# 
   504     0833                     PSMC2SYNC       equ	2099	;# 
   505     0834                     PSMC2CLK        equ	2100	;# 
   506     0835                     PSMC2OEN        equ	2101	;# 
   507     0836                     PSMC2POL        equ	2102	;# 
   508     0837                     PSMC2BLNK       equ	2103	;# 
   509     0838                     PSMC2REBS       equ	2104	;# 
   510     0839                     PSMC2FEBS       equ	2105	;# 
   511     083A                     PSMC2PHS        equ	2106	;# 
   512     083B                     PSMC2DCS        equ	2107	;# 
   513     083C                     PSMC2PRS        equ	2108	;# 
   514     083D                     PSMC2ASDC       equ	2109	;# 
   515     083E                     PSMC2ASDL       equ	2110	;# 
   516     083F                     PSMC2ASDS       equ	2111	;# 
   517     0840                     PSMC2INT        equ	2112	;# 
   518     0841                     PSMC2PH         equ	2113	;# 
   519     0841                     PSMC2PHL        equ	2113	;# 
   520     0842                     PSMC2PHH        equ	2114	;# 
   521     0843                     PSMC2DC         equ	2115	;# 
   522     0843                     PSMC2DCL        equ	2115	;# 
   523     0844                     PSMC2DCH        equ	2116	;# 
   524     0845                     PSMC2PR         equ	2117	;# 
   525     0845                     PSMC2PRL        equ	2117	;# 
   526     0846                     PSMC2PRH        equ	2118	;# 
   527     0847                     PSMC2TMR        equ	2119	;# 
   528     0847                     PSMC2TMRL       equ	2119	;# 
   529     0848                     PSMC2TMRH       equ	2120	;# 
   530     0849                     PSMC2DBR        equ	2121	;# 
   531     084A                     PSMC2DBF        equ	2122	;# 
   532     084B                     PSMC2BLKR       equ	2123	;# 
   533     084C                     PSMC2BLKF       equ	2124	;# 
   534     084D                     PSMC2FFA        equ	2125	;# 
   535     084E                     PSMC2STR0       equ	2126	;# 
   536     084F                     PSMC2STR1       equ	2127	;# 
   537     0FE4                     STATUS_SHAD     equ	4068	;# 
   538     0FE5                     WREG_SHAD       equ	4069	;# 
   539     0FE6                     BSR_SHAD        equ	4070	;# 
   540     0FE7                     PCLATH_SHAD     equ	4071	;# 
   541     0FE8                     FSR0L_SHAD      equ	4072	;# 
   542     0FE9                     FSR0H_SHAD      equ	4073	;# 
   543     0FEA                     FSR1L_SHAD      equ	4074	;# 
   544     0FEB                     FSR1H_SHAD      equ	4075	;# 
   545     0FED                     STKPTR          equ	4077	;# 
   546     0FEE                     TOSL            equ	4078	;# 
   547     0FEF                     TOSH            equ	4079	;# 
   548     0000                     INDF0           equ	0	;# 
   549     0001                     INDF1           equ	1	;# 
   550     0002                     PCL             equ	2	;# 
   551     0003                     STATUS          equ	3	;# 
   552     0004                     FSR0L           equ	4	;# 
   553     0005                     FSR0H           equ	5	;# 
   554     0006                     FSR1L           equ	6	;# 
   555     0007                     FSR1H           equ	7	;# 
   556     0008                     BSR             equ	8	;# 
   557     0009                     WREG            equ	9	;# 
   558     000A                     PCLATH          equ	10	;# 
   559     000B                     INTCON          equ	11	;# 
   560     000C                     PORTA           equ	12	;# 
   561     000D                     PORTB           equ	13	;# 
   562     000E                     PORTC           equ	14	;# 
   563     0010                     PORTE           equ	16	;# 
   564     0011                     PIR1            equ	17	;# 
   565     0012                     PIR2            equ	18	;# 
   566     0014                     PIR4            equ	20	;# 
   567     0015                     TMR0            equ	21	;# 
   568     0016                     TMR1            equ	22	;# 
   569     0016                     TMR1L           equ	22	;# 
   570     0017                     TMR1H           equ	23	;# 
   571     0018                     T1CON           equ	24	;# 
   572     0019                     T1GCON          equ	25	;# 
   573     001A                     TMR2            equ	26	;# 
   574     001B                     PR2             equ	27	;# 
   575     001C                     T2CON           equ	28	;# 
   576     008C                     TRISA           equ	140	;# 
   577     008D                     TRISB           equ	141	;# 
   578     008E                     TRISC           equ	142	;# 
   579     0090                     TRISE           equ	144	;# 
   580     0091                     PIE1            equ	145	;# 
   581     0092                     PIE2            equ	146	;# 
   582     0094                     PIE4            equ	148	;# 
   583     0095                     OPTION_REG      equ	149	;# 
   584     0096                     PCON            equ	150	;# 
   585     0097                     WDTCON          equ	151	;# 
   586     0098                     OSCTUNE         equ	152	;# 
   587     0099                     OSCCON          equ	153	;# 
   588     009A                     OSCSTAT         equ	154	;# 
   589     009B                     ADRES           equ	155	;# 
   590     009B                     ADRESL          equ	155	;# 
   591     009C                     ADRESH          equ	156	;# 
   592     009D                     ADCON0          equ	157	;# 
   593     009E                     ADCON1          equ	158	;# 
   594     009F                     ADCON2          equ	159	;# 
   595     010C                     LATA            equ	268	;# 
   596     010D                     LATB            equ	269	;# 
   597     010E                     LATC            equ	270	;# 
   598     0111                     CM1CON0         equ	273	;# 
   599     0112                     CM1CON1         equ	274	;# 
   600     0113                     CM2CON0         equ	275	;# 
   601     0114                     CM2CON1         equ	276	;# 
   602     0115                     CMOUT           equ	277	;# 
   603     0116                     BORCON          equ	278	;# 
   604     0117                     FVRCON          equ	279	;# 
   605     0118                     DACCON0         equ	280	;# 
   606     0119                     DACCON1         equ	281	;# 
   607     011D                     APFCON          equ	285	;# 
   608     011D                     APFCON0         equ	285	;# 
   609     011E                     CM3CON0         equ	286	;# 
   610     011F                     CM3CON1         equ	287	;# 
   611     018C                     ANSELA          equ	396	;# 
   612     018D                     ANSELB          equ	397	;# 
   613     0191                     EEADR           equ	401	;# 
   614     0191                     EEADRL          equ	401	;# 
   615     0192                     EEADRH          equ	402	;# 
   616     0193                     EEDAT           equ	403	;# 
   617     0193                     EEDATL          equ	403	;# 
   618     0193                     EEDATA          equ	403	;# 
   619     0194                     EEDATH          equ	404	;# 
   620     0195                     EECON1          equ	405	;# 
   621     0196                     EECON2          equ	406	;# 
   622     0197                     VREGCON         equ	407	;# 
   623     0199                     RC1REG          equ	409	;# 
   624     0199                     RCREG           equ	409	;# 
   625     0199                     RCREG1          equ	409	;# 
   626     019A                     TX1REG          equ	410	;# 
   627     019A                     TXREG1          equ	410	;# 
   628     019A                     TXREG           equ	410	;# 
   629     019B                     SP1BRG          equ	411	;# 
   630     019B                     SPBRG           equ	411	;# 
   631     019B                     SP1BRGL         equ	411	;# 
   632     019B                     SPBRG1          equ	411	;# 
   633     019B                     SPBRGL          equ	411	;# 
   634     019C                     SP1BRGH         equ	412	;# 
   635     019C                     SPBRGH          equ	412	;# 
   636     019C                     SPBRGH1         equ	412	;# 
   637     019D                     RC1STA          equ	413	;# 
   638     019D                     RCSTA1          equ	413	;# 
   639     019D                     RCSTA           equ	413	;# 
   640     019E                     TX1STA          equ	414	;# 
   641     019E                     TXSTA1          equ	414	;# 
   642     019E                     TXSTA           equ	414	;# 
   643     019F                     BAUD1CON        equ	415	;# 
   644     019F                     BAUDCON1        equ	415	;# 
   645     019F                     BAUDCTL1        equ	415	;# 
   646     019F                     BAUDCON         equ	415	;# 
   647     019F                     BAUDCTL         equ	415	;# 
   648     020C                     WPUA            equ	524	;# 
   649     020D                     WPUB            equ	525	;# 
   650     020E                     WPUC            equ	526	;# 
   651     0210                     WPUE            equ	528	;# 
   652     0211                     SSPBUF          equ	529	;# 
   653     0211                     SSP1BUF         equ	529	;# 
   654     0212                     SSPADD          equ	530	;# 
   655     0212                     SSP1ADD         equ	530	;# 
   656     0213                     SSPMSK          equ	531	;# 
   657     0213                     SSP1MSK         equ	531	;# 
   658     0214                     SSPSTAT         equ	532	;# 
   659     0214                     SSP1STAT        equ	532	;# 
   660     0215                     SSPCON1         equ	533	;# 
   661     0215                     SSP1CON         equ	533	;# 
   662     0215                     SSPCON          equ	533	;# 
   663     0216                     SSPCON2         equ	534	;# 
   664     0216                     SSP1CON2        equ	534	;# 
   665     0217                     SSPCON3         equ	535	;# 
   666     0217                     SSP1CON3        equ	535	;# 
   667     028C                     ODCONA          equ	652	;# 
   668     028D                     ODCONB          equ	653	;# 
   669     028E                     ODCONC          equ	654	;# 
   670     0291                     CCPR1           equ	657	;# 
   671     0291                     CCPR1L          equ	657	;# 
   672     0292                     CCPR1H          equ	658	;# 
   673     0293                     CCP1CON         equ	659	;# 
   674     0298                     CCPR2           equ	664	;# 
   675     0298                     CCPR2L          equ	664	;# 
   676     0299                     CCPR2H          equ	665	;# 
   677     029A                     CCP2CON         equ	666	;# 
   678     030C                     SLRCONA         equ	780	;# 
   679     030D                     SLRCONB         equ	781	;# 
   680     030E                     SLRCONC         equ	782	;# 
   681     038C                     INLVLA          equ	908	;# 
   682     038D                     INLVLB          equ	909	;# 
   683     038E                     INLVLC          equ	910	;# 
   684     0390                     INLVLE          equ	912	;# 
   685     0391                     IOCAP           equ	913	;# 
   686     0392                     IOCAN           equ	914	;# 
   687     0393                     IOCAF           equ	915	;# 
   688     0394                     IOCBP           equ	916	;# 
   689     0395                     IOCBN           equ	917	;# 
   690     0396                     IOCBF           equ	918	;# 
   691     0397                     IOCCP           equ	919	;# 
   692     0398                     IOCCN           equ	920	;# 
   693     0399                     IOCCF           equ	921	;# 
   694     039D                     IOCEP           equ	925	;# 
   695     039E                     IOCEN           equ	926	;# 
   696     039F                     IOCEF           equ	927	;# 
   697     0511                     OPA1CON         equ	1297	;# 
   698     0513                     OPA2CON         equ	1299	;# 
   699     051A                     CLKRCON         equ	1306	;# 
   700     0811                     PSMC1CON        equ	2065	;# 
   701     0812                     PSMC1MDL        equ	2066	;# 
   702     0813                     PSMC1SYNC       equ	2067	;# 
   703     0814                     PSMC1CLK        equ	2068	;# 
   704     0815                     PSMC1OEN        equ	2069	;# 
   705     0816                     PSMC1POL        equ	2070	;# 
   706     0817                     PSMC1BLNK       equ	2071	;# 
   707     0818                     PSMC1REBS       equ	2072	;# 
   708     0819                     PSMC1FEBS       equ	2073	;# 
   709     081A                     PSMC1PHS        equ	2074	;# 
   710     081B                     PSMC1DCS        equ	2075	;# 
   711     081C                     PSMC1PRS        equ	2076	;# 
   712     081D                     PSMC1ASDC       equ	2077	;# 
   713     081E                     PSMC1ASDL       equ	2078	;# 
   714     081F                     PSMC1ASDS       equ	2079	;# 
   715     0820                     PSMC1INT        equ	2080	;# 
   716     0821                     PSMC1PH         equ	2081	;# 
   717     0821                     PSMC1PHL        equ	2081	;# 
   718     0822                     PSMC1PHH        equ	2082	;# 
   719     0823                     PSMC1DC         equ	2083	;# 
   720     0823                     PSMC1DCL        equ	2083	;# 
   721     0824                     PSMC1DCH        equ	2084	;# 
   722     0825                     PSMC1PR         equ	2085	;# 
   723     0825                     PSMC1PRL        equ	2085	;# 
   724     0826                     PSMC1PRH        equ	2086	;# 
   725     0827                     PSMC1TMR        equ	2087	;# 
   726     0827                     PSMC1TMRL       equ	2087	;# 
   727     0828                     PSMC1TMRH       equ	2088	;# 
   728     0829                     PSMC1DBR        equ	2089	;# 
   729     082A                     PSMC1DBF        equ	2090	;# 
   730     082B                     PSMC1BLKR       equ	2091	;# 
   731     082C                     PSMC1BLKF       equ	2092	;# 
   732     082D                     PSMC1FFA        equ	2093	;# 
   733     082E                     PSMC1STR0       equ	2094	;# 
   734     082F                     PSMC1STR1       equ	2095	;# 
   735     0831                     PSMC2CON        equ	2097	;# 
   736     0832                     PSMC2MDL        equ	2098	;# 
   737     0833                     PSMC2SYNC       equ	2099	;# 
   738     0834                     PSMC2CLK        equ	2100	;# 
   739     0835                     PSMC2OEN        equ	2101	;# 
   740     0836                     PSMC2POL        equ	2102	;# 
   741     0837                     PSMC2BLNK       equ	2103	;# 
   742     0838                     PSMC2REBS       equ	2104	;# 
   743     0839                     PSMC2FEBS       equ	2105	;# 
   744     083A                     PSMC2PHS        equ	2106	;# 
   745     083B                     PSMC2DCS        equ	2107	;# 
   746     083C                     PSMC2PRS        equ	2108	;# 
   747     083D                     PSMC2ASDC       equ	2109	;# 
   748     083E                     PSMC2ASDL       equ	2110	;# 
   749     083F                     PSMC2ASDS       equ	2111	;# 
   750     0840                     PSMC2INT        equ	2112	;# 
   751     0841                     PSMC2PH         equ	2113	;# 
   752     0841                     PSMC2PHL        equ	2113	;# 
   753     0842                     PSMC2PHH        equ	2114	;# 
   754     0843                     PSMC2DC         equ	2115	;# 
   755     0843                     PSMC2DCL        equ	2115	;# 
   756     0844                     PSMC2DCH        equ	2116	;# 
   757     0845                     PSMC2PR         equ	2117	;# 
   758     0845                     PSMC2PRL        equ	2117	;# 
   759     0846                     PSMC2PRH        equ	2118	;# 
   760     0847                     PSMC2TMR        equ	2119	;# 
   761     0847                     PSMC2TMRL       equ	2119	;# 
   762     0848                     PSMC2TMRH       equ	2120	;# 
   763     0849                     PSMC2DBR        equ	2121	;# 
   764     084A                     PSMC2DBF        equ	2122	;# 
   765     084B                     PSMC2BLKR       equ	2123	;# 
   766     084C                     PSMC2BLKF       equ	2124	;# 
   767     084D                     PSMC2FFA        equ	2125	;# 
   768     084E                     PSMC2STR0       equ	2126	;# 
   769     084F                     PSMC2STR1       equ	2127	;# 
   770     0FE4                     STATUS_SHAD     equ	4068	;# 
   771     0FE5                     WREG_SHAD       equ	4069	;# 
   772     0FE6                     BSR_SHAD        equ	4070	;# 
   773     0FE7                     PCLATH_SHAD     equ	4071	;# 
   774     0FE8                     FSR0L_SHAD      equ	4072	;# 
   775     0FE9                     FSR0H_SHAD      equ	4073	;# 
   776     0FEA                     FSR1L_SHAD      equ	4074	;# 
   777     0FEB                     FSR1H_SHAD      equ	4075	;# 
   778     0FED                     STKPTR          equ	4077	;# 
   779     0FEE                     TOSL            equ	4078	;# 
   780     0FEF                     TOSH            equ	4079	;# 
   781     009C                     _ADRESH         set	156
   782     009F                     _ADCON2bits     set	159
   783     009E                     _ADCON1bits     set	158
   784     009D                     _ADCON0bits     set	157
   785     008C                     _TRISAbits      set	140
   786     008E                     _TRISCbits      set	142
   787     008D                     _TRISBbits      set	141
   788     010E                     _LATCbits       set	270
   789     010D                     _LATBbits       set	269
   790     018C                     _ANSELAbits     set	396
   791     018D                     _ANSELBbits     set	397
   792                           
   793                           	psect	stringtext1
   794     0800                     __pstringtext1:
   795     0800                     STR_1:
   796     0800  3456               	retlw	86	;'V'
   797     0801  3461               	retlw	97	;'a'
   798     0802  3472               	retlw	114	;'r'
   799     0803  3420               	retlw	32	;' '
   800     0804  3452               	retlw	82	;'R'
   801     0805  3465               	retlw	101	;'e'
   802     0806  3473               	retlw	115	;'s'
   803     0807  3469               	retlw	105	;'i'
   804     0808  3473               	retlw	115	;'s'
   805     0809  3474               	retlw	116	;'t'
   806     080A  346F               	retlw	111	;'o'
   807     080B  3472               	retlw	114	;'r'
   808     080C  3400               	retlw	0
   809                           
   810                           	psect	stringtext2
   811     0000                     __pstringtext2:
   812                           
   813                           	psect	cinit
   814     07FD                     start_initialization:	
   815                           ; #config settings
   816                           
   817     07FD                     __initialization:
   818     07FD                     end_of_initialization:	
   819                           ;End of C runtime variable initialization code
   820                           
   821     07FD                     __end_of__initialization:
   822     07FD  0020               	movlb	0
   823     07FE  3184  2C42         	ljmp	_main	;jump to C main() function
   824                           
   825                           	psect	cstackCOMMON
   826     0070                     __pcstackCOMMON:
   827     0070                     ?_programInitialize:
   828     0070                     ?_programLoop:	
   829                           ; 1 bytes @ 0x0
   830                           
   831     0070                     ?_lcd_Initialize:	
   832                           ; 1 bytes @ 0x0
   833                           
   834     0070                     ?_var_Initialize:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     ?_memset:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ?_main:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     ?_delay_x1o5us:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ?_lcd_DelaySetupTime:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     ?_lcd_DelayPulse:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     ?_lcd_EPulse:	
   853                           ; 1 bytes @ 0x0
   854                           
   855     0070                     ?_lcd_WriteData:	
   856                           ; 1 bytes @ 0x0
   857                           
   858     0070                     ?_lcd_PrintCmd:	
   859                           ; 1 bytes @ 0x0
   860                           
   861     0070                     ?_lcd_PrintChar:	
   862                           ; 1 bytes @ 0x0
   863                           
   864     0070                     ?___bmul:	
   865                           ; 1 bytes @ 0x0
   866                           
   867     0070                     ?_labs:	
   868                           ; 1 bytes @ 0x0
   869                           
   870     0070                     ?___aldiv:	
   871                           ; 4 bytes @ 0x0
   872                           
   873     0070                     delay_x1o5us@delay:	
   874                           ; 4 bytes @ 0x0
   875                           
   876     0070                     ___bmul@multiplicand:	
   877                           ; 1 bytes @ 0x0
   878                           
   879     0070                     memset@dest:	
   880                           ; 1 bytes @ 0x0
   881                           
   882     0070                     ___aldiv@divisor:	
   883                           ; 1 bytes @ 0x0
   884                           
   885     0070                     labs@a:	
   886                           ; 4 bytes @ 0x0
   887                           
   888     0070                     ??_var_Initialize:	
   889                           ; 4 bytes @ 0x0
   890                           
   891     0070                     ??_delay_x1o5us:	
   892                           ; 1 bytes @ 0x0
   893                           
   894                           
   895                           ; 1 bytes @ 0x0
   896     0070                     	ds	1
   897     0071                     delay_x1o5us@i:
   898     0071                     ___bmul@product:	
   899                           ; 1 bytes @ 0x1
   900                           
   901     0071                     memset@c:	
   902                           ; 1 bytes @ 0x1
   903                           
   904     0071                     ??___bmul:	
   905                           ; 2 bytes @ 0x1
   906                           
   907                           
   908                           ; 1 bytes @ 0x1
   909     0071                     	ds	1
   910     0072                     ?_delay_x24o25us:
   911     0072                     ?_var_Read:	
   912                           ; 1 bytes @ 0x2
   913                           
   914     0072                     ___bmul@multiplier:	
   915                           ; 2 bytes @ 0x2
   916                           
   917     0072                     delay_x24o25us@delay:	
   918                           ; 1 bytes @ 0x2
   919                           
   920     0072                     ??_lcd_DelaySetupTime:	
   921                           ; 2 bytes @ 0x2
   922                           
   923     0072                     ??_lcd_DelayPulse:	
   924                           ; 1 bytes @ 0x2
   925                           
   926     0072                     ??_lcd_EPulse:	
   927                           ; 1 bytes @ 0x2
   928                           
   929     0072                     ??_lcd_WriteData:	
   930                           ; 1 bytes @ 0x2
   931                           
   932                           
   933                           ; 1 bytes @ 0x2
   934     0072                     	ds	1
   935     0073                     memset@n:
   936                           
   937                           ; 2 bytes @ 0x3
   938     0073                     	ds	1
   939     0074                     lcd_WriteData@data:
   940     0074                     delay_x24o25us@i:	
   941                           ; 1 bytes @ 0x4
   942                           
   943     0074                     ___aldiv@dividend:	
   944                           ; 2 bytes @ 0x4
   945                           
   946     0074                     ??_var_Read:	
   947                           ; 4 bytes @ 0x4
   948                           
   949     0074                     ??_labs:	
   950                           ; 1 bytes @ 0x4
   951                           
   952     0074                     ??_delay_x24o25us:	
   953                           ; 1 bytes @ 0x4
   954                           
   955                           
   956                           ; 1 bytes @ 0x4
   957     0074                     	ds	1
   958     0075                     lcd_PrintCmd@command:
   959     0075                     lcd_PrintChar@character:	
   960                           ; 1 bytes @ 0x5
   961                           
   962     0075                     memset@p:	
   963                           ; 1 bytes @ 0x5
   964                           
   965     0075                     ??_memset:	
   966                           ; 1 bytes @ 0x5
   967                           
   968     0075                     ??_lcd_PrintCmd:	
   969                           ; 1 bytes @ 0x5
   970                           
   971     0075                     ??_lcd_PrintChar:	
   972                           ; 1 bytes @ 0x5
   973                           
   974                           
   975                           ; 1 bytes @ 0x5
   976     0075                     	ds	1
   977     0076                     ?_lcd_Goto:
   978     0076                     ?_lcd_PrintString:	
   979                           ; 1 bytes @ 0x6
   980                           
   981     0076                     ?_delay_ms:	
   982                           ; 1 bytes @ 0x6
   983                           
   984     0076                     lcd_Goto@x:	
   985                           ; 1 bytes @ 0x6
   986                           
   987     0076                     lcd_PrintString@string:	
   988                           ; 1 bytes @ 0x6
   989                           
   990     0076                     delay_ms@delay:	
   991                           ; 2 bytes @ 0x6
   992                           
   993                           
   994                           ; 4 bytes @ 0x6
   995     0076                     	ds	1
   996     0077                     lcd_Goto@y:
   997     0077                     ??_lcd_Goto:	
   998                           ; 1 bytes @ 0x7
   999                           
  1000                           
  1001                           ; 1 bytes @ 0x7
  1002     0077                     	ds	1
  1003     0078                     ___aldiv@counter:
  1004     0078                     ??_lcd_PrintString:	
  1005                           ; 1 bytes @ 0x8
  1006                           
  1007     0078                     ??___aldiv:	
  1008                           ; 1 bytes @ 0x8
  1009                           
  1010                           
  1011                           ; 1 bytes @ 0x8
  1012     0078                     	ds	1
  1013     0079                     ___aldiv@sign:
  1014                           
  1015                           ; 1 bytes @ 0x9
  1016     0079                     	ds	1
  1017     007A                     delay_ms@i:
  1018     007A                     ___aldiv@quotient:	
  1019                           ; 4 bytes @ 0xA
  1020                           
  1021     007A                     ??_delay_ms:	
  1022                           ; 4 bytes @ 0xA
  1023                           
  1024                           
  1025                           ; 1 bytes @ 0xA
  1026     007A                     	ds	4
  1027     007E                     ??_programInitialize:
  1028     007E                     ??_programLoop:	
  1029                           ; 1 bytes @ 0xE
  1030                           
  1031     007E                     ??_lcd_Initialize:	
  1032                           ; 1 bytes @ 0xE
  1033                           
  1034     007E                     ??_main:	
  1035                           ; 1 bytes @ 0xE
  1036                           
  1037                           
  1038                           	psect	cstackBANK0
  1039     0020                     __pcstackBANK0:	
  1040                           ; 1 bytes @ 0xE
  1041                           
  1042     0020                     ?_lcd_PrintDigitInt32:
  1043     0020                     lcd_PrintDigitInt32@number:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046                           
  1047                           ; 4 bytes @ 0x0
  1048     0020                     	ds	4
  1049     0024                     lcd_PrintDigitInt32@noDigit:
  1050                           
  1051                           ; 1 bytes @ 0x4
  1052     0024                     	ds	1
  1053     0025                     lcd_PrintDigitInt32@enSign:
  1054                           
  1055                           ; 1 bytes @ 0x5
  1056     0025                     	ds	1
  1057     0026                     lcd_PrintDigitInt32@enZero:
  1058                           
  1059                           ; 1 bytes @ 0x6
  1060     0026                     	ds	1
  1061     0027                     ??_lcd_PrintDigitInt32:
  1062                           
  1063                           ; 1 bytes @ 0x7
  1064     0027                     	ds	4
  1065     002B                     lcd_PrintDigitInt32@numberRevChar:
  1066                           
  1067                           ; 11 bytes @ 0xB
  1068     002B                     	ds	11
  1069     0036                     lcd_PrintDigitInt32@numberChar:
  1070                           
  1071                           ; 11 bytes @ 0x16
  1072     0036                     	ds	11
  1073     0041                     lcd_PrintDigitInt32@tempN:
  1074                           
  1075                           ; 4 bytes @ 0x21
  1076     0041                     	ds	4
  1077     0045                     lcd_PrintDigitInt32@tempC:
  1078                           
  1079                           ; 1 bytes @ 0x25
  1080     0045                     	ds	1
  1081     0046                     lcd_PrintDigitInt32@i2:
  1082                           
  1083                           ; 1 bytes @ 0x26
  1084     0046                     	ds	1
  1085     0047                     lcd_PrintDigitInt32@totalDigit:
  1086                           
  1087                           ; 1 bytes @ 0x27
  1088     0047                     	ds	1
  1089     0048                     lcd_PrintDigitInt32@i1:
  1090                           
  1091                           ; 1 bytes @ 0x28
  1092     0048                     	ds	1
  1093     0049                     programLoop@varValue:
  1094                           
  1095                           ; 2 bytes @ 0x29
  1096     0049                     	ds	2
  1097                           
  1098                           	psect	maintext
  1099     0442                     __pmaintext:	
  1100 ;;
  1101 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1102 ;;
  1103 ;; *************** function _main *****************
  1104 ;; Defined at:
  1105 ;;		line 26 in file "main.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : B1F/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1119 ;;      Params:         0       0       0       0       0       0       0
  1120 ;;      Locals:         0       0       0       0       0       0       0
  1121 ;;      Temps:          0       0       0       0       0       0       0
  1122 ;;      Totals:         0       0       0       0       0       0       0
  1123 ;;Total ram usage:        0 bytes
  1124 ;; Hardware stack levels required when called: 8
  1125 ;; This function calls:
  1126 ;;		_programInitialize
  1127 ;;		_programLoop
  1128 ;; This function is called by:
  1129 ;;		Startup code after reset
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133     0442                     _main:	
  1134                           ;psect for function _main
  1135                           
  1136     0442                     l1299:	
  1137                           ;incstack = 0
  1138                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1139                           
  1140                           
  1141                           ;main.c: 27:     programInitialize();
  1142     0442  3185  250E  3184   	fcall	_programInitialize
  1143     0445                     l1301:
  1144                           
  1145                           ;main.c: 30:         programLoop();
  1146     0445  3185  25BF  3184   	fcall	_programLoop
  1147     0448  2C45               	goto	l1301
  1148     0449  3180  2802         	ljmp	start
  1149     044B                     __end_of_main:
  1150                           
  1151                           	psect	text1
  1152     05BF                     __ptext1:	
  1153 ;; *************** function _programLoop *****************
  1154 ;; Defined at:
  1155 ;;		line 54 in file "program.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;  varValue        2   41[BANK0 ] unsigned short 
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1169 ;;      Params:         0       0       0       0       0       0       0
  1170 ;;      Locals:         0       2       0       0       0       0       0
  1171 ;;      Temps:          0       0       0       0       0       0       0
  1172 ;;      Totals:         0       2       0       0       0       0       0
  1173 ;;Total ram usage:        2 bytes
  1174 ;; Hardware stack levels used: 1
  1175 ;; Hardware stack levels required when called: 7
  1176 ;; This function calls:
  1177 ;;		_delay_ms
  1178 ;;		_lcd_Goto
  1179 ;;		_lcd_PrintDigitInt32
  1180 ;;		_lcd_PrintString
  1181 ;;		_var_Read
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187     05BF                     _programLoop:	
  1188                           ;psect for function _programLoop
  1189                           
  1190     05BF                     l1285:	
  1191                           ;incstack = 0
  1192                           ; Regs used in _programLoop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1193                           
  1194                           
  1195                           ;program.c: 55:     lcd_Goto(0, 0);
  1196     05BF  01F6               	clrf	lcd_Goto@x
  1197     05C0  3000               	movlw	0
  1198     05C1  3184  24F1  3185   	fcall	_lcd_Goto
  1199                           
  1200                           ;program.c: 56:     lcd_PrintString("Var Resistor");
  1201     05C4  3000               	movlw	low (STR_1| (0+32768))
  1202     05C5  00F6               	movwf	lcd_PrintString@string
  1203     05C6  3088               	movlw	high (STR_1| (0+32768))
  1204     05C7  00F7               	movwf	lcd_PrintString@string+1
  1205     05C8  3184  24C3  3185   	fcall	_lcd_PrintString
  1206                           
  1207                           ;program.c: 58:     lcd_Goto(1, 0);
  1208     05CB  01F6               	clrf	lcd_Goto@x
  1209     05CC  3001               	movlw	1
  1210     05CD  3184  24F1  3185   	fcall	_lcd_Goto
  1211     05D0                     l1287:
  1212                           
  1213                           ;program.c: 59:     lcd_PrintDigitInt32(0, 4, 0, 1);
  1214     05D0  3000               	movlw	0
  1215     05D1  0020               	movlb	0	; select bank0
  1216     05D2  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1217     05D3  3000               	movlw	0
  1218     05D4  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1219     05D5  3000               	movlw	0
  1220     05D6  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1221     05D7  3000               	movlw	0
  1222     05D8  00A0               	movwf	lcd_PrintDigitInt32@number
  1223     05D9  3004               	movlw	4
  1224     05DA  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1225     05DB  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1226     05DC  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1227     05DD  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1228     05DE  3187  2729  3185   	fcall	_lcd_PrintDigitInt32
  1229     05E1                     l1289:
  1230                           
  1231                           ;program.c: 62:         LATBbits.LATB7 = ~LATBbits.LATB7;
  1232     05E1  1003               	clrc
  1233     05E2  0022               	movlb	2	; select bank2
  1234     05E3  1F8D               	btfss	13,7	;volatile
  1235     05E4  1403               	setc
  1236     05E5  1803               	btfsc	3,0
  1237     05E6  2DE8               	goto	u741
  1238     05E7  2DEB               	goto	u740
  1239     05E8                     u741:
  1240     05E8  0022               	movlb	2	; select bank2
  1241     05E9  178D               	bsf	13,7	;volatile
  1242     05EA  2DED               	goto	u754
  1243     05EB                     u740:
  1244     05EB  0022               	movlb	2	; select bank2
  1245     05EC  138D               	bcf	13,7	;volatile
  1246     05ED                     u754:
  1247     05ED                     l1291:
  1248                           
  1249                           ;program.c: 64:         uint16_t varValue = var_Read();
  1250     05ED  3185  255C  3185   	fcall	_var_Read
  1251     05F0  0873               	movf	?_var_Read+1,w
  1252     05F1  0020               	movlb	0	; select bank0
  1253     05F2  00CA               	movwf	programLoop@varValue+1
  1254     05F3  0872               	movf	?_var_Read,w
  1255     05F4  00C9               	movwf	programLoop@varValue
  1256     05F5                     l1293:
  1257                           
  1258                           ;program.c: 66:         lcd_Goto(1, 0);
  1259     05F5  01F6               	clrf	lcd_Goto@x
  1260     05F6  3001               	movlw	1
  1261     05F7  3184  24F1  3185   	fcall	_lcd_Goto
  1262     05FA                     l1295:
  1263                           
  1264                           ;program.c: 67:         lcd_PrintDigitInt32(varValue, 4, 0, 1);
  1265     05FA  0020               	movlb	0	; select bank0
  1266     05FB  0849               	movf	programLoop@varValue,w
  1267     05FC  00A0               	movwf	lcd_PrintDigitInt32@number
  1268     05FD  084A               	movf	programLoop@varValue+1,w
  1269     05FE  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1270     05FF  01A2               	clrf	lcd_PrintDigitInt32@number+2
  1271     0600  01A3               	clrf	lcd_PrintDigitInt32@number+3
  1272     0601  3004               	movlw	4
  1273     0602  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1274     0603  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1275     0604  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1276     0605  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1277     0606  3187  2729  3185   	fcall	_lcd_PrintDigitInt32
  1278     0609                     l1297:
  1279                           
  1280                           ;program.c: 69:         delay_ms(50);
  1281     0609  3000               	movlw	0
  1282     060A  00F9               	movwf	delay_ms@delay+3
  1283     060B  3000               	movlw	0
  1284     060C  00F8               	movwf	delay_ms@delay+2
  1285     060D  3000               	movlw	0
  1286     060E  00F7               	movwf	delay_ms@delay+1
  1287     060F  3032               	movlw	50
  1288     0610  00F6               	movwf	delay_ms@delay
  1289     0611  3185  2533  3185   	fcall	_delay_ms
  1290     0614  2DE1               	goto	l1289
  1291     0615  0008               	return
  1292     0616                     __end_of_programLoop:
  1293                           
  1294                           	psect	text2
  1295     055C                     __ptext2:	
  1296 ;; *************** function _var_Read *****************
  1297 ;; Defined at:
  1298 ;;		line 265 in file "program.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  2    2[COMMON] unsigned short 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0, pclath, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1312 ;;      Params:         2       0       0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0
  1314 ;;      Temps:          7       0       0       0       0       0       0
  1315 ;;      Totals:         9       0       0       0       0       0       0
  1316 ;;Total ram usage:        9 bytes
  1317 ;; Hardware stack levels used: 1
  1318 ;; Hardware stack levels required when called: 1
  1319 ;; This function calls:
  1320 ;;		_delay_x1o5us
  1321 ;; This function is called by:
  1322 ;;		_programLoop
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326     055C                     _var_Read:	
  1327                           ;psect for function _var_Read
  1328                           
  1329     055C                     l1269:	
  1330                           ;incstack = 0
  1331                           ; Regs used in _var_Read: [wreg+status,2+status,0+pclath+cstack]
  1332                           
  1333                           
  1334                           ;program.c: 266:     ADCON0bits.CHS = 0;
  1335     055C  3083               	movlw	-125
  1336     055D  0021               	movlb	1	; select bank1
  1337     055E  059D               	andwf	29,f	;volatile
  1338                           
  1339                           ;program.c: 267:     ADCON2bits.CHSN = 15;
  1340     055F  300F               	movlw	15
  1341     0560  049F               	iorwf	31,f	;volatile
  1342     0561                     l1271:
  1343                           
  1344                           ;program.c: 269:     ADCON0bits.ADON = 1;
  1345     0561  141D               	bsf	29,0	;volatile
  1346     0562                     l1273:
  1347                           
  1348                           ;program.c: 271:     delay_x1o5us(4);
  1349     0562  3004               	movlw	4
  1350     0563  3184  2478  3185   	fcall	_delay_x1o5us
  1351     0566                     l1275:
  1352                           
  1353                           ;program.c: 274:     ADCON0bits.GO = 1;
  1354     0566  0021               	movlb	1	; select bank1
  1355     0567  149D               	bsf	29,1	;volatile
  1356     0568                     l147:	
  1357                           ;program.c: 275:     while(ADCON0bits.GO);
  1358                           
  1359     0568  189D               	btfsc	29,1	;volatile
  1360     0569  2D6B               	goto	u721
  1361     056A  2D6C               	goto	u720
  1362     056B                     u721:
  1363     056B  2D68               	goto	l147
  1364     056C                     u720:
  1365     056C                     l1277:
  1366                           
  1367                           ;program.c: 278:     return (uint16_t)(ADRESH<<4) | (ADRESH>>4);
  1368     056C  081C               	movf	28,w	;volatile
  1369     056D  00F4               	movwf	??_var_Read
  1370     056E  3004               	movlw	4
  1371     056F                     u735:
  1372     056F  36F4               	lsrf	??_var_Read,f
  1373     0570  0B89               	decfsz	9,f
  1374     0571  2D6F               	goto	u735
  1375     0572  0874               	movf	??_var_Read,w
  1376     0573  00F5               	movwf	??_var_Read+1
  1377     0574  01F6               	clrf	??_var_Read+2
  1378     0575  081C               	movf	28,w	;volatile
  1379     0576  00F7               	movwf	??_var_Read+3
  1380     0577  01F8               	clrf	??_var_Read+4
  1381     0578  0EF7               	swapf	??_var_Read+3,f
  1382     0579  0EF8               	swapf	??_var_Read+4,f
  1383     057A  30F0               	movlw	240
  1384     057B  05F8               	andwf	??_var_Read+4,f
  1385     057C  0877               	movf	??_var_Read+3,w
  1386     057D  390F               	andlw	15
  1387     057E  04F8               	iorwf	??_var_Read+4,f
  1388     057F  30F0               	movlw	240
  1389     0580  05F7               	andwf	??_var_Read+3,f
  1390     0581  0875               	movf	??_var_Read+1,w
  1391     0582  0477               	iorwf	??_var_Read+3,w
  1392     0583  00F9               	movwf	??_var_Read+5
  1393     0584  0876               	movf	??_var_Read+2,w
  1394     0585  0478               	iorwf	??_var_Read+4,w
  1395     0586  00FA               	movwf	??_var_Read+6
  1396     0587  0879               	movf	??_var_Read+5,w
  1397     0588  00F2               	movwf	?_var_Read
  1398     0589  087A               	movf	??_var_Read+6,w
  1399     058A  00F3               	movwf	?_var_Read+1
  1400     058B                     l150:
  1401     058B  0008               	return
  1402     058C                     __end_of_var_Read:
  1403                           
  1404                           	psect	text3
  1405     0729                     __ptext3:	
  1406 ;; *************** function _lcd_PrintDigitInt32 *****************
  1407 ;; Defined at:
  1408 ;;		line 209 in file "program.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  number          4    0[BANK0 ] long 
  1411 ;;  noDigit         1    4[BANK0 ] unsigned char 
  1412 ;;  enSign          1    5[BANK0 ] _Bool 
  1413 ;;  enZero          1    6[BANK0 ] _Bool 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  tempN           4   33[BANK0 ] long 
  1416 ;;  tempC           1   37[BANK0 ] unsigned char 
  1417 ;;  numberChar     11   22[BANK0 ] unsigned char [11]
  1418 ;;  numberRevCha   11   11[BANK0 ] unsigned char [11]
  1419 ;;  i1              1   40[BANK0 ] unsigned char 
  1420 ;;  totalDigit      1   39[BANK0 ] unsigned char 
  1421 ;;  i2              1   38[BANK0 ] unsigned char 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1431 ;;      Params:         0       7       0       0       0       0       0
  1432 ;;      Locals:         0      30       0       0       0       0       0
  1433 ;;      Temps:          0       4       0       0       0       0       0
  1434 ;;      Totals:         0      41       0       0       0       0       0
  1435 ;;Total ram usage:       41 bytes
  1436 ;; Hardware stack levels used: 1
  1437 ;; Hardware stack levels required when called: 6
  1438 ;; This function calls:
  1439 ;;		___aldiv
  1440 ;;		___bmul
  1441 ;;		_labs
  1442 ;;		_lcd_PrintChar
  1443 ;;		_lcd_PrintString
  1444 ;;		_memset
  1445 ;; This function is called by:
  1446 ;;		_programLoop
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450     0729                     _lcd_PrintDigitInt32:	
  1451                           ;psect for function _lcd_PrintDigitInt32
  1452                           
  1453     0729                     l1209:	
  1454                           ;incstack = 0
  1455                           ; Regs used in _lcd_PrintDigitInt32: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1456                           
  1457                           
  1458                           ;program.c: 210:     uint8_t i1 = 0,
  1459     0729  0020               	movlb	0	; select bank0
  1460     072A  01C8               	clrf	lcd_PrintDigitInt32@i1
  1461                           
  1462                           ;program.c: 212:             totalDigit = 0;
  1463     072B  01C7               	clrf	lcd_PrintDigitInt32@totalDigit
  1464     072C                     l1211:
  1465                           
  1466                           ;program.c: 214:     char numberRevChar[11];;program.c: 215:     char numberChar[11];;pr
      +                          ogram.c: 218:     memset(numberRevChar, 0, 11);
  1467     072C  302B               	movlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  1468     072D  00F0               	movwf	memset@dest
  1469     072E  3000               	movlw	0
  1470     072F  00F1               	movwf	memset@c
  1471     0730  00F2               	movwf	memset@c+1
  1472     0731  300B               	movlw	11
  1473     0732  00F3               	movwf	memset@n
  1474     0733  3000               	movlw	0
  1475     0734  00F4               	movwf	memset@n+1
  1476     0735  3184  24DA  3187   	fcall	_memset
  1477     0738                     l1213:
  1478                           
  1479                           ;program.c: 219:     memset(numberChar, 0, 11);
  1480     0738  3036               	movlw	(low (lcd_PrintDigitInt32@numberChar| 0))& (0+255)
  1481     0739  00F0               	movwf	memset@dest
  1482     073A  3000               	movlw	0
  1483     073B  00F1               	movwf	memset@c
  1484     073C  00F2               	movwf	memset@c+1
  1485     073D  300B               	movlw	11
  1486     073E  00F3               	movwf	memset@n
  1487     073F  3000               	movlw	0
  1488     0740  00F4               	movwf	memset@n+1
  1489     0741  3184  24DA  3187   	fcall	_memset
  1490     0744                     l1215:
  1491                           
  1492                           ;program.c: 221:     if(number<0) {
  1493     0744  0020               	movlb	0	; select bank0
  1494     0745  1FA3               	btfss	lcd_PrintDigitInt32@number+3,7
  1495     0746  2F48               	goto	u651
  1496     0747  2F49               	goto	u650
  1497     0748                     u651:
  1498     0748  2F68               	goto	l1221
  1499     0749                     u650:
  1500     0749                     l1217:
  1501                           
  1502                           ;program.c: 222:         if(enSign) lcd_PrintChar('-');
  1503     0749  0825               	movf	lcd_PrintDigitInt32@enSign,w
  1504     074A  1903               	btfsc	3,2
  1505     074B  2F4D               	goto	u661
  1506     074C  2F4E               	goto	u660
  1507     074D                     u661:
  1508     074D  2F52               	goto	l129
  1509     074E                     u660:
  1510     074E                     l1219:
  1511     074E  302D               	movlw	45
  1512     074F  3184  2461  3187   	fcall	_lcd_PrintChar
  1513     0752                     l129:
  1514                           
  1515                           ;program.c: 223:         number = labs(number);
  1516     0752  0020               	movlb	0	; select bank0
  1517     0753  0823               	movf	lcd_PrintDigitInt32@number+3,w
  1518     0754  00F3               	movwf	labs@a+3
  1519     0755  0822               	movf	lcd_PrintDigitInt32@number+2,w
  1520     0756  00F2               	movwf	labs@a+2
  1521     0757  0821               	movf	lcd_PrintDigitInt32@number+1,w
  1522     0758  00F1               	movwf	labs@a+1
  1523     0759  0820               	movf	lcd_PrintDigitInt32@number,w
  1524     075A  00F0               	movwf	labs@a
  1525     075B  3184  2498  3187   	fcall	_labs
  1526     075E  0873               	movf	?_labs+3,w
  1527     075F  0020               	movlb	0	; select bank0
  1528     0760  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1529     0761  0872               	movf	?_labs+2,w
  1530     0762  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1531     0763  0871               	movf	?_labs+1,w
  1532     0764  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1533     0765  0870               	movf	?_labs,w
  1534     0766  00A0               	movwf	lcd_PrintDigitInt32@number
  1535                           
  1536                           ;program.c: 224:     } else {
  1537     0767  2F71               	goto	l1225
  1538     0768                     l1221:
  1539                           
  1540                           ;program.c: 225:         if(enSign) lcd_PrintChar(' ');
  1541     0768  0825               	movf	lcd_PrintDigitInt32@enSign,w
  1542     0769  1903               	btfsc	3,2
  1543     076A  2F6C               	goto	u671
  1544     076B  2F6D               	goto	u670
  1545     076C                     u671:
  1546     076C  2F71               	goto	l1225
  1547     076D                     u670:
  1548     076D                     l1223:
  1549     076D  3020               	movlw	32
  1550     076E  3184  2461  3187   	fcall	_lcd_PrintChar
  1551     0771                     l1225:
  1552                           
  1553                           ;program.c: 229:         int32_t tempN = number;
  1554     0771  0020               	movlb	0	; select bank0
  1555     0772  0823               	movf	lcd_PrintDigitInt32@number+3,w
  1556     0773  00C4               	movwf	lcd_PrintDigitInt32@tempN+3
  1557     0774  0822               	movf	lcd_PrintDigitInt32@number+2,w
  1558     0775  00C3               	movwf	lcd_PrintDigitInt32@tempN+2
  1559     0776  0821               	movf	lcd_PrintDigitInt32@number+1,w
  1560     0777  00C2               	movwf	lcd_PrintDigitInt32@tempN+1
  1561     0778  0820               	movf	lcd_PrintDigitInt32@number,w
  1562     0779  00C1               	movwf	lcd_PrintDigitInt32@tempN
  1563     077A                     l1227:
  1564                           
  1565                           ;program.c: 230:         number /= 10;
  1566     077A  3000               	movlw	0
  1567     077B  00F3               	movwf	___aldiv@divisor+3
  1568     077C  3000               	movlw	0
  1569     077D  00F2               	movwf	___aldiv@divisor+2
  1570     077E  3000               	movlw	0
  1571     077F  00F1               	movwf	___aldiv@divisor+1
  1572     0780  300A               	movlw	10
  1573     0781  00F0               	movwf	___aldiv@divisor
  1574     0782  0823               	movf	lcd_PrintDigitInt32@number+3,w
  1575     0783  00F7               	movwf	___aldiv@dividend+3
  1576     0784  0822               	movf	lcd_PrintDigitInt32@number+2,w
  1577     0785  00F6               	movwf	___aldiv@dividend+2
  1578     0786  0821               	movf	lcd_PrintDigitInt32@number+1,w
  1579     0787  00F5               	movwf	___aldiv@dividend+1
  1580     0788  0820               	movf	lcd_PrintDigitInt32@number,w
  1581     0789  00F4               	movwf	___aldiv@dividend
  1582     078A  3186  269E  3187   	fcall	___aldiv
  1583     078D  0873               	movf	?___aldiv+3,w
  1584     078E  0020               	movlb	0	; select bank0
  1585     078F  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1586     0790  0872               	movf	?___aldiv+2,w
  1587     0791  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1588     0792  0871               	movf	?___aldiv+1,w
  1589     0793  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1590     0794  0870               	movf	?___aldiv,w
  1591     0795  00A0               	movwf	lcd_PrintDigitInt32@number
  1592     0796                     l1229:
  1593                           
  1594                           ;program.c: 231:         char tempC = (char)(tempN -10 * number);
  1595     0796  30F6               	movlw	246
  1596     0797  00F0               	movwf	___bmul@multiplicand
  1597     0798  0820               	movf	lcd_PrintDigitInt32@number,w
  1598     0799  3184  2485  3187   	fcall	___bmul
  1599     079C  0020               	movlb	0	; select bank0
  1600     079D  0741               	addwf	lcd_PrintDigitInt32@tempN,w
  1601     079E  00C5               	movwf	lcd_PrintDigitInt32@tempC
  1602     079F                     l1231:
  1603                           
  1604                           ;program.c: 232:         numberRevChar[i1] = tempC + 48;
  1605     079F  0848               	movf	lcd_PrintDigitInt32@i1,w
  1606     07A0  3E2B               	addlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  1607     07A1  0086               	movwf	6
  1608     07A2  0187               	clrf	7
  1609     07A3  0845               	movf	lcd_PrintDigitInt32@tempC,w
  1610     07A4  3E30               	addlw	48
  1611     07A5  0081               	movwf	1
  1612     07A6                     l1233:
  1613                           
  1614                           ;program.c: 233:         i1++;
  1615     07A6  3001               	movlw	1
  1616     07A7  07C8               	addwf	lcd_PrintDigitInt32@i1,f
  1617     07A8                     l1235:
  1618                           
  1619                           ;program.c: 234:     } while(number);
  1620     07A8  0823               	movf	lcd_PrintDigitInt32@number+3,w
  1621     07A9  0422               	iorwf	lcd_PrintDigitInt32@number+2,w
  1622     07AA  0421               	iorwf	lcd_PrintDigitInt32@number+1,w
  1623     07AB  0420               	iorwf	lcd_PrintDigitInt32@number,w
  1624     07AC  1D03               	skipz
  1625     07AD  2FAF               	goto	u681
  1626     07AE  2FB0               	goto	u680
  1627     07AF                     u681:
  1628     07AF  2F71               	goto	l1225
  1629     07B0                     u680:
  1630     07B0                     l1237:
  1631                           
  1632                           ;program.c: 236:     totalDigit = i1;
  1633     07B0  0848               	movf	lcd_PrintDigitInt32@i1,w
  1634     07B1  00C7               	movwf	lcd_PrintDigitInt32@totalDigit
  1635     07B2                     l1239:
  1636                           
  1637                           ;program.c: 238:     for(i1=0; i1<(noDigit-totalDigit); i1++) {
  1638     07B2  01C8               	clrf	lcd_PrintDigitInt32@i1
  1639     07B3  2FC6               	goto	l1249
  1640     07B4                     l1241:
  1641                           
  1642                           ;program.c: 239:         if(enZero) lcd_PrintChar('0');
  1643     07B4  0020               	movlb	0	; select bank0
  1644     07B5  0826               	movf	lcd_PrintDigitInt32@enZero,w
  1645     07B6  1903               	btfsc	3,2
  1646     07B7  2FB9               	goto	u691
  1647     07B8  2FBA               	goto	u690
  1648     07B9                     u691:
  1649     07B9  2FBF               	goto	l1245
  1650     07BA                     u690:
  1651     07BA                     l1243:
  1652     07BA  3030               	movlw	48
  1653     07BB  3184  2461  3187   	fcall	_lcd_PrintChar
  1654     07BE  2FC3               	goto	l1247
  1655     07BF                     l1245:
  1656     07BF  3020               	movlw	32
  1657     07C0  3184  2461  3187   	fcall	_lcd_PrintChar
  1658     07C3                     l1247:
  1659                           
  1660                           ;program.c: 241:     }
  1661     07C3  3001               	movlw	1
  1662     07C4  0020               	movlb	0	; select bank0
  1663     07C5  07C8               	addwf	lcd_PrintDigitInt32@i1,f
  1664     07C6                     l1249:
  1665     07C6  0824               	movf	lcd_PrintDigitInt32@noDigit,w
  1666     07C7  00A7               	movwf	??_lcd_PrintDigitInt32
  1667     07C8  01A8               	clrf	??_lcd_PrintDigitInt32+1
  1668     07C9  0828               	movf	??_lcd_PrintDigitInt32+1,w
  1669     07CA  00AA               	movwf	??_lcd_PrintDigitInt32+3
  1670     07CB  0847               	movf	lcd_PrintDigitInt32@totalDigit,w
  1671     07CC  0227               	subwf	??_lcd_PrintDigitInt32,w
  1672     07CD  00A9               	movwf	??_lcd_PrintDigitInt32+2
  1673     07CE  1C03               	skipc
  1674     07CF  03AA               	decf	??_lcd_PrintDigitInt32+3,f
  1675     07D0  082A               	movf	??_lcd_PrintDigitInt32+3,w
  1676     07D1  3A80               	xorlw	128
  1677     07D2  3C80               	sublw	128
  1678     07D3  1D03               	skipz
  1679     07D4  2FD7               	goto	u705
  1680     07D5  0829               	movf	??_lcd_PrintDigitInt32+2,w
  1681     07D6  0248               	subwf	lcd_PrintDigitInt32@i1,w
  1682     07D7                     u705:
  1683     07D7  1C03               	skipc
  1684     07D8  2FDA               	goto	u701
  1685     07D9  2FDB               	goto	u700
  1686     07DA                     u701:
  1687     07DA  2FB4               	goto	l1241
  1688     07DB                     u700:
  1689     07DB                     l1251:
  1690                           
  1691                           ;program.c: 243:     for(i1=totalDigit, i2=0; i1>0; i1--, i2++) {
  1692     07DB  0020               	movlb	0	; select bank0
  1693     07DC  0847               	movf	lcd_PrintDigitInt32@totalDigit,w
  1694     07DD  00C8               	movwf	lcd_PrintDigitInt32@i1
  1695     07DE                     l1253:
  1696     07DE  01C6               	clrf	lcd_PrintDigitInt32@i2
  1697     07DF                     l1255:
  1698     07DF  0848               	movf	lcd_PrintDigitInt32@i1,w
  1699     07E0  1D03               	btfss	3,2
  1700     07E1  2FE3               	goto	u711
  1701     07E2  2FE4               	goto	u710
  1702     07E3                     u711:
  1703     07E3  2FE5               	goto	l1259
  1704     07E4                     u710:
  1705     07E4  2FF5               	goto	l1267
  1706     07E5                     l1259:
  1707                           
  1708                           ;program.c: 244:         numberChar[i2] = numberRevChar[i1-1];
  1709     07E5  0846               	movf	lcd_PrintDigitInt32@i2,w
  1710     07E6  3E36               	addlw	(low (lcd_PrintDigitInt32@numberChar| 0))& (0+255)
  1711     07E7  0086               	movwf	6
  1712     07E8  0187               	clrf	7
  1713     07E9  0848               	movf	lcd_PrintDigitInt32@i1,w
  1714     07EA  3EFF               	addlw	255
  1715     07EB  3E2B               	addlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  1716     07EC  0084               	movwf	4
  1717     07ED  0185               	clrf	5
  1718     07EE  0800               	movf	0,w
  1719     07EF  0081               	movwf	1
  1720     07F0                     l1261:
  1721                           
  1722                           ;program.c: 245:     }
  1723     07F0  3001               	movlw	1
  1724     07F1  02C8               	subwf	lcd_PrintDigitInt32@i1,f
  1725     07F2                     l1263:
  1726     07F2  3001               	movlw	1
  1727     07F3  07C6               	addwf	lcd_PrintDigitInt32@i2,f
  1728     07F4  2FDF               	goto	l1255
  1729     07F5                     l1267:
  1730                           
  1731                           ;program.c: 247:     lcd_PrintString(numberChar);
  1732     07F5  3036               	movlw	low lcd_PrintDigitInt32@numberChar
  1733     07F6  00F6               	movwf	lcd_PrintString@string
  1734     07F7  3000               	movlw	high lcd_PrintDigitInt32@numberChar
  1735     07F8  00F7               	movwf	lcd_PrintString@string+1
  1736     07F9  3184  24C3  3187   	fcall	_lcd_PrintString
  1737     07FC                     l141:
  1738     07FC  0008               	return
  1739     07FD                     __end_of_lcd_PrintDigitInt32:
  1740                           
  1741                           	psect	text4
  1742     04DA                     __ptext4:	
  1743 ;; *************** function _memset *****************
  1744 ;; Defined at:
  1745 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memset.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  dest            1    0[COMMON] PTR void 
  1748 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintDigitInt32@numberRevChar(11), lcd_PrintInt32@numberChar(11), lcd_Pr
      +intInt32@numberRevChar(11), 
  1749 ;;  c               2    1[COMMON] int 
  1750 ;;  n               2    3[COMMON] unsigned int 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  p               1    5[COMMON] PTR unsigned char 
  1753 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintDigitInt32@numberRevChar(11), lcd_PrintInt32@numberChar(11), lcd_Pr
      +intInt32@numberRevChar(11), 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    0[COMMON] PTR void 
  1756 ;; Registers used:
  1757 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1763 ;;      Params:         5       0       0       0       0       0       0
  1764 ;;      Locals:         1       0       0       0       0       0       0
  1765 ;;      Temps:          0       0       0       0       0       0       0
  1766 ;;      Totals:         6       0       0       0       0       0       0
  1767 ;;Total ram usage:        6 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_lcd_PrintDigitInt32
  1773 ;;		_lcd_PrintInt32
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777     04DA                     _memset:	
  1778                           ;psect for function _memset
  1779                           
  1780     04DA                     l1125:	
  1781                           ;incstack = 0
  1782                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  1783                           
  1784     04DA  0870               	movf	memset@dest,w
  1785     04DB  00F5               	movwf	memset@p
  1786     04DC  2CE4               	goto	l1131
  1787     04DD                     l1127:
  1788     04DD  0875               	movf	memset@p,w
  1789     04DE  0086               	movwf	6
  1790     04DF  0187               	clrf	7
  1791     04E0  0871               	movf	memset@c,w
  1792     04E1  0081               	movwf	1
  1793     04E2                     l1129:
  1794     04E2  3001               	movlw	1
  1795     04E3  07F5               	addwf	memset@p,f
  1796     04E4                     l1131:
  1797     04E4  3001               	movlw	1
  1798     04E5  02F3               	subwf	memset@n,f
  1799     04E6  3000               	movlw	0
  1800     04E7  3BF4               	subwfb	memset@n+1,f
  1801     04E8  0A73               	incf	memset@n,w
  1802     04E9  1D03               	skipz
  1803     04EA  2CEF               	goto	u511
  1804     04EB  0A74               	incf	memset@n+1,w
  1805     04EC  1D03               	btfss	3,2
  1806     04ED  2CEF               	goto	u511
  1807     04EE  2CF0               	goto	u510
  1808     04EF                     u511:
  1809     04EF  2CDD               	goto	l1127
  1810     04F0                     u510:
  1811     04F0                     l769:
  1812     04F0  0008               	return
  1813     04F1                     __end_of_memset:
  1814                           
  1815                           	psect	text5
  1816     04C3                     __ptext5:	
  1817 ;; *************** function _lcd_PrintString *****************
  1818 ;; Defined at:
  1819 ;;		line 168 in file "program.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  string          2    6[COMMON] PTR unsigned char 
  1822 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintInt32@numberChar(11), STR_1(13), 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1834 ;;      Params:         2       0       0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0
  1836 ;;      Temps:          1       0       0       0       0       0       0
  1837 ;;      Totals:         3       0       0       0       0       0       0
  1838 ;;Total ram usage:        3 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 5
  1841 ;; This function calls:
  1842 ;;		_lcd_PrintChar
  1843 ;; This function is called by:
  1844 ;;		_programLoop
  1845 ;;		_lcd_PrintDigitInt32
  1846 ;;		_lcd_PrintInt32
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850     04C3                     _lcd_PrintString:	
  1851                           ;psect for function _lcd_PrintString
  1852                           
  1853     04C3                     l1113:	
  1854                           ;incstack = 0
  1855                           ; Regs used in _lcd_PrintString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1856                           
  1857                           
  1858                           ;program.c: 169:     while(*string!=0) {
  1859     04C3  2CD0               	goto	l1119
  1860     04C4                     l1115:
  1861                           
  1862                           ;program.c: 170:         lcd_PrintChar(*string);
  1863     04C4  0876               	movf	lcd_PrintString@string,w
  1864     04C5  0084               	movwf	4
  1865     04C6  0877               	movf	lcd_PrintString@string+1,w
  1866     04C7  0085               	movwf	5
  1867     04C8  0800               	movf	0,w	;code access
  1868     04C9  3184  2461  3184   	fcall	_lcd_PrintChar
  1869     04CC                     l1117:
  1870                           
  1871                           ;program.c: 171:         string++;
  1872     04CC  3001               	movlw	1
  1873     04CD  07F6               	addwf	lcd_PrintString@string,f
  1874     04CE  3000               	movlw	0
  1875     04CF  3DF7               	addwfc	lcd_PrintString@string+1,f
  1876     04D0                     l1119:
  1877                           
  1878                           ;program.c: 169:     while(*string!=0) {
  1879     04D0  0876               	movf	lcd_PrintString@string,w
  1880     04D1  0084               	movwf	4
  1881     04D2  0877               	movf	lcd_PrintString@string+1,w
  1882     04D3  0085               	movwf	5
  1883     04D4  0012               	moviw fsr0++
  1884     04D5  1D03               	btfss	3,2
  1885     04D6  2CD8               	goto	u501
  1886     04D7  2CD9               	goto	u500
  1887     04D8                     u501:
  1888     04D8  2CC4               	goto	l1115
  1889     04D9                     u500:
  1890     04D9                     l117:
  1891     04D9  0008               	return
  1892     04DA                     __end_of_lcd_PrintString:
  1893                           
  1894                           	psect	text6
  1895     0461                     __ptext6:	
  1896 ;; *************** function _lcd_PrintChar *****************
  1897 ;; Defined at:
  1898 ;;		line 161 in file "program.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  character       1    wreg     unsigned char 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  character       1    5[COMMON] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, pclath, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1912 ;;      Params:         0       0       0       0       0       0       0
  1913 ;;      Locals:         1       0       0       0       0       0       0
  1914 ;;      Temps:          0       0       0       0       0       0       0
  1915 ;;      Totals:         1       0       0       0       0       0       0
  1916 ;;Total ram usage:        1 bytes
  1917 ;; Hardware stack levels used: 1
  1918 ;; Hardware stack levels required when called: 4
  1919 ;; This function calls:
  1920 ;;		_lcd_DelaySetupTime
  1921 ;;		_lcd_WriteData
  1922 ;; This function is called by:
  1923 ;;		_lcd_PrintString
  1924 ;;		_lcd_PrintDigitInt32
  1925 ;;		_lcd_PrintInt32
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929     0461                     _lcd_PrintChar:	
  1930                           ;psect for function _lcd_PrintChar
  1931                           
  1932                           
  1933                           ;incstack = 0
  1934                           ; Regs used in _lcd_PrintChar: [wreg+status,2+status,0+pclath+cstack]
  1935                           ;lcd_PrintChar@character stored from wreg
  1936     0461  00F5               	movwf	lcd_PrintChar@character
  1937     0462                     l1101:
  1938                           
  1939                           ;program.c: 162:     LATBbits.LATB5 = 1;
  1940     0462  0022               	movlb	2	; select bank2
  1941     0463  168D               	bsf	13,5	;volatile
  1942     0464                     l1103:
  1943                           
  1944                           ;program.c: 163:     lcd_DelaySetupTime();
  1945     0464  3184  2438  3184   	fcall	_lcd_DelaySetupTime
  1946                           
  1947                           ;program.c: 165:     lcd_WriteData(character);
  1948     0467  0875               	movf	lcd_PrintChar@character,w
  1949     0468  3186  2616  3184   	fcall	_lcd_WriteData
  1950     046B                     l111:
  1951     046B  0008               	return
  1952     046C                     __end_of_lcd_PrintChar:
  1953                           
  1954                           	psect	text7
  1955     0498                     __ptext7:	
  1956 ;; *************** function _labs *****************
  1957 ;; Defined at:
  1958 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\labs.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  a               4    0[COMMON] long 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  4    0[COMMON] long 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1972 ;;      Params:         4       0       0       0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0       0       0
  1975 ;;      Totals:         4       0       0       0       0       0       0
  1976 ;;Total ram usage:        4 bytes
  1977 ;; Hardware stack levels used: 1
  1978 ;; This function calls:
  1979 ;;		Nothing
  1980 ;; This function is called by:
  1981 ;;		_lcd_PrintDigitInt32
  1982 ;;		_lcd_PrintInt32
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986     0498                     _labs:	
  1987                           ;psect for function _labs
  1988                           
  1989     0498                     l1133:	
  1990                           ;incstack = 0
  1991                           ; Regs used in _labs: [wreg+status,2+status,0]
  1992                           
  1993     0498  1BF3               	btfsc	labs@a+3,7
  1994     0499  2C9B               	goto	u521
  1995     049A  2C9C               	goto	u520
  1996     049B                     u521:
  1997     049B  2C9D               	goto	l1137
  1998     049C                     u520:
  1999     049C                     l1135:
  2000     049C  2CAC               	goto	l763
  2001     049D                     l1137:
  2002     049D  0970               	comf	labs@a,w
  2003     049E  00F0               	movwf	?_labs
  2004     049F  0971               	comf	labs@a+1,w
  2005     04A0  00F1               	movwf	?_labs+1
  2006     04A1  0972               	comf	labs@a+2,w
  2007     04A2  00F2               	movwf	?_labs+2
  2008     04A3  0973               	comf	labs@a+3,w
  2009     04A4  00F3               	movwf	?_labs+3
  2010     04A5  0AF0               	incf	?_labs,f
  2011     04A6  1903               	skipnz
  2012     04A7  0AF1               	incf	?_labs+1,f
  2013     04A8  1903               	skipnz
  2014     04A9  0AF2               	incf	?_labs+2,f
  2015     04AA  1903               	skipnz
  2016     04AB  0AF3               	incf	?_labs+3,f
  2017     04AC                     l763:
  2018     04AC  0008               	return
  2019     04AD                     __end_of_labs:
  2020                           
  2021                           	psect	text8
  2022     0485                     __ptext8:	
  2023 ;; *************** function ___bmul *****************
  2024 ;; Defined at:
  2025 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  multiplier      1    wreg     unsigned char 
  2028 ;;  multiplicand    1    0[COMMON] unsigned char 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  multiplier      1    2[COMMON] unsigned char 
  2031 ;;  product         1    1[COMMON] unsigned char 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      unsigned char 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2, status,0
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2041 ;;      Params:         1       0       0       0       0       0       0
  2042 ;;      Locals:         2       0       0       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0
  2044 ;;      Totals:         3       0       0       0       0       0       0
  2045 ;;Total ram usage:        3 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; This function calls:
  2048 ;;		Nothing
  2049 ;; This function is called by:
  2050 ;;		_lcd_PrintDigitInt32
  2051 ;;		_lcd_PrintInt32
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055     0485                     ___bmul:	
  2056                           ;psect for function ___bmul
  2057                           
  2058                           
  2059                           ;incstack = 0
  2060                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2061                           ;___bmul@multiplier stored from wreg
  2062     0485  00F2               	movwf	___bmul@multiplier
  2063     0486                     l1141:
  2064     0486  01F1               	clrf	___bmul@product
  2065     0487                     l1143:
  2066     0487  1C72               	btfss	___bmul@multiplier,0
  2067     0488  2C8A               	goto	u531
  2068     0489  2C8B               	goto	u530
  2069     048A                     u531:
  2070     048A  2C8D               	goto	l1147
  2071     048B                     u530:
  2072     048B                     l1145:
  2073     048B  0870               	movf	___bmul@multiplicand,w
  2074     048C  07F1               	addwf	___bmul@product,f
  2075     048D                     l1147:
  2076     048D  1003               	clrc
  2077     048E  0DF0               	rlf	___bmul@multiplicand,f
  2078     048F                     l1149:
  2079     048F  1003               	clrc
  2080     0490  0CF2               	rrf	___bmul@multiplier,f
  2081     0491  0872               	movf	___bmul@multiplier,w
  2082     0492  1D03               	btfss	3,2
  2083     0493  2C95               	goto	u541
  2084     0494  2C96               	goto	u540
  2085     0495                     u541:
  2086     0495  2C87               	goto	l1143
  2087     0496                     u540:
  2088     0496                     l1151:
  2089     0496  0871               	movf	___bmul@product,w
  2090     0497                     l326:
  2091     0497  0008               	return
  2092     0498                     __end_of___bmul:
  2093                           
  2094                           	psect	text9
  2095     069E                     __ptext9:	
  2096 ;; *************** function ___aldiv *****************
  2097 ;; Defined at:
  2098 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  divisor         4    0[COMMON] long 
  2101 ;;  dividend        4    4[COMMON] long 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  quotient        4   10[COMMON] long 
  2104 ;;  sign            1    9[COMMON] unsigned char 
  2105 ;;  counter         1    8[COMMON] unsigned char 
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  4    0[COMMON] long 
  2108 ;; Registers used:
  2109 ;;		wreg, status,2, status,0
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2115 ;;      Params:         8       0       0       0       0       0       0
  2116 ;;      Locals:         6       0       0       0       0       0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0
  2118 ;;      Totals:        14       0       0       0       0       0       0
  2119 ;;Total ram usage:       14 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; This function calls:
  2122 ;;		Nothing
  2123 ;; This function is called by:
  2124 ;;		_lcd_PrintDigitInt32
  2125 ;;		_lcd_PrintInt32
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129     069E                     ___aldiv:	
  2130                           ;psect for function ___aldiv
  2131                           
  2132     069E                     l1155:	
  2133                           ;incstack = 0
  2134                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2135                           
  2136     069E  01F9               	clrf	___aldiv@sign
  2137     069F                     l1157:
  2138     069F  1FF3               	btfss	___aldiv@divisor+3,7
  2139     06A0  2EA2               	goto	u551
  2140     06A1  2EA3               	goto	u550
  2141     06A2                     u551:
  2142     06A2  2EB0               	goto	l365
  2143     06A3                     u550:
  2144     06A3                     l1159:
  2145     06A3  09F0               	comf	___aldiv@divisor,f
  2146     06A4  09F1               	comf	___aldiv@divisor+1,f
  2147     06A5  09F2               	comf	___aldiv@divisor+2,f
  2148     06A6  09F3               	comf	___aldiv@divisor+3,f
  2149     06A7  0AF0               	incf	___aldiv@divisor,f
  2150     06A8  1903               	skipnz
  2151     06A9  0AF1               	incf	___aldiv@divisor+1,f
  2152     06AA  1903               	skipnz
  2153     06AB  0AF2               	incf	___aldiv@divisor+2,f
  2154     06AC  1903               	skipnz
  2155     06AD  0AF3               	incf	___aldiv@divisor+3,f
  2156     06AE  3001               	movlw	1
  2157     06AF  00F9               	movwf	___aldiv@sign
  2158     06B0                     l365:
  2159     06B0  1FF7               	btfss	___aldiv@dividend+3,7
  2160     06B1  2EB3               	goto	u561
  2161     06B2  2EB4               	goto	u560
  2162     06B3                     u561:
  2163     06B3  2EC1               	goto	l1165
  2164     06B4                     u560:
  2165     06B4                     l1161:
  2166     06B4  09F4               	comf	___aldiv@dividend,f
  2167     06B5  09F5               	comf	___aldiv@dividend+1,f
  2168     06B6  09F6               	comf	___aldiv@dividend+2,f
  2169     06B7  09F7               	comf	___aldiv@dividend+3,f
  2170     06B8  0AF4               	incf	___aldiv@dividend,f
  2171     06B9  1903               	skipnz
  2172     06BA  0AF5               	incf	___aldiv@dividend+1,f
  2173     06BB  1903               	skipnz
  2174     06BC  0AF6               	incf	___aldiv@dividend+2,f
  2175     06BD  1903               	skipnz
  2176     06BE  0AF7               	incf	___aldiv@dividend+3,f
  2177     06BF                     l1163:
  2178     06BF  3001               	movlw	1
  2179     06C0  06F9               	xorwf	___aldiv@sign,f
  2180     06C1                     l1165:
  2181     06C1  3000               	movlw	0
  2182     06C2  00FD               	movwf	___aldiv@quotient+3
  2183     06C3  3000               	movlw	0
  2184     06C4  00FC               	movwf	___aldiv@quotient+2
  2185     06C5  3000               	movlw	0
  2186     06C6  00FB               	movwf	___aldiv@quotient+1
  2187     06C7  3000               	movlw	0
  2188     06C8  00FA               	movwf	___aldiv@quotient
  2189     06C9                     l1167:
  2190     06C9  0873               	movf	___aldiv@divisor+3,w
  2191     06CA  0472               	iorwf	___aldiv@divisor+2,w
  2192     06CB  0471               	iorwf	___aldiv@divisor+1,w
  2193     06CC  0470               	iorwf	___aldiv@divisor,w
  2194     06CD  1903               	skipnz
  2195     06CE  2ED0               	goto	u571
  2196     06CF  2ED1               	goto	u570
  2197     06D0                     u571:
  2198     06D0  2F10               	goto	l1187
  2199     06D1                     u570:
  2200     06D1                     l1169:
  2201     06D1  3001               	movlw	1
  2202     06D2  00F8               	movwf	___aldiv@counter
  2203     06D3  2EDD               	goto	l1173
  2204     06D4                     l1171:
  2205     06D4  3001               	movlw	1
  2206     06D5                     u585:
  2207     06D5  35F0               	lslf	___aldiv@divisor,f
  2208     06D6  0DF1               	rlf	___aldiv@divisor+1,f
  2209     06D7  0DF2               	rlf	___aldiv@divisor+2,f
  2210     06D8  0DF3               	rlf	___aldiv@divisor+3,f
  2211     06D9  0B89               	decfsz	9,f
  2212     06DA  2ED5               	goto	u585
  2213     06DB  3001               	movlw	1
  2214     06DC  07F8               	addwf	___aldiv@counter,f
  2215     06DD                     l1173:
  2216     06DD  1FF3               	btfss	___aldiv@divisor+3,7
  2217     06DE  2EE0               	goto	u591
  2218     06DF  2EE1               	goto	u590
  2219     06E0                     u591:
  2220     06E0  2ED4               	goto	l1171
  2221     06E1                     u590:
  2222     06E1                     l1175:
  2223     06E1  3001               	movlw	1
  2224     06E2                     u605:
  2225     06E2  35FA               	lslf	___aldiv@quotient,f
  2226     06E3  0DFB               	rlf	___aldiv@quotient+1,f
  2227     06E4  0DFC               	rlf	___aldiv@quotient+2,f
  2228     06E5  0DFD               	rlf	___aldiv@quotient+3,f
  2229     06E6  0B89               	decfsz	9,f
  2230     06E7  2EE2               	goto	u605
  2231     06E8                     l1177:
  2232     06E8  0873               	movf	___aldiv@divisor+3,w
  2233     06E9  0277               	subwf	___aldiv@dividend+3,w
  2234     06EA  1D03               	skipz
  2235     06EB  2EF6               	goto	u615
  2236     06EC  0872               	movf	___aldiv@divisor+2,w
  2237     06ED  0276               	subwf	___aldiv@dividend+2,w
  2238     06EE  1D03               	skipz
  2239     06EF  2EF6               	goto	u615
  2240     06F0  0871               	movf	___aldiv@divisor+1,w
  2241     06F1  0275               	subwf	___aldiv@dividend+1,w
  2242     06F2  1D03               	skipz
  2243     06F3  2EF6               	goto	u615
  2244     06F4  0870               	movf	___aldiv@divisor,w
  2245     06F5  0274               	subwf	___aldiv@dividend,w
  2246     06F6                     u615:
  2247     06F6  1C03               	skipc
  2248     06F7  2EF9               	goto	u611
  2249     06F8  2EFA               	goto	u610
  2250     06F9                     u611:
  2251     06F9  2F03               	goto	l1183
  2252     06FA                     u610:
  2253     06FA                     l1179:
  2254     06FA  0870               	movf	___aldiv@divisor,w
  2255     06FB  02F4               	subwf	___aldiv@dividend,f
  2256     06FC  0871               	movf	___aldiv@divisor+1,w
  2257     06FD  3BF5               	subwfb	___aldiv@dividend+1,f
  2258     06FE  0872               	movf	___aldiv@divisor+2,w
  2259     06FF  3BF6               	subwfb	___aldiv@dividend+2,f
  2260     0700  0873               	movf	___aldiv@divisor+3,w
  2261     0701  3BF7               	subwfb	___aldiv@dividend+3,f
  2262     0702                     l1181:
  2263     0702  147A               	bsf	___aldiv@quotient,0
  2264     0703                     l1183:
  2265     0703  3001               	movlw	1
  2266     0704                     u625:
  2267     0704  36F3               	lsrf	___aldiv@divisor+3,f
  2268     0705  0CF2               	rrf	___aldiv@divisor+2,f
  2269     0706  0CF1               	rrf	___aldiv@divisor+1,f
  2270     0707  0CF0               	rrf	___aldiv@divisor,f
  2271     0708  0B89               	decfsz	9,f
  2272     0709  2F04               	goto	u625
  2273     070A                     l1185:
  2274     070A  3001               	movlw	1
  2275     070B  02F8               	subwf	___aldiv@counter,f
  2276     070C  1D03               	btfss	3,2
  2277     070D  2F0F               	goto	u631
  2278     070E  2F10               	goto	u630
  2279     070F                     u631:
  2280     070F  2EE1               	goto	l1175
  2281     0710                     u630:
  2282     0710                     l1187:
  2283     0710  0879               	movf	___aldiv@sign,w
  2284     0711  1903               	btfsc	3,2
  2285     0712  2F14               	goto	u641
  2286     0713  2F15               	goto	u640
  2287     0714                     u641:
  2288     0714  2F20               	goto	l1191
  2289     0715                     u640:
  2290     0715                     l1189:
  2291     0715  09FA               	comf	___aldiv@quotient,f
  2292     0716  09FB               	comf	___aldiv@quotient+1,f
  2293     0717  09FC               	comf	___aldiv@quotient+2,f
  2294     0718  09FD               	comf	___aldiv@quotient+3,f
  2295     0719  0AFA               	incf	___aldiv@quotient,f
  2296     071A  1903               	skipnz
  2297     071B  0AFB               	incf	___aldiv@quotient+1,f
  2298     071C  1903               	skipnz
  2299     071D  0AFC               	incf	___aldiv@quotient+2,f
  2300     071E  1903               	skipnz
  2301     071F  0AFD               	incf	___aldiv@quotient+3,f
  2302     0720                     l1191:
  2303     0720  087D               	movf	___aldiv@quotient+3,w
  2304     0721  00F3               	movwf	?___aldiv+3
  2305     0722  087C               	movf	___aldiv@quotient+2,w
  2306     0723  00F2               	movwf	?___aldiv+2
  2307     0724  087B               	movf	___aldiv@quotient+1,w
  2308     0725  00F1               	movwf	?___aldiv+1
  2309     0726  087A               	movf	___aldiv@quotient,w
  2310     0727  00F0               	movwf	?___aldiv
  2311     0728                     l375:
  2312     0728  0008               	return
  2313     0729                     __end_of___aldiv:
  2314                           
  2315                           	psect	text10
  2316     04F1                     __ptext10:	
  2317 ;; *************** function _lcd_Goto *****************
  2318 ;; Defined at:
  2319 ;;		line 145 in file "program.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;  y               1    wreg     unsigned char 
  2322 ;;  x               1    6[COMMON] unsigned char 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  y               1    7[COMMON] unsigned char 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2334 ;;      Params:         1       0       0       0       0       0       0
  2335 ;;      Locals:         1       0       0       0       0       0       0
  2336 ;;      Temps:          0       0       0       0       0       0       0
  2337 ;;      Totals:         2       0       0       0       0       0       0
  2338 ;;Total ram usage:        2 bytes
  2339 ;; Hardware stack levels used: 1
  2340 ;; Hardware stack levels required when called: 5
  2341 ;; This function calls:
  2342 ;;		_lcd_PrintCmd
  2343 ;; This function is called by:
  2344 ;;		_programLoop
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348     04F1                     _lcd_Goto:	
  2349                           ;psect for function _lcd_Goto
  2350                           
  2351                           
  2352                           ;incstack = 0
  2353                           ; Regs used in _lcd_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2354                           ;lcd_Goto@y stored from wreg
  2355     04F1  00F7               	movwf	lcd_Goto@y
  2356     04F2                     l1197:
  2357                           
  2358                           ;program.c: 146:     switch(y) {
  2359     04F2  2D05               	goto	l1207
  2360     04F3                     l1199:
  2361                           
  2362                           ;program.c: 148:             lcd_PrintCmd(0x80 + x);
  2363     04F3  0876               	movf	lcd_Goto@x,w
  2364     04F4  3E80               	addlw	128
  2365     04F5  3184  2456  3184   	fcall	_lcd_PrintCmd
  2366                           
  2367                           ;program.c: 149:             break;
  2368     04F8  2D0D               	goto	l108
  2369     04F9                     l1201:
  2370                           
  2371                           ;program.c: 152:             lcd_PrintCmd(0xC0 + x);
  2372     04F9  0876               	movf	lcd_Goto@x,w
  2373     04FA  3EC0               	addlw	192
  2374     04FB  3184  2456  3184   	fcall	_lcd_PrintCmd
  2375                           
  2376                           ;program.c: 153:             break;
  2377     04FE  2D0D               	goto	l108
  2378     04FF                     l1203:
  2379                           
  2380                           ;program.c: 156:             lcd_PrintCmd(0x80 + x);
  2381     04FF  0876               	movf	lcd_Goto@x,w
  2382     0500  3E80               	addlw	128
  2383     0501  3184  2456  3184   	fcall	_lcd_PrintCmd
  2384                           
  2385                           ;program.c: 157:             break;
  2386     0504  2D0D               	goto	l108
  2387     0505                     l1207:
  2388     0505  0877               	movf	lcd_Goto@y,w
  2389                           
  2390                           ; Switch size 1, requested type "simple"
  2391                           ; Number of cases is 2, Range of values is 0 to 1
  2392                           ; switch strategies available:
  2393                           ; Name         Instructions Cycles
  2394                           ; simple_byte            7     4 (average)
  2395                           ; direct_byte           10     6 (fixed)
  2396                           ; jumptable            260     6 (fixed)
  2397                           ;	Chosen strategy is simple_byte
  2398     0506  3A00               	xorlw	0	; case 0
  2399     0507  1903               	skipnz
  2400     0508  2CF3               	goto	l1199
  2401     0509  3A01               	xorlw	1	; case 1
  2402     050A  1903               	skipnz
  2403     050B  2CF9               	goto	l1201
  2404     050C  2CFF               	goto	l1203
  2405     050D                     l108:
  2406     050D  0008               	return
  2407     050E                     __end_of_lcd_Goto:
  2408                           
  2409                           	psect	text11
  2410     050E                     __ptext11:	
  2411 ;; *************** function _programInitialize *****************
  2412 ;; Defined at:
  2413 ;;		line 20 in file "program.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;		None
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;		None
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  1    wreg      void 
  2420 ;; Registers used:
  2421 ;;		wreg, status,2, status,0, pclath, cstack
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2427 ;;      Params:         0       0       0       0       0       0       0
  2428 ;;      Locals:         0       0       0       0       0       0       0
  2429 ;;      Temps:          0       0       0       0       0       0       0
  2430 ;;      Totals:         0       0       0       0       0       0       0
  2431 ;;Total ram usage:        0 bytes
  2432 ;; Hardware stack levels used: 1
  2433 ;; Hardware stack levels required when called: 6
  2434 ;; This function calls:
  2435 ;;		_lcd_Initialize
  2436 ;;		_var_Initialize
  2437 ;; This function is called by:
  2438 ;;		_main
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442     050E                     _programInitialize:	
  2443                           ;psect for function _programInitialize
  2444                           
  2445     050E                     l1281:	
  2446                           ;incstack = 0
  2447                           ; Regs used in _programInitialize: [wreg+status,2+status,0+pclath+cstack]
  2448                           
  2449                           
  2450                           ;program.c: 21:     TRISBbits.TRISB6 = 0;
  2451     050E  0021               	movlb	1	; select bank1
  2452     050F  130D               	bcf	13,6	;volatile
  2453                           
  2454                           ;program.c: 22:     TRISBbits.TRISB7 = 0;
  2455     0510  138D               	bcf	13,7	;volatile
  2456                           
  2457                           ;program.c: 24:     LATBbits.LATB7 = 0;
  2458     0511  0022               	movlb	2	; select bank2
  2459     0512  138D               	bcf	13,7	;volatile
  2460                           
  2461                           ;program.c: 25:     LATBbits.LATB6 = 0;
  2462     0513  130D               	bcf	13,6	;volatile
  2463                           
  2464                           ;program.c: 27:     TRISBbits.TRISB5 = 0;
  2465     0514  0021               	movlb	1	; select bank1
  2466     0515  128D               	bcf	13,5	;volatile
  2467                           
  2468                           ;program.c: 28:     TRISBbits.TRISB4 = 0;
  2469     0516  120D               	bcf	13,4	;volatile
  2470                           
  2471                           ;program.c: 29:     TRISBbits.TRISB3 = 0;
  2472     0517  118D               	bcf	13,3	;volatile
  2473                           
  2474                           ;program.c: 30:     TRISBbits.TRISB2 = 0;
  2475     0518  110D               	bcf	13,2	;volatile
  2476                           
  2477                           ;program.c: 31:     TRISBbits.TRISB1 = 0;
  2478     0519  108D               	bcf	13,1	;volatile
  2479                           
  2480                           ;program.c: 32:     TRISCbits.TRISC5 = 0;
  2481     051A  128E               	bcf	14,5	;volatile
  2482                           
  2483                           ;program.c: 34:     ANSELBbits.ANSB5 = 0;
  2484     051B  0023               	movlb	3	; select bank3
  2485     051C  128D               	bcf	13,5	;volatile
  2486                           
  2487                           ;program.c: 35:     ANSELBbits.ANSB4 = 0;
  2488     051D  120D               	bcf	13,4	;volatile
  2489                           
  2490                           ;program.c: 36:     ANSELBbits.ANSB3 = 0;
  2491     051E  118D               	bcf	13,3	;volatile
  2492                           
  2493                           ;program.c: 37:     ANSELBbits.ANSB2 = 0;
  2494     051F  110D               	bcf	13,2	;volatile
  2495                           
  2496                           ;program.c: 38:     ANSELBbits.ANSB1 = 0;
  2497     0520  108D               	bcf	13,1	;volatile
  2498                           
  2499                           ;program.c: 40:     TRISAbits.TRISA0 = 1;
  2500     0521  0021               	movlb	1	; select bank1
  2501     0522  140C               	bsf	12,0	;volatile
  2502                           
  2503                           ;program.c: 41:     ANSELAbits.ANSA0 = 1;
  2504     0523  0023               	movlb	3	; select bank3
  2505     0524  140C               	bsf	12,0	;volatile
  2506                           
  2507                           ;program.c: 43:     LATBbits.LATB5 = 0;
  2508     0525  0022               	movlb	2	; select bank2
  2509     0526  128D               	bcf	13,5	;volatile
  2510                           
  2511                           ;program.c: 44:     LATBbits.LATB4 = 0;
  2512     0527  120D               	bcf	13,4	;volatile
  2513                           
  2514                           ;program.c: 45:     LATBbits.LATB3 = 0;
  2515     0528  118D               	bcf	13,3	;volatile
  2516                           
  2517                           ;program.c: 46:     LATBbits.LATB2 = 0;
  2518     0529  110D               	bcf	13,2	;volatile
  2519                           
  2520                           ;program.c: 47:     LATBbits.LATB1 = 0;
  2521     052A  108D               	bcf	13,1	;volatile
  2522                           
  2523                           ;program.c: 48:     LATCbits.LATC5 = 0;
  2524     052B  128E               	bcf	14,5	;volatile
  2525     052C                     l1283:
  2526                           
  2527                           ;program.c: 50:     lcd_Initialize();
  2528     052C  3185  258C  3185   	fcall	_lcd_Initialize
  2529                           
  2530                           ;program.c: 51:     var_Initialize();
  2531     052F  3184  246C  3185   	fcall	_var_Initialize
  2532     0532                     l73:
  2533     0532  0008               	return
  2534     0533                     __end_of_programInitialize:
  2535                           
  2536                           	psect	text12
  2537     046C                     __ptext12:	
  2538 ;; *************** function _var_Initialize *****************
  2539 ;; Defined at:
  2540 ;;		line 250 in file "program.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2554 ;;      Params:         0       0       0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0       0       0
  2557 ;;      Totals:         0       0       0       0       0       0       0
  2558 ;;Total ram usage:        0 bytes
  2559 ;; Hardware stack levels used: 1
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_programInitialize
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567     046C                     _var_Initialize:	
  2568                           ;psect for function _var_Initialize
  2569                           
  2570     046C                     l907:	
  2571                           ;incstack = 0
  2572                           ; Regs used in _var_Initialize: [wreg+status,2+status,0]
  2573                           
  2574                           
  2575                           ;program.c: 252:     ADCON0bits.ADON = 0;
  2576     046C  0021               	movlb	1	; select bank1
  2577     046D  101D               	bcf	29,0	;volatile
  2578                           
  2579                           ;program.c: 253:     ADCON0bits.ADRMD = 0;
  2580     046E  139D               	bcf	29,7	;volatile
  2581                           
  2582                           ;program.c: 256:     ADCON1bits.ADFM = 0;
  2583     046F  139E               	bcf	30,7	;volatile
  2584     0470                     l909:
  2585                           
  2586                           ;program.c: 257:     ADCON1bits.ADCS = 0;
  2587     0470  308F               	movlw	-113
  2588     0471  059E               	andwf	30,f	;volatile
  2589                           
  2590                           ;program.c: 258:     ADCON1bits.ADPREF = 0;
  2591     0472  30FC               	movlw	-4
  2592     0473  059E               	andwf	30,f	;volatile
  2593     0474                     l911:
  2594                           
  2595                           ;program.c: 259:     ADCON1bits.ADNREF = 0;
  2596     0474  111E               	bcf	30,2	;volatile
  2597                           
  2598                           ;program.c: 262:     ADCON2bits.TRIGSEL = 0;
  2599     0475  300F               	movlw	-241
  2600     0476  059F               	andwf	31,f	;volatile
  2601     0477                     l144:
  2602     0477  0008               	return
  2603     0478                     __end_of_var_Initialize:
  2604                           
  2605                           	psect	text13
  2606     058C                     __ptext13:	
  2607 ;; *************** function _lcd_Initialize *****************
  2608 ;; Defined at:
  2609 ;;		line 120 in file "program.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;		None
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;		None
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      void 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, status,0, pclath, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2623 ;;      Params:         0       0       0       0       0       0       0
  2624 ;;      Locals:         0       0       0       0       0       0       0
  2625 ;;      Temps:          0       0       0       0       0       0       0
  2626 ;;      Totals:         0       0       0       0       0       0       0
  2627 ;;Total ram usage:        0 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 5
  2630 ;; This function calls:
  2631 ;;		_delay_ms
  2632 ;;		_delay_x24o25us
  2633 ;;		_lcd_PrintCmd
  2634 ;; This function is called by:
  2635 ;;		_programInitialize
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639     058C                     _lcd_Initialize:	
  2640                           ;psect for function _lcd_Initialize
  2641                           
  2642     058C                     l1195:	
  2643                           ;incstack = 0
  2644                           ; Regs used in _lcd_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2645                           
  2646                           
  2647                           ;program.c: 121:     delay_ms(10);
  2648     058C  3000               	movlw	0
  2649     058D  00F9               	movwf	delay_ms@delay+3
  2650     058E  3000               	movlw	0
  2651     058F  00F8               	movwf	delay_ms@delay+2
  2652     0590  3000               	movlw	0
  2653     0591  00F7               	movwf	delay_ms@delay+1
  2654     0592  300A               	movlw	10
  2655     0593  00F6               	movwf	delay_ms@delay
  2656     0594  3185  2533  3185   	fcall	_delay_ms
  2657                           
  2658                           ;program.c: 124:     lcd_PrintCmd(0x33);
  2659     0597  3033               	movlw	51
  2660     0598  3184  2456  3185   	fcall	_lcd_PrintCmd
  2661                           
  2662                           ;program.c: 125:     lcd_PrintCmd(0x32);
  2663     059B  3032               	movlw	50
  2664     059C  3184  2456  3185   	fcall	_lcd_PrintCmd
  2665                           
  2666                           ;program.c: 128:     lcd_PrintCmd(0x28);
  2667     059F  3028               	movlw	40
  2668     05A0  3184  2456  3185   	fcall	_lcd_PrintCmd
  2669                           
  2670                           ;program.c: 129:     lcd_PrintCmd(0x02);
  2671     05A3  3002               	movlw	2
  2672     05A4  3184  2456  3185   	fcall	_lcd_PrintCmd
  2673                           
  2674                           ;program.c: 130:     lcd_PrintCmd(0x0C);
  2675     05A7  300C               	movlw	12
  2676     05A8  3184  2456  3185   	fcall	_lcd_PrintCmd
  2677                           
  2678                           ;program.c: 131:     lcd_PrintCmd(0x06);
  2679     05AB  3006               	movlw	6
  2680     05AC  3184  2456  3185   	fcall	_lcd_PrintCmd
  2681                           
  2682                           ;program.c: 132:     lcd_PrintCmd(0x01);
  2683     05AF  3001               	movlw	1
  2684     05B0  3184  2456  3185   	fcall	_lcd_PrintCmd
  2685                           
  2686                           ;program.c: 133:     lcd_PrintCmd(0x80);
  2687     05B3  3080               	movlw	128
  2688     05B4  3184  2456  3185   	fcall	_lcd_PrintCmd
  2689                           
  2690                           ;program.c: 135:     delay_x24o25us(63);
  2691     05B7  303F               	movlw	63
  2692     05B8  00F2               	movwf	delay_x24o25us@delay
  2693     05B9  3000               	movlw	0
  2694     05BA  00F3               	movwf	delay_x24o25us@delay+1
  2695     05BB  3184  24AD  3185   	fcall	_delay_x24o25us
  2696     05BE                     l97:
  2697     05BE  0008               	return
  2698     05BF                     __end_of_lcd_Initialize:
  2699                           
  2700                           	psect	text14
  2701     0456                     __ptext14:	
  2702 ;; *************** function _lcd_PrintCmd *****************
  2703 ;; Defined at:
  2704 ;;		line 113 in file "program.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  command         1    wreg     unsigned char 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  command         1    5[COMMON] unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0, pclath, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2718 ;;      Params:         0       0       0       0       0       0       0
  2719 ;;      Locals:         1       0       0       0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0       0
  2721 ;;      Totals:         1       0       0       0       0       0       0
  2722 ;;Total ram usage:        1 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; Hardware stack levels required when called: 4
  2725 ;; This function calls:
  2726 ;;		_lcd_DelaySetupTime
  2727 ;;		_lcd_WriteData
  2728 ;; This function is called by:
  2729 ;;		_lcd_Initialize
  2730 ;;		_lcd_Goto
  2731 ;;		_lcd_ClearAll
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735     0456                     _lcd_PrintCmd:	
  2736                           ;psect for function _lcd_PrintCmd
  2737                           
  2738                           
  2739                           ;incstack = 0
  2740                           ; Regs used in _lcd_PrintCmd: [wreg+status,2+status,0+pclath+cstack]
  2741                           ;lcd_PrintCmd@command stored from wreg
  2742     0456  00F5               	movwf	lcd_PrintCmd@command
  2743     0457                     l1121:
  2744                           
  2745                           ;program.c: 114:     LATBbits.LATB5 = 0;
  2746     0457  0022               	movlb	2	; select bank2
  2747     0458  128D               	bcf	13,5	;volatile
  2748     0459                     l1123:
  2749                           
  2750                           ;program.c: 115:     lcd_DelaySetupTime();
  2751     0459  3184  2438  3184   	fcall	_lcd_DelaySetupTime
  2752                           
  2753                           ;program.c: 117:     lcd_WriteData(command);
  2754     045C  0875               	movf	lcd_PrintCmd@command,w
  2755     045D  3186  2616  3184   	fcall	_lcd_WriteData
  2756     0460                     l94:
  2757     0460  0008               	return
  2758     0461                     __end_of_lcd_PrintCmd:
  2759                           
  2760                           	psect	text15
  2761     0616                     __ptext15:	
  2762 ;; *************** function _lcd_WriteData *****************
  2763 ;; Defined at:
  2764 ;;		line 92 in file "program.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;  data            1    wreg     unsigned char 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  data            1    4[COMMON] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0, pclath, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2778 ;;      Params:         0       0       0       0       0       0       0
  2779 ;;      Locals:         1       0       0       0       0       0       0
  2780 ;;      Temps:          2       0       0       0       0       0       0
  2781 ;;      Totals:         3       0       0       0       0       0       0
  2782 ;;Total ram usage:        3 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; Hardware stack levels required when called: 3
  2785 ;; This function calls:
  2786 ;;		_delay_x1o5us
  2787 ;;		_lcd_EPulse
  2788 ;; This function is called by:
  2789 ;;		_lcd_PrintCmd
  2790 ;;		_lcd_PrintChar
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794     0616                     _lcd_WriteData:	
  2795                           ;psect for function _lcd_WriteData
  2796                           
  2797                           
  2798                           ;incstack = 0
  2799                           ; Regs used in _lcd_WriteData: [wreg+status,2+status,0+pclath+cstack]
  2800                           ;lcd_WriteData@data stored from wreg
  2801     0616  00F4               	movwf	lcd_WriteData@data
  2802     0617                     l1077:
  2803                           
  2804                           ;program.c: 94:     LATCbits.LATC5 = (data >> 7) & 0x01;
  2805     0617  0874               	movf	lcd_WriteData@data,w
  2806     0618  00F2               	movwf	??_lcd_WriteData
  2807     0619  3007               	movlw	7
  2808     061A                     u415:
  2809     061A  36F2               	lsrf	??_lcd_WriteData,f
  2810     061B  0B89               	decfsz	9,f
  2811     061C  2E1A               	goto	u415
  2812     061D  0872               	movf	??_lcd_WriteData,w
  2813     061E  3901               	andlw	1
  2814     061F  00F3               	movwf	??_lcd_WriteData+1
  2815     0620  0EF3               	swapf	??_lcd_WriteData+1,f
  2816     0621  0DF3               	rlf	??_lcd_WriteData+1,f
  2817     0622  0022               	movlb	2	; select bank2
  2818     0623  080E               	movf	14,w	;volatile
  2819     0624  0673               	xorwf	??_lcd_WriteData+1,w
  2820     0625  39DF               	andlw	-33
  2821     0626  0673               	xorwf	??_lcd_WriteData+1,w
  2822     0627  008E               	movwf	14	;volatile
  2823                           
  2824                           ;program.c: 95:     LATBbits.LATB1 = (data >> 6) & 0x01;
  2825     0628  0874               	movf	lcd_WriteData@data,w
  2826     0629  00F2               	movwf	??_lcd_WriteData
  2827     062A  3006               	movlw	6
  2828     062B                     u425:
  2829     062B  36F2               	lsrf	??_lcd_WriteData,f
  2830     062C  0B89               	decfsz	9,f
  2831     062D  2E2B               	goto	u425
  2832     062E  0872               	movf	??_lcd_WriteData,w
  2833     062F  3901               	andlw	1
  2834     0630  00F3               	movwf	??_lcd_WriteData+1
  2835     0631  0DF3               	rlf	??_lcd_WriteData+1,f
  2836     0632  080D               	movf	13,w	;volatile
  2837     0633  0673               	xorwf	??_lcd_WriteData+1,w
  2838     0634  39FD               	andlw	-3
  2839     0635  0673               	xorwf	??_lcd_WriteData+1,w
  2840     0636  008D               	movwf	13	;volatile
  2841                           
  2842                           ;program.c: 96:     LATBbits.LATB2 = (data >> 5) & 0x01;
  2843     0637  0874               	movf	lcd_WriteData@data,w
  2844     0638  00F2               	movwf	??_lcd_WriteData
  2845     0639  3005               	movlw	5
  2846     063A                     u435:
  2847     063A  36F2               	lsrf	??_lcd_WriteData,f
  2848     063B  0B89               	decfsz	9,f
  2849     063C  2E3A               	goto	u435
  2850     063D  0872               	movf	??_lcd_WriteData,w
  2851     063E  3901               	andlw	1
  2852     063F  00F3               	movwf	??_lcd_WriteData+1
  2853     0640  0DF3               	rlf	??_lcd_WriteData+1,f
  2854     0641  0DF3               	rlf	??_lcd_WriteData+1,f
  2855     0642  080D               	movf	13,w	;volatile
  2856     0643  0673               	xorwf	??_lcd_WriteData+1,w
  2857     0644  39FB               	andlw	-5
  2858     0645  0673               	xorwf	??_lcd_WriteData+1,w
  2859     0646  008D               	movwf	13	;volatile
  2860                           
  2861                           ;program.c: 97:     LATBbits.LATB3 = (data >> 4) & 0x01;
  2862     0647  0874               	movf	lcd_WriteData@data,w
  2863     0648  00F2               	movwf	??_lcd_WriteData
  2864     0649  3004               	movlw	4
  2865     064A                     u445:
  2866     064A  36F2               	lsrf	??_lcd_WriteData,f
  2867     064B  0B89               	decfsz	9,f
  2868     064C  2E4A               	goto	u445
  2869     064D  0872               	movf	??_lcd_WriteData,w
  2870     064E  3901               	andlw	1
  2871     064F  00F3               	movwf	??_lcd_WriteData+1
  2872     0650  0DF3               	rlf	??_lcd_WriteData+1,f
  2873     0651  0DF3               	rlf	??_lcd_WriteData+1,f
  2874     0652  0DF3               	rlf	??_lcd_WriteData+1,f
  2875     0653  080D               	movf	13,w	;volatile
  2876     0654  0673               	xorwf	??_lcd_WriteData+1,w
  2877     0655  39F7               	andlw	-9
  2878     0656  0673               	xorwf	??_lcd_WriteData+1,w
  2879     0657  008D               	movwf	13	;volatile
  2880     0658                     l1079:
  2881                           
  2882                           ;program.c: 99:     lcd_EPulse();
  2883     0658  3184  244B  3186   	fcall	_lcd_EPulse
  2884     065B                     l1081:
  2885                           
  2886                           ;program.c: 102:     LATCbits.LATC5 = (data >> 3) & 0x01;
  2887     065B  0874               	movf	lcd_WriteData@data,w
  2888     065C  00F2               	movwf	??_lcd_WriteData
  2889     065D  3003               	movlw	3
  2890     065E                     u455:
  2891     065E  36F2               	lsrf	??_lcd_WriteData,f
  2892     065F  0B89               	decfsz	9,f
  2893     0660  2E5E               	goto	u455
  2894     0661  0872               	movf	??_lcd_WriteData,w
  2895     0662  3901               	andlw	1
  2896     0663  00F3               	movwf	??_lcd_WriteData+1
  2897     0664  0EF3               	swapf	??_lcd_WriteData+1,f
  2898     0665  0DF3               	rlf	??_lcd_WriteData+1,f
  2899     0666  0022               	movlb	2	; select bank2
  2900     0667  080E               	movf	14,w	;volatile
  2901     0668  0673               	xorwf	??_lcd_WriteData+1,w
  2902     0669  39DF               	andlw	-33
  2903     066A  0673               	xorwf	??_lcd_WriteData+1,w
  2904     066B  008E               	movwf	14	;volatile
  2905     066C                     l1083:
  2906                           
  2907                           ;program.c: 103:     LATBbits.LATB1 = (data >> 2) & 0x01;
  2908     066C  0874               	movf	lcd_WriteData@data,w
  2909     066D  00F2               	movwf	??_lcd_WriteData
  2910     066E  3002               	movlw	2
  2911     066F                     u465:
  2912     066F  36F2               	lsrf	??_lcd_WriteData,f
  2913     0670  0B89               	decfsz	9,f
  2914     0671  2E6F               	goto	u465
  2915     0672  0872               	movf	??_lcd_WriteData,w
  2916     0673  3901               	andlw	1
  2917     0674  00F3               	movwf	??_lcd_WriteData+1
  2918     0675  0DF3               	rlf	??_lcd_WriteData+1,f
  2919     0676  080D               	movf	13,w	;volatile
  2920     0677  0673               	xorwf	??_lcd_WriteData+1,w
  2921     0678  39FD               	andlw	-3
  2922     0679  0673               	xorwf	??_lcd_WriteData+1,w
  2923     067A  008D               	movwf	13	;volatile
  2924     067B                     l1085:
  2925                           
  2926                           ;program.c: 104:     LATBbits.LATB2 = (data >> 1) & 0x01;
  2927     067B  0874               	movf	lcd_WriteData@data,w
  2928     067C  00F2               	movwf	??_lcd_WriteData
  2929     067D  3001               	movlw	1
  2930     067E                     u475:
  2931     067E  36F2               	lsrf	??_lcd_WriteData,f
  2932     067F  0B89               	decfsz	9,f
  2933     0680  2E7E               	goto	u475
  2934     0681  0872               	movf	??_lcd_WriteData,w
  2935     0682  3901               	andlw	1
  2936     0683  00F3               	movwf	??_lcd_WriteData+1
  2937     0684  0DF3               	rlf	??_lcd_WriteData+1,f
  2938     0685  0DF3               	rlf	??_lcd_WriteData+1,f
  2939     0686  080D               	movf	13,w	;volatile
  2940     0687  0673               	xorwf	??_lcd_WriteData+1,w
  2941     0688  39FB               	andlw	-5
  2942     0689  0673               	xorwf	??_lcd_WriteData+1,w
  2943     068A  008D               	movwf	13	;volatile
  2944     068B                     l1087:
  2945                           
  2946                           ;program.c: 105:     LATBbits.LATB3 = data & 0x01;
  2947     068B  0874               	movf	lcd_WriteData@data,w
  2948     068C  3901               	andlw	1
  2949     068D  00F2               	movwf	??_lcd_WriteData
  2950     068E  0DF2               	rlf	??_lcd_WriteData,f
  2951     068F  0DF2               	rlf	??_lcd_WriteData,f
  2952     0690  0DF2               	rlf	??_lcd_WriteData,f
  2953     0691  080D               	movf	13,w	;volatile
  2954     0692  0672               	xorwf	??_lcd_WriteData,w
  2955     0693  39F7               	andlw	-9
  2956     0694  0672               	xorwf	??_lcd_WriteData,w
  2957     0695  008D               	movwf	13	;volatile
  2958     0696                     l1089:
  2959                           
  2960                           ;program.c: 107:     lcd_EPulse();
  2961     0696  3184  244B  3186   	fcall	_lcd_EPulse
  2962     0699                     l1091:
  2963                           
  2964                           ;program.c: 109:     delay_x1o5us(25);
  2965     0699  3019               	movlw	25
  2966     069A  3184  2478  3186   	fcall	_delay_x1o5us
  2967     069D                     l91:
  2968     069D  0008               	return
  2969     069E                     __end_of_lcd_WriteData:
  2970                           
  2971                           	psect	text16
  2972     044B                     __ptext16:	
  2973 ;; *************** function _lcd_EPulse *****************
  2974 ;; Defined at:
  2975 ;;		line 84 in file "program.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0, pclath, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2989 ;;      Params:         0       0       0       0       0       0       0
  2990 ;;      Locals:         0       0       0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0
  2992 ;;      Totals:         0       0       0       0       0       0       0
  2993 ;;Total ram usage:        0 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 2
  2996 ;; This function calls:
  2997 ;;		_lcd_DelayPulse
  2998 ;; This function is called by:
  2999 ;;		_lcd_WriteData
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003     044B                     _lcd_EPulse:	
  3004                           ;psect for function _lcd_EPulse
  3005                           
  3006     044B                     l1069:	
  3007                           ;incstack = 0
  3008                           ; Regs used in _lcd_EPulse: [wreg+status,2+status,0+pclath+cstack]
  3009                           
  3010                           
  3011                           ;program.c: 85:     LATBbits.LATB4 = 1;
  3012     044B  0022               	movlb	2	; select bank2
  3013     044C  160D               	bsf	13,4	;volatile
  3014     044D                     l1071:
  3015                           
  3016                           ;program.c: 86:     lcd_DelayPulse();
  3017     044D  3184  243D  3184   	fcall	_lcd_DelayPulse
  3018     0450                     l1073:
  3019                           
  3020                           ;program.c: 88:     LATBbits.LATB4 = 0;
  3021     0450  0022               	movlb	2	; select bank2
  3022     0451  120D               	bcf	13,4	;volatile
  3023                           
  3024                           ;program.c: 89:     lcd_DelayPulse();
  3025     0452  3184  243D  3184   	fcall	_lcd_DelayPulse
  3026     0455                     l88:
  3027     0455  0008               	return
  3028     0456                     __end_of_lcd_EPulse:
  3029                           
  3030                           	psect	text17
  3031     043D                     __ptext17:	
  3032 ;; *************** function _lcd_DelayPulse *****************
  3033 ;; Defined at:
  3034 ;;		line 79 in file "program.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0, pclath, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3048 ;;      Params:         0       0       0       0       0       0       0
  3049 ;;      Locals:         0       0       0       0       0       0       0
  3050 ;;      Temps:          0       0       0       0       0       0       0
  3051 ;;      Totals:         0       0       0       0       0       0       0
  3052 ;;Total ram usage:        0 bytes
  3053 ;; Hardware stack levels used: 1
  3054 ;; Hardware stack levels required when called: 1
  3055 ;; This function calls:
  3056 ;;		_delay_x1o5us
  3057 ;; This function is called by:
  3058 ;;		_lcd_EPulse
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062     043D                     _lcd_DelayPulse:	
  3063                           ;psect for function _lcd_DelayPulse
  3064                           
  3065     043D                     l1067:	
  3066                           ;incstack = 0
  3067                           ; Regs used in _lcd_DelayPulse: [wreg+status,2+status,0+pclath+cstack]
  3068                           
  3069                           
  3070                           ;program.c: 81:     delay_x1o5us(200);
  3071     043D  30C8               	movlw	200
  3072     043E  3184  2478  3184   	fcall	_delay_x1o5us
  3073     0441                     l85:
  3074     0441  0008               	return
  3075     0442                     __end_of_lcd_DelayPulse:
  3076                           
  3077                           	psect	text18
  3078     0438                     __ptext18:	
  3079 ;; *************** function _lcd_DelaySetupTime *****************
  3080 ;; Defined at:
  3081 ;;		line 74 in file "program.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;		None
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;		None
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg, status,2, status,0, pclath, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3095 ;;      Params:         0       0       0       0       0       0       0
  3096 ;;      Locals:         0       0       0       0       0       0       0
  3097 ;;      Temps:          0       0       0       0       0       0       0
  3098 ;;      Totals:         0       0       0       0       0       0       0
  3099 ;;Total ram usage:        0 bytes
  3100 ;; Hardware stack levels used: 1
  3101 ;; Hardware stack levels required when called: 1
  3102 ;; This function calls:
  3103 ;;		_delay_x1o5us
  3104 ;; This function is called by:
  3105 ;;		_lcd_PrintCmd
  3106 ;;		_lcd_PrintChar
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110     0438                     _lcd_DelaySetupTime:	
  3111                           ;psect for function _lcd_DelaySetupTime
  3112                           
  3113     0438                     l1075:	
  3114                           ;incstack = 0
  3115                           ; Regs used in _lcd_DelaySetupTime: [wreg+status,2+status,0+pclath+cstack]
  3116                           
  3117                           
  3118                           ;program.c: 76:     delay_x1o5us(200);
  3119     0438  30C8               	movlw	200
  3120     0439  3184  2478  3184   	fcall	_delay_x1o5us
  3121     043C                     l82:
  3122     043C  0008               	return
  3123     043D                     __end_of_lcd_DelaySetupTime:
  3124                           
  3125                           	psect	text19
  3126     0533                     __ptext19:	
  3127 ;; *************** function _delay_ms *****************
  3128 ;; Defined at:
  3129 ;;		line 15 in file "program.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  delay           4    6[COMMON] unsigned long 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  i               4   10[COMMON] unsigned long 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0, pclath, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3143 ;;      Params:         4       0       0       0       0       0       0
  3144 ;;      Locals:         4       0       0       0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0
  3146 ;;      Totals:         8       0       0       0       0       0       0
  3147 ;;Total ram usage:        8 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; Hardware stack levels required when called: 2
  3150 ;; This function calls:
  3151 ;;		_delay_x24o25us
  3152 ;; This function is called by:
  3153 ;;		_programLoop
  3154 ;;		_lcd_Initialize
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158     0533                     _delay_ms:	
  3159                           ;psect for function _delay_ms
  3160                           
  3161     0533                     l1105:	
  3162                           ;incstack = 0
  3163                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
  3164                           
  3165                           
  3166                           ;program.c: 16:     for(uint32_t i=0; i<delay; i++) delay_x24o25us(41);
  3167     0533  3000               	movlw	0
  3168     0534  00FD               	movwf	delay_ms@i+3
  3169     0535  3000               	movlw	0
  3170     0536  00FC               	movwf	delay_ms@i+2
  3171     0537  3000               	movlw	0
  3172     0538  00FB               	movwf	delay_ms@i+1
  3173     0539  3000               	movlw	0
  3174     053A  00FA               	movwf	delay_ms@i
  3175     053B  2D49               	goto	l1111
  3176     053C                     l1107:
  3177     053C  3029               	movlw	41
  3178     053D  00F2               	movwf	delay_x24o25us@delay
  3179     053E  3000               	movlw	0
  3180     053F  00F3               	movwf	delay_x24o25us@delay+1
  3181     0540  3184  24AD  3185   	fcall	_delay_x24o25us
  3182     0543                     l1109:
  3183     0543  3001               	movlw	1
  3184     0544  07FA               	addwf	delay_ms@i,f
  3185     0545  3000               	movlw	0
  3186     0546  3DFB               	addwfc	delay_ms@i+1,f
  3187     0547  3DFC               	addwfc	delay_ms@i+2,f
  3188     0548  3DFD               	addwfc	delay_ms@i+3,f
  3189     0549                     l1111:
  3190     0549  0879               	movf	delay_ms@delay+3,w
  3191     054A  027D               	subwf	delay_ms@i+3,w
  3192     054B  1D03               	skipz
  3193     054C  2D57               	goto	u495
  3194     054D  0878               	movf	delay_ms@delay+2,w
  3195     054E  027C               	subwf	delay_ms@i+2,w
  3196     054F  1D03               	skipz
  3197     0550  2D57               	goto	u495
  3198     0551  0877               	movf	delay_ms@delay+1,w
  3199     0552  027B               	subwf	delay_ms@i+1,w
  3200     0553  1D03               	skipz
  3201     0554  2D57               	goto	u495
  3202     0555  0876               	movf	delay_ms@delay,w
  3203     0556  027A               	subwf	delay_ms@i,w
  3204     0557                     u495:
  3205     0557  1C03               	skipc
  3206     0558  2D5A               	goto	u491
  3207     0559  2D5B               	goto	u490
  3208     055A                     u491:
  3209     055A  2D3C               	goto	l1107
  3210     055B                     u490:
  3211     055B                     l70:
  3212     055B  0008               	return
  3213     055C                     __end_of_delay_ms:
  3214                           
  3215                           	psect	text20
  3216     04AD                     __ptext20:	
  3217 ;; *************** function _delay_x24o25us *****************
  3218 ;; Defined at:
  3219 ;;		line 10 in file "program.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  delay           2    2[COMMON] unsigned short 
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;  i               2    4[COMMON] unsigned short 
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, status,2, status,0, pclath, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3233 ;;      Params:         2       0       0       0       0       0       0
  3234 ;;      Locals:         2       0       0       0       0       0       0
  3235 ;;      Temps:          0       0       0       0       0       0       0
  3236 ;;      Totals:         4       0       0       0       0       0       0
  3237 ;;Total ram usage:        4 bytes
  3238 ;; Hardware stack levels used: 1
  3239 ;; Hardware stack levels required when called: 1
  3240 ;; This function calls:
  3241 ;;		_delay_x1o5us
  3242 ;; This function is called by:
  3243 ;;		_delay_ms
  3244 ;;		_lcd_Initialize
  3245 ;;		_lcd_ClearAll
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249     04AD                     _delay_x24o25us:	
  3250                           ;psect for function _delay_x24o25us
  3251                           
  3252     04AD                     l1093:	
  3253                           ;incstack = 0
  3254                           ; Regs used in _delay_x24o25us: [wreg+status,2+status,0+pclath+cstack]
  3255                           
  3256                           
  3257                           ;program.c: 11:     for(uint16_t i=0; i<delay; i++) delay_x1o5us(15);
  3258     04AD  01F4               	clrf	delay_x24o25us@i
  3259     04AE  01F5               	clrf	delay_x24o25us@i+1
  3260     04AF  2CB8               	goto	l1099
  3261     04B0                     l1095:
  3262     04B0  300F               	movlw	15
  3263     04B1  3184  2478  3184   	fcall	_delay_x1o5us
  3264     04B4                     l1097:
  3265     04B4  3001               	movlw	1
  3266     04B5  07F4               	addwf	delay_x24o25us@i,f
  3267     04B6  3000               	movlw	0
  3268     04B7  3DF5               	addwfc	delay_x24o25us@i+1,f
  3269     04B8                     l1099:
  3270     04B8  0873               	movf	delay_x24o25us@delay+1,w
  3271     04B9  0275               	subwf	delay_x24o25us@i+1,w
  3272     04BA  1D03               	skipz
  3273     04BB  2CBE               	goto	u485
  3274     04BC  0872               	movf	delay_x24o25us@delay,w
  3275     04BD  0274               	subwf	delay_x24o25us@i,w
  3276     04BE                     u485:
  3277     04BE  1C03               	skipc
  3278     04BF  2CC1               	goto	u481
  3279     04C0  2CC2               	goto	u480
  3280     04C1                     u481:
  3281     04C1  2CB0               	goto	l1095
  3282     04C2                     u480:
  3283     04C2                     l64:
  3284     04C2  0008               	return
  3285     04C3                     __end_of_delay_x24o25us:
  3286                           
  3287                           	psect	text21
  3288     0478                     __ptext21:	
  3289 ;; *************** function _delay_x1o5us *****************
  3290 ;; Defined at:
  3291 ;;		line 5 in file "program.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  delay           1    wreg     unsigned char 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  delay           1    0[COMMON] unsigned char 
  3296 ;;  i               1    1[COMMON] unsigned char 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3306 ;;      Params:         0       0       0       0       0       0       0
  3307 ;;      Locals:         2       0       0       0       0       0       0
  3308 ;;      Temps:          0       0       0       0       0       0       0
  3309 ;;      Totals:         2       0       0       0       0       0       0
  3310 ;;Total ram usage:        2 bytes
  3311 ;; Hardware stack levels used: 1
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_delay_x24o25us
  3316 ;;		_lcd_DelaySetupTime
  3317 ;;		_lcd_DelayPulse
  3318 ;;		_lcd_WriteData
  3319 ;;		_var_Read
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323     0478                     _delay_x1o5us:	
  3324                           ;psect for function _delay_x1o5us
  3325                           
  3326                           
  3327                           ;incstack = 0
  3328                           ; Regs used in _delay_x1o5us: [wreg+status,2+status,0]
  3329                           ;delay_x1o5us@delay stored from wreg
  3330     0478  00F0               	movwf	delay_x1o5us@delay
  3331     0479                     l1061:
  3332                           
  3333                           ;program.c: 6:     for(uint8_t i=0; i<delay; i++) __nop();
  3334     0479  01F1               	clrf	delay_x1o5us@i
  3335     047A  2C7E               	goto	l1065
  3336     047B                     l56:
  3337     047B  0000               	nop
  3338     047C                     l1063:
  3339     047C  3001               	movlw	1
  3340     047D  07F1               	addwf	delay_x1o5us@i,f
  3341     047E                     l1065:
  3342     047E  0870               	movf	delay_x1o5us@delay,w
  3343     047F  0271               	subwf	delay_x1o5us@i,w
  3344     0480  1C03               	skipc
  3345     0481  2C83               	goto	u401
  3346     0482  2C84               	goto	u400
  3347     0483                     u401:
  3348     0483  2C7B               	goto	l56
  3349     0484                     u400:
  3350     0484                     l58:
  3351     0484  0008               	return
  3352     0485                     __end_of_delay_x1o5us:
  3353     0001                     ___latbits      equ	1
  3354     007E                     btemp           set	126	;btemp
  3355     007E                     wtemp0          set	126
  3356                           
  3357                           	psect	config
  3358                           
  3359                           ;Config register CONFIG1 @ 0x8007
  3360                           ;	Oscillator Selection
  3361                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  3362                           ;	Watchdog Timer Enable
  3363                           ;	WDTE = OFF, WDT disabled
  3364                           ;	Power-up Timer Enable
  3365                           ;	PWRTE = OFF, PWRT disabled
  3366                           ;	MCLR Pin Function Select
  3367                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3368                           ;	Flash Program Memory Code Protection
  3369                           ;	CP = OFF, Program memory code protection is disabled
  3370                           ;	Data Memory Code Protection
  3371                           ;	CPD = OFF, Data memory code protection is disabled
  3372                           ;	Brown-out Reset Enable
  3373                           ;	BOREN = OFF, Brown-out Reset disabled
  3374                           ;	Clock Out Enable
  3375                           ;	CLKOUTEN = ON, CLKOUT function is enabled on the CLKOUT pin
  3376                           ;	Internal/External Switchover
  3377                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3378                           ;	Fail-Safe Clock Monitor Enable
  3379                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3380     8007                     	org	32775
  3381     8007  01E2               	dw	482
  3382                           
  3383                           ;Config register CONFIG2 @ 0x8008
  3384                           ;	Flash Memory Self-Write Protection
  3385                           ;	WRT = OFF, Write protection off
  3386                           ;	Voltage Regulator Capacitor Enable bit
  3387                           ;	VCAPEN = OFF, Vcap functionality is disabled on RA6.
  3388                           ;	PLL Enable
  3389                           ;	PLLEN = ON, 4x PLL enabled
  3390                           ;	Stack Overflow/Underflow Reset Enable
  3391                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3392                           ;	Brown-out Reset Voltage Selection
  3393                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3394                           ;	Low Power Brown-Out Reset Enable Bit
  3395                           ;	LPBOR = 0x1, unprogrammed default
  3396                           ;	In-Circuit Debugger Mode
  3397                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  3398                           ;	Low-Voltage Programming Enable
  3399                           ;	LVP = ON, Low-voltage programming enabled
  3400     8008                     	org	32776
  3401     8008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     43      43
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0

Pointer List with Targets:

    lcd_PrintString@string	PTR unsigned char  size(2) Largest target is 13
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), STR_1(CODE[13]), 

    memset@dest	PTR void  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 

    memset@p	PTR unsigned char  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 

    sp__memset	PTR void  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 


Critical Paths under _main in COMMON

    _programLoop->_delay_ms
    _var_Read->_delay_x1o5us
    _lcd_PrintDigitInt32->___aldiv
    _lcd_PrintString->_lcd_PrintChar
    _lcd_PrintChar->_lcd_WriteData
    _lcd_Goto->_lcd_PrintCmd
    _lcd_Initialize->_delay_ms
    _lcd_PrintCmd->_lcd_WriteData
    _lcd_WriteData->_delay_x1o5us
    _lcd_DelayPulse->_delay_x1o5us
    _lcd_DelaySetupTime->_delay_x1o5us
    _delay_ms->_delay_x24o25us
    _delay_x24o25us->_delay_x1o5us

Critical Paths under _main in BANK0

    _main->_programLoop
    _programLoop->_lcd_PrintDigitInt32

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3989
                  _programInitialize
                        _programLoop
 ---------------------------------------------------------------------------------
 (1) _programLoop                                          2     2      0    3317
                                             41 BANK0      2     2      0
                           _delay_ms
                           _lcd_Goto
                _lcd_PrintDigitInt32
                    _lcd_PrintString
                           _var_Read
 ---------------------------------------------------------------------------------
 (2) _var_Read                                             9     7      2      53
                                              2 COMMON     9     7      2
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (2) _lcd_PrintDigitInt32                                 41    34      7    2105
                                              0 BANK0     41    34      7
                            ___aldiv
                             ___bmul
                               _labs
                      _lcd_PrintChar
                    _lcd_PrintString
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               6     1      5     108
                                              0 COMMON     6     1      5
 ---------------------------------------------------------------------------------
 (2) _lcd_PrintString                                      3     1      2     468
                                              6 COMMON     3     1      2
                      _lcd_PrintChar
 ---------------------------------------------------------------------------------
 (3) _lcd_PrintChar                                        1     1      0     420
                                              5 COMMON     1     1      0
                 _lcd_DelaySetupTime
                      _lcd_WriteData
 ---------------------------------------------------------------------------------
 (3) _labs                                                 4     0      4      68
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     109
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     304
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _lcd_Goto                                             2     1      1     518
                                              6 COMMON     2     1      1
                       _lcd_PrintCmd
 ---------------------------------------------------------------------------------
 (1) _programInitialize                                    0     0      0     672
                     _lcd_Initialize
                     _var_Initialize
 ---------------------------------------------------------------------------------
 (2) _var_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_Initialize                                       0     0      0     672
                           _delay_ms
                     _delay_x24o25us
                       _lcd_PrintCmd
 ---------------------------------------------------------------------------------
 (3) _lcd_PrintCmd                                         1     1      0     420
                                              5 COMMON     1     1      0
                 _lcd_DelaySetupTime
                      _lcd_WriteData
 ---------------------------------------------------------------------------------
 (4) _lcd_WriteData                                        3     3      0     338
                                              2 COMMON     3     3      0
                       _delay_x1o5us
                         _lcd_EPulse
 ---------------------------------------------------------------------------------
 (5) _lcd_EPulse                                           0     0      0      53
                     _lcd_DelayPulse
 ---------------------------------------------------------------------------------
 (6) _lcd_DelayPulse                                       0     0      0      53
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (4) _lcd_DelaySetupTime                                   0     0      0      53
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             8     4      4     150
                                              6 COMMON     8     4      4
                     _delay_x24o25us
 ---------------------------------------------------------------------------------
 (3) _delay_x24o25us                                       4     2      2     102
                                              2 COMMON     4     2      2
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (3) _delay_x1o5us                                         2     2      0      53
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _programInitialize
     _lcd_Initialize
       _delay_ms
         _delay_x24o25us
           _delay_x1o5us
       _delay_x24o25us
       _lcd_PrintCmd
         _lcd_DelaySetupTime
           _delay_x1o5us
         _lcd_WriteData
           _delay_x1o5us
           _lcd_EPulse
             _lcd_DelayPulse
               _delay_x1o5us
     _var_Initialize
   _programLoop
     _delay_ms
     _lcd_Goto
       _lcd_PrintCmd
     _lcd_PrintDigitInt32
       ___aldiv
       ___bmul
       _labs
       _lcd_PrintChar
         _lcd_DelaySetupTime
         _lcd_WriteData
       _lcd_PrintString
         _lcd_PrintChar
       _memset
     _lcd_PrintString
     _var_Read
       _delay_x1o5us

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BIGRAM             480      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     43      43     53.8%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      57      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Sep 20 23:07:14 2024

                  ??_lcd_PrintCmd 0075                    ___bmul@product 0071                _lcd_DelaySetupTime 0438  
                              l70 055B                                l56 047B                                l64 04C2  
                              l73 0532                                l58 0484                                l82 043C  
                              l91 069D                                l85 0441                                l94 0460  
                              l88 0455                                l97 05BE                   ??_lcd_PrintChar 0075  
                             l111 046B                               l108 050D                               l117 04D9  
                             l141 07FC                               l150 058B                               l144 0477  
                             l129 0752                               l147 0568                               l326 0497  
                             l365 06B0                               l375 0728                               l911 0474  
                             l907 046C                               l763 04AC                               l909 0470  
                             l769 04F0                               u400 0484                               u401 0483  
                             u500 04D9                               u501 04D8                               u510 04F0  
                             u415 061A                               u511 04EF                               u520 049C  
                             u425 062B                               u521 049B                               u610 06FA  
                             u530 048B                               u435 063A                               u611 06F9  
                             u531 048A                               u540 0496                               u700 07DB  
                             u445 064A                               u605 06E2                               u541 0495  
                             u701 07DA                               u630 0710                               u550 06A3  
                             u710 07E4                               u455 065E                               u631 070F  
                             u615 06F6                               u551 06A2                               u711 07E3  
                             u480 04C2                               u640 0715                               u560 06B4  
                             u720 056C                               u481 04C1                               u465 066F  
                             u641 0714                               u625 0704                               u561 06B3  
                             u705 07D7                               u721 056B                               u490 055B  
                             u570 06D1                               u650 0749                               u491 055A  
                             u475 067E                               u571 06D0                               u651 0748  
                             u660 074E                               u740 05EB                               u485 04BE  
                             u661 074D                               u741 05E8                               u590 06E1  
                             u670 076D                               u495 0557                               u591 06E0  
                             u671 076C                               u735 056F                               u680 07B0  
                             u585 06D5                               u681 07AF                               u690 07BA  
                             u754 05ED                               u691 07B9               ?_lcd_DelaySetupTime 0070  
                             wreg 0009               _lcd_PrintDigitInt32 0729                              l1101 0462  
                            l1111 0549                              l1103 0464                              l1105 0533  
                            l1121 0457                              l1201 04F9                              l1113 04C3  
                            l1107 053C                              l1123 0459                              l1203 04FF  
                            l1115 04C4                              l1131 04E4                              l1211 072C  
                            l1061 0479                              l1109 0543                              l1141 0486  
                            l1133 0498                              l1117 04CC                              l1125 04DA  
                            l1221 0768                              l1213 0738                              l1301 0445  
                            l1063 047C                              l1071 044D                              l1207 0505  
                            l1151 0496                              l1143 0487                              l1135 049C  
                            l1119 04D0                              l1127 04DD                              l1231 079F  
                            l1223 076D                              l1215 0744                              l1065 047E  
                            l1073 0450                              l1081 065B                              l1161 06B4  
                            l1145 048B                              l1137 049D                              l1129 04E2  
                            l1241 07B4                              l1233 07A6                              l1225 0771  
                            l1217 0749                              l1209 0729                              l1075 0438  
                            l1067 043D                              l1091 0699                              l1083 066C  
                            l1171 06D4                              l1163 06BF                              l1155 069E  
                            l1147 048D                              l1251 07DB                              l1243 07BA  
                            l1235 07A8                              l1227 077A                              l1219 074E  
                            l1093 04AD                              l1069 044B                              l1085 067B  
                            l1077 0617                              l1181 0702                              l1173 06DD  
                            l1165 06C1                              l1157 069F                              l1149 048F  
                            l1261 07F0                              l1253 07DE                              l1245 07BF  
                            l1237 07B0                              l1229 0796                              l1095 04B0  
                            l1087 068B                              l1079 0658                              l1191 0720  
                            l1183 0703                              l1175 06E1                              l1167 06C9  
                            l1159 06A3                              l1263 07F2                              l1255 07DF  
                            l1247 07C3                              l1239 07B2                              l1271 0561  
                            l1097 04B4                              l1089 0696                              l1281 050E  
                            l1185 070A                              l1177 06E8                              l1169 06D1  
                            l1249 07C6                              l1273 0562                              l1099 04B8  
                            l1195 058C                              l1283 052C                              l1179 06FA  
                            l1187 0710                              l1267 07F5                              l1259 07E5  
                            l1275 0566                              l1291 05ED                              l1197 04F2  
                            l1189 0715                              l1277 056C                              l1269 055C  
                            l1293 05F5                              l1285 05BF                              l1199 04F3  
                            l1295 05FA                              l1287 05D0                              l1297 0609  
                            l1289 05E1                              l1299 0442                              STR_1 0800  
                 ??_lcd_WriteData 0072               programLoop@varValue 0049                              _labs 0498  
                            _main 0442                              fsr0h 0005                              fsr1h 0007  
                            indf0 0000                              fsr0l 0004                              indf1 0001  
                            fsr1l 0006                              btemp 007E              ??_lcd_DelaySetupTime 0072  
                            start 0002              ?_lcd_PrintDigitInt32 0020                 ___bmul@multiplier 0072  
            __end_of_delay_x1o5us 0485                 ??_lcd_PrintString 0078                   __end_of___aldiv 0729  
                           ?_labs 0070                             ?_main 0070                             labs@a 0070  
             delay_x24o25us@delay 0072                             status 0003                             wtemp0 007E  
           ??_lcd_PrintDigitInt32 0027                   __initialization 07FD                      __end_of_labs 04AD  
                    __end_of_main 044B                            ??_labs 0074                            ??_main 007E  
        lcd_PrintDigitInt32@tempC 0045          lcd_PrintDigitInt32@tempN 0041                            _ADRESH 009C  
            __end_of_lcd_PrintCmd 0461                  __end_of_delay_ms 055C                 delay_x1o5us@delay 0070  
                __end_of_lcd_Goto 050E                            ___bmul 0485                         ??___aldiv 0078  
                          _memset 04DA                    _delay_x24o25us 04AD                  __end_of_var_Read 058C  
          lcd_PrintChar@character 0075           __end_of__initialization 07FD     lcd_PrintDigitInt32@numberChar 0036  
                    ?_programLoop 0070               ___bmul@multiplicand 0070                    __pcstackCOMMON 0070  
             lcd_PrintCmd@command 0075            __end_of_delay_x24o25us 04C3                    _var_Initialize 046C  
   lcd_PrintDigitInt32@totalDigit 0047                      _delay_x1o5us 0478                 _programInitialize 050E  
                 _lcd_PrintString 04C3                        __pmaintext 0442                ?_programInitialize 0070  
                         ?___bmul 0070                        _lcd_EPulse 044B            __end_of_var_Initialize 0478  
                 ?_delay_x24o25us 0072                           ?_memset 0070               ??_programInitialize 007E  
           __end_of_lcd_PrintChar 046C                         ?_delay_ms 0076                         ?_lcd_Goto 0076  
       __end_of_programInitialize 0533             __end_of_lcd_WriteData 069E             lcd_PrintDigitInt32@i1 0048  
           lcd_PrintDigitInt32@i2 0046                         ?_var_Read 0072                           ___aldiv 069E  
                 ?_var_Initialize 0070                      _lcd_PrintCmd 0456                           __ptext1 05BF  
                         __ptext2 055C                           __ptext3 0729                           __ptext4 04DA  
                         __ptext5 04C3                           __ptext6 0461                           __ptext7 0498  
                         __ptext8 0485                           __ptext9 069E                  ___aldiv@dividend 0074  
                      ??_delay_ms 007A                        ??_lcd_Goto 0077              end_of_initialization 07FD  
         __end_of_lcd_PrintString 04DA        lcd_PrintDigitInt32@noDigit 0024       __end_of_lcd_PrintDigitInt32 07FD  
                         memset@c 0071                           memset@n 0073                           memset@p 0075  
                      ??_var_Read 0074                  ___aldiv@quotient 007A                       ?_lcd_EPulse 0070  
                       _TRISAbits 008C                         _TRISBbits 008D                         _TRISCbits 008E  
                  _lcd_DelayPulse 043D                     delay_x1o5us@i 0071                    __end_of___bmul 0498  
                   delay_ms@delay 0076                    __end_of_memset 04F1            __end_of_lcd_DelayPulse 0442  
             start_initialization 07FD                  ?_lcd_PrintString 0076  lcd_PrintDigitInt32@numberRevChar 002B  
                  _lcd_Initialize 058C                  ??_delay_x24o25us 0074                          ??___bmul 0071  
                        ??_memset 0075                        memset@dest 0070                   ?_lcd_DelayPulse 0070  
                       ___latbits 0001                     __pcstackBANK0 0020            __end_of_lcd_Initialize 05BF  
                ??_var_Initialize 0070                          ?___aldiv 0070                   ?_lcd_Initialize 0070  
                 ___aldiv@divisor 0070        __end_of_lcd_DelaySetupTime 043D                   ___aldiv@counter 0078  
                        _LATBbits 010D                          _LATCbits 010E                         delay_ms@i 007A  
                    ??_lcd_EPulse 0072                         lcd_Goto@x 0076                         lcd_Goto@y 0077  
               lcd_WriteData@data 0074                        _ADCON0bits 009D                        _ADCON1bits 009E  
                      _ADCON2bits 009F                __end_of_lcd_EPulse 0456                     ??_programLoop 007E  
                      _ANSELAbits 018C                        _ANSELBbits 018D                     _lcd_PrintChar 0461  
                        _delay_ms 0533                          __ptext10 04F1                          __ptext11 050E  
                        __ptext20 04AD                          __ptext12 046C                          __ptext21 0478  
                        __ptext13 058C                          __ptext14 0456                          __ptext15 0616  
                        __ptext16 044B                          __ptext17 043D                          __ptext18 0438  
                        __ptext19 0533                          _lcd_Goto 04F1                     ?_delay_x1o5us 0070  
                   _lcd_WriteData 0616                          _var_Read 055C               __end_of_programLoop 0616  
                ??_lcd_DelayPulse 0072                    ?_lcd_PrintChar 0070                    ??_delay_x1o5us 0070  
                  ?_lcd_WriteData 0070         lcd_PrintDigitInt32@enSign 0025         lcd_PrintDigitInt32@enZero 0026  
       lcd_PrintDigitInt32@number 0020                   delay_x24o25us@i 0074                     ?_lcd_PrintCmd 0070  
                   __pstringtext1 0800                     __pstringtext2 0000                      ___aldiv@sign 0079  
                ??_lcd_Initialize 007E             lcd_PrintString@string 0076                       _programLoop 05BF  
